{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fc302d12",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60abbccd",
   "metadata": {},
   "source": [
    " ## Importing and Prepping the Data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "20aa45c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv(\"data_combined (2).csv\")\n",
    "data = data.drop(\"Unnamed: 0\", axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1e119590",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"telco_data.csv\")\n",
    "df = df.drop(\"Unnamed: 0\", axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4a2b3cf2",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd.options.display.max_columns = None\n",
    "# so that we can see all the columns/rows without being truncated"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "8d60af5b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>OnlineBackup</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "      <th>Age</th>\n",
       "      <th>Avg Monthly GB Download</th>\n",
       "      <th>Avg Monthly Long Distance Charges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>Churn Value</th>\n",
       "      <th>City</th>\n",
       "      <th>Device Protection Plan</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Internet Service</th>\n",
       "      <th>Internet Type</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>Monthly Charge</th>\n",
       "      <th>Multiple Lines</th>\n",
       "      <th>Number of Dependents</th>\n",
       "      <th>Number of Referrals</th>\n",
       "      <th>Offer</th>\n",
       "      <th>Online Backup</th>\n",
       "      <th>Online Security</th>\n",
       "      <th>Paperless Billing</th>\n",
       "      <th>Payment Method</th>\n",
       "      <th>Phone Service</th>\n",
       "      <th>Population</th>\n",
       "      <th>Premium Tech Support</th>\n",
       "      <th>Product/Service Issues Reported</th>\n",
       "      <th>Referred a Friend</th>\n",
       "      <th>Senior Citizen</th>\n",
       "      <th>Streaming Movies</th>\n",
       "      <th>Streaming Music</th>\n",
       "      <th>Streaming TV</th>\n",
       "      <th>Tenure in Months</th>\n",
       "      <th>Total Customer Svc Requests</th>\n",
       "      <th>Total Extra Data Charges</th>\n",
       "      <th>Total Long Distance Charges</th>\n",
       "      <th>Total Refunds</th>\n",
       "      <th>Total Regular Charges</th>\n",
       "      <th>Under 30</th>\n",
       "      <th>Unlimited Data</th>\n",
       "      <th>Zip Code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3964</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.973616</td>\n",
       "      <td>-118.249020</td>\n",
       "      <td>1</td>\n",
       "      <td>29.850</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Offer E</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Bank Withdrawal</td>\n",
       "      <td>0</td>\n",
       "      <td>54492</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.5</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>16</td>\n",
       "      <td>17.09</td>\n",
       "      <td>3441</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.949255</td>\n",
       "      <td>-118.246978</td>\n",
       "      <td>0</td>\n",
       "      <td>56.950</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Mailed Check</td>\n",
       "      <td>1</td>\n",
       "      <td>44586</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>30.23</td>\n",
       "      <td>581.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1889.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.15</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>23</td>\n",
       "      <td>10.47</td>\n",
       "      <td>3239</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.964131</td>\n",
       "      <td>-118.272783</td>\n",
       "      <td>0</td>\n",
       "      <td>56.004</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Credit Card</td>\n",
       "      <td>1</td>\n",
       "      <td>58198</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.94</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108.15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4307</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>34.076259</td>\n",
       "      <td>-118.310715</td>\n",
       "      <td>0</td>\n",
       "      <td>42.300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Bank Withdrawal</td>\n",
       "      <td>0</td>\n",
       "      <td>67852</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>56</td>\n",
       "      <td>9.12</td>\n",
       "      <td>2701</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Cable</td>\n",
       "      <td>34.059281</td>\n",
       "      <td>-118.307420</td>\n",
       "      <td>0</td>\n",
       "      <td>73.528</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Bank Withdrawal</td>\n",
       "      <td>1</td>\n",
       "      <td>43019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>90005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gender  SeniorCitizen  Partner  Dependents  tenure  PhoneService  \\\n",
       "0       0              0        1           0       1             0   \n",
       "1       1              0        0           0      34             1   \n",
       "2       1              0        0           0       2             1   \n",
       "3       1              0        0           0      45             0   \n",
       "4       0              0        0           0       2             1   \n",
       "\n",
       "      MultipleLines InternetService OnlineSecurity OnlineBackup  \\\n",
       "0  No phone service             DSL              0            1   \n",
       "1                 0             DSL              1            0   \n",
       "2                 0             DSL              1            1   \n",
       "3  No phone service             DSL              1            0   \n",
       "4                 0     Fiber optic              0            0   \n",
       "\n",
       "  DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n",
       "0                0           0           0               0  Month-to-month   \n",
       "1                1           0           0               0        One year   \n",
       "2                0           0           0               0  Month-to-month   \n",
       "3                1           1           0               0        One year   \n",
       "4                0           0           0               0  Month-to-month   \n",
       "\n",
       "   PaperlessBilling              PaymentMethod  MonthlyCharges TotalCharges  \\\n",
       "0                 1           Electronic check           29.85        29.85   \n",
       "1                 0               Mailed check           56.95       1889.5   \n",
       "2                 1               Mailed check           53.85       108.15   \n",
       "3                 0  Bank transfer (automatic)           42.30      1840.75   \n",
       "4                 1           Electronic check           70.70       151.65   \n",
       "\n",
       "   Churn  Age  Avg Monthly GB Download  Avg Monthly Long Distance Charges  \\\n",
       "0      0   36                       10                               0.00   \n",
       "1      0   46                       16                              17.09   \n",
       "2      1   37                       23                              10.47   \n",
       "3      0   53                       10                               0.00   \n",
       "4      1   19                       56                               9.12   \n",
       "\n",
       "   CLTV  Churn Value         City  Device Protection Plan  Gender  \\\n",
       "0  3964            0  Los Angeles                       0       0   \n",
       "1  3441            0  Los Angeles                       1       1   \n",
       "2  3239            1  Los Angeles                       0       1   \n",
       "3  4307            0  Los Angeles                       1       1   \n",
       "4  2701            1  Los Angeles                       0       0   \n",
       "\n",
       "   Internet Service Internet Type   Latitude   Longitude  Married  \\\n",
       "0                 1   Fiber Optic  33.973616 -118.249020        1   \n",
       "1                 1   Fiber Optic  33.949255 -118.246978        0   \n",
       "2                 1   Fiber Optic  33.964131 -118.272783        0   \n",
       "3                 1           DSL  34.076259 -118.310715        0   \n",
       "4                 1         Cable  34.059281 -118.307420        0   \n",
       "\n",
       "   Monthly Charge  Multiple Lines  Number of Dependents  Number of Referrals  \\\n",
       "0          29.850               0                     0                    0   \n",
       "1          56.950               0                     0                    0   \n",
       "2          56.004               0                     0                    0   \n",
       "3          42.300               0                     0                    0   \n",
       "4          73.528               0                     2                    0   \n",
       "\n",
       "     Offer  Online Backup  Online Security  Paperless Billing  \\\n",
       "0  Offer E              1                0                  1   \n",
       "1     None              0                1                  0   \n",
       "2     None              1                1                  1   \n",
       "3     None              0                1                  0   \n",
       "4     None              0                0                  1   \n",
       "\n",
       "    Payment Method  Phone Service  Population  Premium Tech Support  \\\n",
       "0  Bank Withdrawal              0       54492                     0   \n",
       "1     Mailed Check              1       44586                     0   \n",
       "2      Credit Card              1       58198                     0   \n",
       "3  Bank Withdrawal              0       67852                     1   \n",
       "4  Bank Withdrawal              1       43019                     0   \n",
       "\n",
       "   Product/Service Issues Reported  Referred a Friend  Senior Citizen  \\\n",
       "0                                0                  0               0   \n",
       "1                                0                  0               0   \n",
       "2                                0                  0               0   \n",
       "3                                0                  0               0   \n",
       "4                                0                  0               0   \n",
       "\n",
       "   Streaming Movies  Streaming Music  Streaming TV  Tenure in Months  \\\n",
       "0                 0                0             0                 1   \n",
       "1                 0                0             0                34   \n",
       "2                 0                0             0                 2   \n",
       "3                 0                0             0                45   \n",
       "4                 0                0             0                 2   \n",
       "\n",
       "   Total Customer Svc Requests  Total Extra Data Charges  \\\n",
       "0                            2                      0.00   \n",
       "1                            1                     30.23   \n",
       "2                            4                      0.00   \n",
       "3                            4                      0.00   \n",
       "4                            0                      0.00   \n",
       "\n",
       "   Total Long Distance Charges  Total Refunds  Total Regular Charges  \\\n",
       "0                         0.00            0.0                  29.85   \n",
       "1                       581.06            0.0                1889.50   \n",
       "2                        20.94            0.0                 108.15   \n",
       "3                         0.00            0.0                1840.75   \n",
       "4                        18.24            0.0                 151.65   \n",
       "\n",
       "   Under 30  Unlimited Data  Zip Code  \n",
       "0         0               1     90001  \n",
       "1         0               1     90002  \n",
       "2         0               1     90003  \n",
       "3         0               1     90004  \n",
       "4         1               1     90005  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f40391c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>Churn</th>\n",
       "      <th>Age</th>\n",
       "      <th>Avg Monthly GB Download</th>\n",
       "      <th>Avg Monthly Long Distance Charges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>Churn Value</th>\n",
       "      <th>Device Protection Plan</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Internet Service</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>Monthly Charge</th>\n",
       "      <th>Multiple Lines</th>\n",
       "      <th>Number of Dependents</th>\n",
       "      <th>Number of Referrals</th>\n",
       "      <th>Online Backup</th>\n",
       "      <th>Online Security</th>\n",
       "      <th>Paperless Billing</th>\n",
       "      <th>Phone Service</th>\n",
       "      <th>Population</th>\n",
       "      <th>Premium Tech Support</th>\n",
       "      <th>Product/Service Issues Reported</th>\n",
       "      <th>Referred a Friend</th>\n",
       "      <th>Senior Citizen</th>\n",
       "      <th>Streaming Movies</th>\n",
       "      <th>Streaming Music</th>\n",
       "      <th>Streaming TV</th>\n",
       "      <th>Tenure in Months</th>\n",
       "      <th>Total Customer Svc Requests</th>\n",
       "      <th>Total Extra Data Charges</th>\n",
       "      <th>Total Long Distance Charges</th>\n",
       "      <th>Total Refunds</th>\n",
       "      <th>Total Regular Charges</th>\n",
       "      <th>Under 30</th>\n",
       "      <th>Unlimited Data</th>\n",
       "      <th>Zip Code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "      <td>7043.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.504756</td>\n",
       "      <td>0.162147</td>\n",
       "      <td>0.483033</td>\n",
       "      <td>0.299588</td>\n",
       "      <td>32.371149</td>\n",
       "      <td>0.903166</td>\n",
       "      <td>0.592219</td>\n",
       "      <td>64.761692</td>\n",
       "      <td>0.265370</td>\n",
       "      <td>46.509726</td>\n",
       "      <td>21.110890</td>\n",
       "      <td>22.958954</td>\n",
       "      <td>4400.295755</td>\n",
       "      <td>0.265370</td>\n",
       "      <td>0.343888</td>\n",
       "      <td>0.504756</td>\n",
       "      <td>0.783331</td>\n",
       "      <td>36.197455</td>\n",
       "      <td>-119.756684</td>\n",
       "      <td>0.483033</td>\n",
       "      <td>65.538800</td>\n",
       "      <td>0.421837</td>\n",
       "      <td>0.468692</td>\n",
       "      <td>1.951867</td>\n",
       "      <td>0.344881</td>\n",
       "      <td>0.286668</td>\n",
       "      <td>0.592219</td>\n",
       "      <td>0.903166</td>\n",
       "      <td>22139.603294</td>\n",
       "      <td>0.290217</td>\n",
       "      <td>0.308107</td>\n",
       "      <td>0.457476</td>\n",
       "      <td>0.162147</td>\n",
       "      <td>0.387903</td>\n",
       "      <td>0.353259</td>\n",
       "      <td>0.384353</td>\n",
       "      <td>32.386767</td>\n",
       "      <td>1.338776</td>\n",
       "      <td>278.499225</td>\n",
       "      <td>749.099262</td>\n",
       "      <td>1.962182</td>\n",
       "      <td>2280.381264</td>\n",
       "      <td>0.198921</td>\n",
       "      <td>0.383927</td>\n",
       "      <td>93486.070567</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.500013</td>\n",
       "      <td>0.368612</td>\n",
       "      <td>0.499748</td>\n",
       "      <td>0.458110</td>\n",
       "      <td>24.559481</td>\n",
       "      <td>0.295752</td>\n",
       "      <td>0.491457</td>\n",
       "      <td>30.090047</td>\n",
       "      <td>0.441561</td>\n",
       "      <td>16.750352</td>\n",
       "      <td>20.948471</td>\n",
       "      <td>15.448113</td>\n",
       "      <td>1183.057152</td>\n",
       "      <td>0.441561</td>\n",
       "      <td>0.475038</td>\n",
       "      <td>0.500013</td>\n",
       "      <td>0.412004</td>\n",
       "      <td>2.468929</td>\n",
       "      <td>2.154425</td>\n",
       "      <td>0.499748</td>\n",
       "      <td>30.606805</td>\n",
       "      <td>0.493888</td>\n",
       "      <td>0.962802</td>\n",
       "      <td>3.001199</td>\n",
       "      <td>0.475363</td>\n",
       "      <td>0.452237</td>\n",
       "      <td>0.491457</td>\n",
       "      <td>0.295752</td>\n",
       "      <td>21152.392837</td>\n",
       "      <td>0.453895</td>\n",
       "      <td>0.717514</td>\n",
       "      <td>0.498224</td>\n",
       "      <td>0.368612</td>\n",
       "      <td>0.487307</td>\n",
       "      <td>0.478016</td>\n",
       "      <td>0.486477</td>\n",
       "      <td>24.542061</td>\n",
       "      <td>1.430471</td>\n",
       "      <td>685.039625</td>\n",
       "      <td>846.660055</td>\n",
       "      <td>7.902614</td>\n",
       "      <td>2266.220462</td>\n",
       "      <td>0.399217</td>\n",
       "      <td>0.486375</td>\n",
       "      <td>1856.767505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>18.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2003.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>32.555828</td>\n",
       "      <td>-124.301372</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>18.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>18.800000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>90001.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>35.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>32.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>9.210000</td>\n",
       "      <td>3469.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>33.990646</td>\n",
       "      <td>-121.788090</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>35.890000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2344.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>70.545000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>400.150000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>92101.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>70.350000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>22.890000</td>\n",
       "      <td>4527.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>36.205465</td>\n",
       "      <td>-119.595293</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>71.968000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>17554.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>401.440000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1394.550000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>93518.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>89.850000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>36.395000</td>\n",
       "      <td>5380.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>38.161321</td>\n",
       "      <td>-117.969795</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>90.650000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>36125.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>182.620000</td>\n",
       "      <td>1191.100000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3786.600000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>95329.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>118.750000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>94.000000</td>\n",
       "      <td>49.990000</td>\n",
       "      <td>6500.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>41.962127</td>\n",
       "      <td>-114.192901</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>123.084000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>105285.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>72.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>6477.000000</td>\n",
       "      <td>3564.720000</td>\n",
       "      <td>49.790000</td>\n",
       "      <td>8684.800000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>96150.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            gender  SeniorCitizen      Partner   Dependents       tenure  \\\n",
       "count  7043.000000    7043.000000  7043.000000  7043.000000  7043.000000   \n",
       "mean      0.504756       0.162147     0.483033     0.299588    32.371149   \n",
       "std       0.500013       0.368612     0.499748     0.458110    24.559481   \n",
       "min       0.000000       0.000000     0.000000     0.000000     0.000000   \n",
       "25%       0.000000       0.000000     0.000000     0.000000     9.000000   \n",
       "50%       1.000000       0.000000     0.000000     0.000000    29.000000   \n",
       "75%       1.000000       0.000000     1.000000     1.000000    55.000000   \n",
       "max       1.000000       1.000000     1.000000     1.000000    72.000000   \n",
       "\n",
       "       PhoneService  PaperlessBilling  MonthlyCharges        Churn  \\\n",
       "count   7043.000000       7043.000000     7043.000000  7043.000000   \n",
       "mean       0.903166          0.592219       64.761692     0.265370   \n",
       "std        0.295752          0.491457       30.090047     0.441561   \n",
       "min        0.000000          0.000000       18.250000     0.000000   \n",
       "25%        1.000000          0.000000       35.500000     0.000000   \n",
       "50%        1.000000          1.000000       70.350000     0.000000   \n",
       "75%        1.000000          1.000000       89.850000     1.000000   \n",
       "max        1.000000          1.000000      118.750000     1.000000   \n",
       "\n",
       "               Age  Avg Monthly GB Download  \\\n",
       "count  7043.000000              7043.000000   \n",
       "mean     46.509726                21.110890   \n",
       "std      16.750352                20.948471   \n",
       "min      19.000000                 0.000000   \n",
       "25%      32.000000                 3.000000   \n",
       "50%      46.000000                17.000000   \n",
       "75%      60.000000                28.000000   \n",
       "max      80.000000                94.000000   \n",
       "\n",
       "       Avg Monthly Long Distance Charges         CLTV  Churn Value  \\\n",
       "count                        7043.000000  7043.000000  7043.000000   \n",
       "mean                           22.958954  4400.295755     0.265370   \n",
       "std                            15.448113  1183.057152     0.441561   \n",
       "min                             0.000000  2003.000000     0.000000   \n",
       "25%                             9.210000  3469.000000     0.000000   \n",
       "50%                            22.890000  4527.000000     0.000000   \n",
       "75%                            36.395000  5380.500000     1.000000   \n",
       "max                            49.990000  6500.000000     1.000000   \n",
       "\n",
       "       Device Protection Plan       Gender  Internet Service     Latitude  \\\n",
       "count             7043.000000  7043.000000       7043.000000  7043.000000   \n",
       "mean                 0.343888     0.504756          0.783331    36.197455   \n",
       "std                  0.475038     0.500013          0.412004     2.468929   \n",
       "min                  0.000000     0.000000          0.000000    32.555828   \n",
       "25%                  0.000000     0.000000          1.000000    33.990646   \n",
       "50%                  0.000000     1.000000          1.000000    36.205465   \n",
       "75%                  1.000000     1.000000          1.000000    38.161321   \n",
       "max                  1.000000     1.000000          1.000000    41.962127   \n",
       "\n",
       "         Longitude      Married  Monthly Charge  Multiple Lines  \\\n",
       "count  7043.000000  7043.000000     7043.000000     7043.000000   \n",
       "mean   -119.756684     0.483033       65.538800        0.421837   \n",
       "std       2.154425     0.499748       30.606805        0.493888   \n",
       "min    -124.301372     0.000000       18.250000        0.000000   \n",
       "25%    -121.788090     0.000000       35.890000        0.000000   \n",
       "50%    -119.595293     0.000000       71.968000        0.000000   \n",
       "75%    -117.969795     1.000000       90.650000        1.000000   \n",
       "max    -114.192901     1.000000      123.084000        1.000000   \n",
       "\n",
       "       Number of Dependents  Number of Referrals  Online Backup  \\\n",
       "count           7043.000000          7043.000000    7043.000000   \n",
       "mean               0.468692             1.951867       0.344881   \n",
       "std                0.962802             3.001199       0.475363   \n",
       "min                0.000000             0.000000       0.000000   \n",
       "25%                0.000000             0.000000       0.000000   \n",
       "50%                0.000000             0.000000       0.000000   \n",
       "75%                0.000000             3.000000       1.000000   \n",
       "max                9.000000            11.000000       1.000000   \n",
       "\n",
       "       Online Security  Paperless Billing  Phone Service     Population  \\\n",
       "count      7043.000000        7043.000000    7043.000000    7043.000000   \n",
       "mean          0.286668           0.592219       0.903166   22139.603294   \n",
       "std           0.452237           0.491457       0.295752   21152.392837   \n",
       "min           0.000000           0.000000       0.000000      11.000000   \n",
       "25%           0.000000           0.000000       1.000000    2344.000000   \n",
       "50%           0.000000           1.000000       1.000000   17554.000000   \n",
       "75%           1.000000           1.000000       1.000000   36125.000000   \n",
       "max           1.000000           1.000000       1.000000  105285.000000   \n",
       "\n",
       "       Premium Tech Support  Product/Service Issues Reported  \\\n",
       "count           7043.000000                      7043.000000   \n",
       "mean               0.290217                         0.308107   \n",
       "std                0.453895                         0.717514   \n",
       "min                0.000000                         0.000000   \n",
       "25%                0.000000                         0.000000   \n",
       "50%                0.000000                         0.000000   \n",
       "75%                1.000000                         0.000000   \n",
       "max                1.000000                         6.000000   \n",
       "\n",
       "       Referred a Friend  Senior Citizen  Streaming Movies  Streaming Music  \\\n",
       "count        7043.000000     7043.000000       7043.000000      7043.000000   \n",
       "mean            0.457476        0.162147          0.387903         0.353259   \n",
       "std             0.498224        0.368612          0.487307         0.478016   \n",
       "min             0.000000        0.000000          0.000000         0.000000   \n",
       "25%             0.000000        0.000000          0.000000         0.000000   \n",
       "50%             0.000000        0.000000          0.000000         0.000000   \n",
       "75%             1.000000        0.000000          1.000000         1.000000   \n",
       "max             1.000000        1.000000          1.000000         1.000000   \n",
       "\n",
       "       Streaming TV  Tenure in Months  Total Customer Svc Requests  \\\n",
       "count   7043.000000       7043.000000                  7043.000000   \n",
       "mean       0.384353         32.386767                     1.338776   \n",
       "std        0.486477         24.542061                     1.430471   \n",
       "min        0.000000          1.000000                     0.000000   \n",
       "25%        0.000000          9.000000                     0.000000   \n",
       "50%        0.000000         29.000000                     1.000000   \n",
       "75%        1.000000         55.000000                     2.000000   \n",
       "max        1.000000         72.000000                     9.000000   \n",
       "\n",
       "       Total Extra Data Charges  Total Long Distance Charges  Total Refunds  \\\n",
       "count               7043.000000                  7043.000000    7043.000000   \n",
       "mean                 278.499225                   749.099262       1.962182   \n",
       "std                  685.039625                   846.660055       7.902614   \n",
       "min                    0.000000                     0.000000       0.000000   \n",
       "25%                    0.000000                    70.545000       0.000000   \n",
       "50%                    0.000000                   401.440000       0.000000   \n",
       "75%                  182.620000                  1191.100000       0.000000   \n",
       "max                 6477.000000                  3564.720000      49.790000   \n",
       "\n",
       "       Total Regular Charges     Under 30  Unlimited Data      Zip Code  \n",
       "count            7043.000000  7043.000000     7043.000000   7043.000000  \n",
       "mean             2280.381264     0.198921        0.383927  93486.070567  \n",
       "std              2266.220462     0.399217        0.486375   1856.767505  \n",
       "min                18.800000     0.000000        0.000000  90001.000000  \n",
       "25%               400.150000     0.000000        0.000000  92101.000000  \n",
       "50%              1394.550000     0.000000        0.000000  93518.000000  \n",
       "75%              3786.600000     0.000000        1.000000  95329.000000  \n",
       "max              8684.800000     1.000000        1.000000  96150.000000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "740c4cb0",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gender                                 int64\n",
       "SeniorCitizen                          int64\n",
       "Partner                                int64\n",
       "Dependents                             int64\n",
       "tenure                                 int64\n",
       "PhoneService                           int64\n",
       "MultipleLines                         object\n",
       "InternetService                       object\n",
       "OnlineSecurity                        object\n",
       "OnlineBackup                          object\n",
       "DeviceProtection                      object\n",
       "TechSupport                           object\n",
       "StreamingTV                           object\n",
       "StreamingMovies                       object\n",
       "Contract                              object\n",
       "PaperlessBilling                       int64\n",
       "PaymentMethod                         object\n",
       "MonthlyCharges                       float64\n",
       "TotalCharges                          object\n",
       "Churn                                  int64\n",
       "Age                                    int64\n",
       "Avg Monthly GB Download                int64\n",
       "Avg Monthly Long Distance Charges    float64\n",
       "CLTV                                   int64\n",
       "Churn Value                            int64\n",
       "City                                  object\n",
       "Device Protection Plan                 int64\n",
       "Gender                                 int64\n",
       "Internet Service                       int64\n",
       "Internet Type                         object\n",
       "Latitude                             float64\n",
       "Longitude                            float64\n",
       "Married                                int64\n",
       "Monthly Charge                       float64\n",
       "Multiple Lines                         int64\n",
       "Number of Dependents                   int64\n",
       "Number of Referrals                    int64\n",
       "Offer                                 object\n",
       "Online Backup                          int64\n",
       "Online Security                        int64\n",
       "Paperless Billing                      int64\n",
       "Payment Method                        object\n",
       "Phone Service                          int64\n",
       "Population                             int64\n",
       "Premium Tech Support                   int64\n",
       "Product/Service Issues Reported        int64\n",
       "Referred a Friend                      int64\n",
       "Senior Citizen                         int64\n",
       "Streaming Movies                       int64\n",
       "Streaming Music                        int64\n",
       "Streaming TV                           int64\n",
       "Tenure in Months                       int64\n",
       "Total Customer Svc Requests            int64\n",
       "Total Extra Data Charges             float64\n",
       "Total Long Distance Charges          float64\n",
       "Total Refunds                        float64\n",
       "Total Regular Charges                float64\n",
       "Under 30                               int64\n",
       "Unlimited Data                         int64\n",
       "Zip Code                               int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "159f4cb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>OnlineBackup</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "      <th>Age</th>\n",
       "      <th>Avg Monthly GB Download</th>\n",
       "      <th>Avg Monthly Long Distance Charges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>Churn Value</th>\n",
       "      <th>City</th>\n",
       "      <th>Device Protection Plan</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Internet Service</th>\n",
       "      <th>Internet Type</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>Monthly Charge</th>\n",
       "      <th>Multiple Lines</th>\n",
       "      <th>Number of Dependents</th>\n",
       "      <th>Number of Referrals</th>\n",
       "      <th>Offer</th>\n",
       "      <th>Online Backup</th>\n",
       "      <th>Online Security</th>\n",
       "      <th>Paperless Billing</th>\n",
       "      <th>Payment Method</th>\n",
       "      <th>Phone Service</th>\n",
       "      <th>Population</th>\n",
       "      <th>Premium Tech Support</th>\n",
       "      <th>Product/Service Issues Reported</th>\n",
       "      <th>Referred a Friend</th>\n",
       "      <th>Senior Citizen</th>\n",
       "      <th>Streaming Movies</th>\n",
       "      <th>Streaming Music</th>\n",
       "      <th>Streaming TV</th>\n",
       "      <th>Tenure in Months</th>\n",
       "      <th>Total Customer Svc Requests</th>\n",
       "      <th>Total Extra Data Charges</th>\n",
       "      <th>Total Long Distance Charges</th>\n",
       "      <th>Total Refunds</th>\n",
       "      <th>Total Regular Charges</th>\n",
       "      <th>Under 30</th>\n",
       "      <th>Unlimited Data</th>\n",
       "      <th>Zip Code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3964</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.973616</td>\n",
       "      <td>-118.249020</td>\n",
       "      <td>1</td>\n",
       "      <td>29.850</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Offer E</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Bank Withdrawal</td>\n",
       "      <td>0</td>\n",
       "      <td>54492</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.5</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>16</td>\n",
       "      <td>17.09</td>\n",
       "      <td>3441</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.949255</td>\n",
       "      <td>-118.246978</td>\n",
       "      <td>0</td>\n",
       "      <td>56.950</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Mailed Check</td>\n",
       "      <td>1</td>\n",
       "      <td>44586</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>30.23</td>\n",
       "      <td>581.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1889.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.15</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>23</td>\n",
       "      <td>10.47</td>\n",
       "      <td>3239</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.964131</td>\n",
       "      <td>-118.272783</td>\n",
       "      <td>0</td>\n",
       "      <td>56.004</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Credit Card</td>\n",
       "      <td>1</td>\n",
       "      <td>58198</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.94</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108.15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4307</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>34.076259</td>\n",
       "      <td>-118.310715</td>\n",
       "      <td>0</td>\n",
       "      <td>42.300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Bank Withdrawal</td>\n",
       "      <td>0</td>\n",
       "      <td>67852</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>56</td>\n",
       "      <td>9.12</td>\n",
       "      <td>2701</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Cable</td>\n",
       "      <td>34.059281</td>\n",
       "      <td>-118.307420</td>\n",
       "      <td>0</td>\n",
       "      <td>73.528</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Bank Withdrawal</td>\n",
       "      <td>1</td>\n",
       "      <td>43019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>90005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gender  SeniorCitizen  Partner  Dependents  tenure  PhoneService  \\\n",
       "0       0              0        1           0       1             0   \n",
       "1       1              0        0           0      34             1   \n",
       "2       1              0        0           0       2             1   \n",
       "3       1              0        0           0      45             0   \n",
       "4       0              0        0           0       2             1   \n",
       "\n",
       "      MultipleLines InternetService OnlineSecurity OnlineBackup  \\\n",
       "0  No phone service             DSL              0            1   \n",
       "1                 0             DSL              1            0   \n",
       "2                 0             DSL              1            1   \n",
       "3  No phone service             DSL              1            0   \n",
       "4                 0     Fiber optic              0            0   \n",
       "\n",
       "  DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n",
       "0                0           0           0               0  Month-to-month   \n",
       "1                1           0           0               0        One year   \n",
       "2                0           0           0               0  Month-to-month   \n",
       "3                1           1           0               0        One year   \n",
       "4                0           0           0               0  Month-to-month   \n",
       "\n",
       "   PaperlessBilling              PaymentMethod  MonthlyCharges TotalCharges  \\\n",
       "0                 1           Electronic check           29.85        29.85   \n",
       "1                 0               Mailed check           56.95       1889.5   \n",
       "2                 1               Mailed check           53.85       108.15   \n",
       "3                 0  Bank transfer (automatic)           42.30      1840.75   \n",
       "4                 1           Electronic check           70.70       151.65   \n",
       "\n",
       "   Churn  Age  Avg Monthly GB Download  Avg Monthly Long Distance Charges  \\\n",
       "0      0   36                       10                               0.00   \n",
       "1      0   46                       16                              17.09   \n",
       "2      1   37                       23                              10.47   \n",
       "3      0   53                       10                               0.00   \n",
       "4      1   19                       56                               9.12   \n",
       "\n",
       "   CLTV  Churn Value         City  Device Protection Plan  Gender  \\\n",
       "0  3964            0  Los Angeles                       0       0   \n",
       "1  3441            0  Los Angeles                       1       1   \n",
       "2  3239            1  Los Angeles                       0       1   \n",
       "3  4307            0  Los Angeles                       1       1   \n",
       "4  2701            1  Los Angeles                       0       0   \n",
       "\n",
       "   Internet Service Internet Type   Latitude   Longitude  Married  \\\n",
       "0                 1   Fiber Optic  33.973616 -118.249020        1   \n",
       "1                 1   Fiber Optic  33.949255 -118.246978        0   \n",
       "2                 1   Fiber Optic  33.964131 -118.272783        0   \n",
       "3                 1           DSL  34.076259 -118.310715        0   \n",
       "4                 1         Cable  34.059281 -118.307420        0   \n",
       "\n",
       "   Monthly Charge  Multiple Lines  Number of Dependents  Number of Referrals  \\\n",
       "0          29.850               0                     0                    0   \n",
       "1          56.950               0                     0                    0   \n",
       "2          56.004               0                     0                    0   \n",
       "3          42.300               0                     0                    0   \n",
       "4          73.528               0                     2                    0   \n",
       "\n",
       "     Offer  Online Backup  Online Security  Paperless Billing  \\\n",
       "0  Offer E              1                0                  1   \n",
       "1     None              0                1                  0   \n",
       "2     None              1                1                  1   \n",
       "3     None              0                1                  0   \n",
       "4     None              0                0                  1   \n",
       "\n",
       "    Payment Method  Phone Service  Population  Premium Tech Support  \\\n",
       "0  Bank Withdrawal              0       54492                     0   \n",
       "1     Mailed Check              1       44586                     0   \n",
       "2      Credit Card              1       58198                     0   \n",
       "3  Bank Withdrawal              0       67852                     1   \n",
       "4  Bank Withdrawal              1       43019                     0   \n",
       "\n",
       "   Product/Service Issues Reported  Referred a Friend  Senior Citizen  \\\n",
       "0                                0                  0               0   \n",
       "1                                0                  0               0   \n",
       "2                                0                  0               0   \n",
       "3                                0                  0               0   \n",
       "4                                0                  0               0   \n",
       "\n",
       "   Streaming Movies  Streaming Music  Streaming TV  Tenure in Months  \\\n",
       "0                 0                0             0                 1   \n",
       "1                 0                0             0                34   \n",
       "2                 0                0             0                 2   \n",
       "3                 0                0             0                45   \n",
       "4                 0                0             0                 2   \n",
       "\n",
       "   Total Customer Svc Requests  Total Extra Data Charges  \\\n",
       "0                            2                      0.00   \n",
       "1                            1                     30.23   \n",
       "2                            4                      0.00   \n",
       "3                            4                      0.00   \n",
       "4                            0                      0.00   \n",
       "\n",
       "   Total Long Distance Charges  Total Refunds  Total Regular Charges  \\\n",
       "0                         0.00            0.0                  29.85   \n",
       "1                       581.06            0.0                1889.50   \n",
       "2                        20.94            0.0                 108.15   \n",
       "3                         0.00            0.0                1840.75   \n",
       "4                        18.24            0.0                 151.65   \n",
       "\n",
       "   Under 30  Unlimited Data  Zip Code  \n",
       "0         0               1     90001  \n",
       "1         0               1     90002  \n",
       "2         0               1     90003  \n",
       "3         0               1     90004  \n",
       "4         1               1     90005  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7fb8a012",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "gender                               0\n",
       "SeniorCitizen                        0\n",
       "Partner                              0\n",
       "Dependents                           0\n",
       "tenure                               0\n",
       "PhoneService                         0\n",
       "MultipleLines                        0\n",
       "InternetService                      0\n",
       "OnlineSecurity                       0\n",
       "OnlineBackup                         0\n",
       "DeviceProtection                     0\n",
       "TechSupport                          0\n",
       "StreamingTV                          0\n",
       "StreamingMovies                      0\n",
       "Contract                             0\n",
       "PaperlessBilling                     0\n",
       "PaymentMethod                        0\n",
       "MonthlyCharges                       0\n",
       "TotalCharges                         0\n",
       "Churn                                0\n",
       "Age                                  0\n",
       "Avg Monthly GB Download              0\n",
       "Avg Monthly Long Distance Charges    0\n",
       "CLTV                                 0\n",
       "Churn Value                          0\n",
       "City                                 0\n",
       "Device Protection Plan               0\n",
       "Gender                               0\n",
       "Internet Service                     0\n",
       "Internet Type                        0\n",
       "Latitude                             0\n",
       "Longitude                            0\n",
       "Married                              0\n",
       "Monthly Charge                       0\n",
       "Multiple Lines                       0\n",
       "Number of Dependents                 0\n",
       "Number of Referrals                  0\n",
       "Offer                                0\n",
       "Online Backup                        0\n",
       "Online Security                      0\n",
       "Paperless Billing                    0\n",
       "Payment Method                       0\n",
       "Phone Service                        0\n",
       "Population                           0\n",
       "Premium Tech Support                 0\n",
       "Product/Service Issues Reported      0\n",
       "Referred a Friend                    0\n",
       "Senior Citizen                       0\n",
       "Streaming Movies                     0\n",
       "Streaming Music                      0\n",
       "Streaming TV                         0\n",
       "Tenure in Months                     0\n",
       "Total Customer Svc Requests          0\n",
       "Total Extra Data Charges             0\n",
       "Total Long Distance Charges          0\n",
       "Total Refunds                        0\n",
       "Total Regular Charges                0\n",
       "Under 30                             0\n",
       "Unlimited Data                       0\n",
       "Zip Code                             0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()\n",
    "# no missing values"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ca34d5c",
   "metadata": {},
   "source": [
    "#### Dropping duplicated columns\n",
    "\n",
    "Columns are deemed as duplicates if they have similar column names, and the one that provide the most information are retained"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a0b6c9a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['gender', 'SeniorCitizen', 'Partner', 'Dependents', 'tenure',\n",
       "       'PhoneService', 'MultipleLines', 'InternetService', 'OnlineSecurity',\n",
       "       'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV',\n",
       "       'StreamingMovies', 'Contract', 'PaperlessBilling', 'PaymentMethod',\n",
       "       'MonthlyCharges', 'TotalCharges', 'Churn', 'Age',\n",
       "       'Avg Monthly GB Download', 'Avg Monthly Long Distance Charges', 'CLTV',\n",
       "       'Churn Value', 'City', 'Device Protection Plan', 'Gender',\n",
       "       'Internet Service', 'Internet Type', 'Latitude', 'Longitude', 'Married',\n",
       "       'Monthly Charge', 'Multiple Lines', 'Number of Dependents',\n",
       "       'Number of Referrals', 'Offer', 'Online Backup', 'Online Security',\n",
       "       'Paperless Billing', 'Payment Method', 'Phone Service', 'Population',\n",
       "       'Premium Tech Support', 'Product/Service Issues Reported',\n",
       "       'Referred a Friend', 'Senior Citizen', 'Streaming Movies',\n",
       "       'Streaming Music', 'Streaming TV', 'Tenure in Months',\n",
       "       'Total Customer Svc Requests', 'Total Extra Data Charges',\n",
       "       'Total Long Distance Charges', 'Total Refunds', 'Total Regular Charges',\n",
       "       'Under 30', 'Unlimited Data', 'Zip Code'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e5199bba",
   "metadata": {},
   "outputs": [],
   "source": [
    "dup_cols = [\"Phone Service\", \"Monthly Charge\", \"Multiple Lines\", \"Online Backup\", \"Online Security\",\n",
    "           \"Paperless Billing\", \"Payment Method\", \"Phone Service\", \"Number of Dependents\",\n",
    "           \"Senior Citizen\", \"Streaming Movies\", \"Streaming TV\", \"Gender\"]\n",
    "df = df.drop(dup_cols, axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3027dd06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7043, 48)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "9dcb1a03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>OnlineBackup</th>\n",
       "      <th>DeviceProtection</th>\n",
       "      <th>TechSupport</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "      <th>Age</th>\n",
       "      <th>Avg Monthly GB Download</th>\n",
       "      <th>Avg Monthly Long Distance Charges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>Churn Value</th>\n",
       "      <th>City</th>\n",
       "      <th>Device Protection Plan</th>\n",
       "      <th>Internet Service</th>\n",
       "      <th>Internet Type</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>Number of Referrals</th>\n",
       "      <th>Offer</th>\n",
       "      <th>Population</th>\n",
       "      <th>Premium Tech Support</th>\n",
       "      <th>Product/Service Issues Reported</th>\n",
       "      <th>Referred a Friend</th>\n",
       "      <th>Streaming Music</th>\n",
       "      <th>Tenure in Months</th>\n",
       "      <th>Total Customer Svc Requests</th>\n",
       "      <th>Total Extra Data Charges</th>\n",
       "      <th>Total Long Distance Charges</th>\n",
       "      <th>Total Refunds</th>\n",
       "      <th>Total Regular Charges</th>\n",
       "      <th>Under 30</th>\n",
       "      <th>Unlimited Data</th>\n",
       "      <th>Zip Code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3964</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.973616</td>\n",
       "      <td>-118.249020</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Offer E</td>\n",
       "      <td>54492</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.5</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>16</td>\n",
       "      <td>17.09</td>\n",
       "      <td>3441</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.949255</td>\n",
       "      <td>-118.246978</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>44586</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>30.23</td>\n",
       "      <td>581.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1889.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.15</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>23</td>\n",
       "      <td>10.47</td>\n",
       "      <td>3239</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.964131</td>\n",
       "      <td>-118.272783</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>58198</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.94</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108.15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4307</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>34.076259</td>\n",
       "      <td>-118.310715</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>67852</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>56</td>\n",
       "      <td>9.12</td>\n",
       "      <td>2701</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Cable</td>\n",
       "      <td>34.059281</td>\n",
       "      <td>-118.307420</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>43019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>90005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gender  SeniorCitizen  Partner  Dependents  tenure  PhoneService  \\\n",
       "0       0              0        1           0       1             0   \n",
       "1       1              0        0           0      34             1   \n",
       "2       1              0        0           0       2             1   \n",
       "3       1              0        0           0      45             0   \n",
       "4       0              0        0           0       2             1   \n",
       "\n",
       "      MultipleLines InternetService OnlineSecurity OnlineBackup  \\\n",
       "0  No phone service             DSL              0            1   \n",
       "1                 0             DSL              1            0   \n",
       "2                 0             DSL              1            1   \n",
       "3  No phone service             DSL              1            0   \n",
       "4                 0     Fiber optic              0            0   \n",
       "\n",
       "  DeviceProtection TechSupport StreamingTV StreamingMovies        Contract  \\\n",
       "0                0           0           0               0  Month-to-month   \n",
       "1                1           0           0               0        One year   \n",
       "2                0           0           0               0  Month-to-month   \n",
       "3                1           1           0               0        One year   \n",
       "4                0           0           0               0  Month-to-month   \n",
       "\n",
       "   PaperlessBilling              PaymentMethod  MonthlyCharges TotalCharges  \\\n",
       "0                 1           Electronic check           29.85        29.85   \n",
       "1                 0               Mailed check           56.95       1889.5   \n",
       "2                 1               Mailed check           53.85       108.15   \n",
       "3                 0  Bank transfer (automatic)           42.30      1840.75   \n",
       "4                 1           Electronic check           70.70       151.65   \n",
       "\n",
       "   Churn  Age  Avg Monthly GB Download  Avg Monthly Long Distance Charges  \\\n",
       "0      0   36                       10                               0.00   \n",
       "1      0   46                       16                              17.09   \n",
       "2      1   37                       23                              10.47   \n",
       "3      0   53                       10                               0.00   \n",
       "4      1   19                       56                               9.12   \n",
       "\n",
       "   CLTV  Churn Value         City  Device Protection Plan  Internet Service  \\\n",
       "0  3964            0  Los Angeles                       0                 1   \n",
       "1  3441            0  Los Angeles                       1                 1   \n",
       "2  3239            1  Los Angeles                       0                 1   \n",
       "3  4307            0  Los Angeles                       1                 1   \n",
       "4  2701            1  Los Angeles                       0                 1   \n",
       "\n",
       "  Internet Type   Latitude   Longitude  Married  Number of Referrals    Offer  \\\n",
       "0   Fiber Optic  33.973616 -118.249020        1                    0  Offer E   \n",
       "1   Fiber Optic  33.949255 -118.246978        0                    0     None   \n",
       "2   Fiber Optic  33.964131 -118.272783        0                    0     None   \n",
       "3           DSL  34.076259 -118.310715        0                    0     None   \n",
       "4         Cable  34.059281 -118.307420        0                    0     None   \n",
       "\n",
       "   Population  Premium Tech Support  Product/Service Issues Reported  \\\n",
       "0       54492                     0                                0   \n",
       "1       44586                     0                                0   \n",
       "2       58198                     0                                0   \n",
       "3       67852                     1                                0   \n",
       "4       43019                     0                                0   \n",
       "\n",
       "   Referred a Friend  Streaming Music  Tenure in Months  \\\n",
       "0                  0                0                 1   \n",
       "1                  0                0                34   \n",
       "2                  0                0                 2   \n",
       "3                  0                0                45   \n",
       "4                  0                0                 2   \n",
       "\n",
       "   Total Customer Svc Requests  Total Extra Data Charges  \\\n",
       "0                            2                      0.00   \n",
       "1                            1                     30.23   \n",
       "2                            4                      0.00   \n",
       "3                            4                      0.00   \n",
       "4                            0                      0.00   \n",
       "\n",
       "   Total Long Distance Charges  Total Refunds  Total Regular Charges  \\\n",
       "0                         0.00            0.0                  29.85   \n",
       "1                       581.06            0.0                1889.50   \n",
       "2                        20.94            0.0                 108.15   \n",
       "3                         0.00            0.0                1840.75   \n",
       "4                        18.24            0.0                 151.65   \n",
       "\n",
       "   Under 30  Unlimited Data  Zip Code  \n",
       "0         0               1     90001  \n",
       "1         0               1     90002  \n",
       "2         0               1     90003  \n",
       "3         0               1     90004  \n",
       "4         1               1     90005  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70253d13",
   "metadata": {},
   "source": [
    "Adjusting column types appropriately"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "894c3846",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "gender [0 1]\n",
      "SeniorCitizen [0 1]\n",
      "Partner [1 0]\n",
      "Dependents [0 1]\n",
      "tenure [ 1 34  2 45  8 22 10 28 62 13 16 58 49 25 69 52 71 21 12 30 47 72 17 27\n",
      "  5 46 11 70 63 43 15 60 18 66  9  3 31 50 64 56  7 42 35 48 29 65 38 68\n",
      " 32 55 37 36 41  6  4 33 67 23 57 61 14 20 53 40 59 24 44 19 54 51 26  0\n",
      " 39]\n",
      "PhoneService [0 1]\n",
      "MultipleLines ['No phone service' '0' '1']\n",
      "InternetService ['DSL' 'Fiber optic' nan]\n",
      "OnlineSecurity ['0' '1' 'No internet service']\n",
      "OnlineBackup ['1' '0' 'No internet service']\n",
      "StreamingTV ['0' '1' 'No internet service']\n",
      "StreamingMovies ['0' '1' 'No internet service']\n",
      "Contract ['Month-to-month' 'One year' 'Two year']\n",
      "PaperlessBilling [1 0]\n",
      "PaymentMethod ['Electronic check' 'Mailed check' 'Bank transfer (automatic)'\n",
      " 'Credit card (automatic)']\n",
      "MonthlyCharges [29.85 56.95 53.85 ... 63.1  44.2  78.7 ]\n",
      "TotalCharges ['29.85' '1889.5' '108.15' ... '346.45' '306.6' '6844.5']\n",
      "Churn [0 1]\n",
      "Age [36 46 37 53 19 31 42 23 48 21 39 38 27 57 61 30 78 45 29 25 20 69 79 35\n",
      " 71 60 56 51 52 28 49 22 32 64 65 34 74 72 44 77 40 43 41 24 73 50 62 80\n",
      " 47 26 33 59 58 76 66 63 54 70 55 68 67 75]\n",
      "AvgMonthlyGBDownload [10 16 23 56 29 53  8 52 22  0 12 48  3  7 76 73  9 30 27 18 64 28 45 11\n",
      " 13 26 69 31 20 17 24 71 21  2 19 57 14 32 42  5 63 41 58 62 59 15 33 78\n",
      "  6  4 25 80 84 51 47 46 82 75 65 90 85 43 94]\n",
      "AvgMonthlyLongDistanceCharges [ 0.   17.09 10.47 ... 44.98  8.62  9.08]\n",
      "CLTV [3964 3441 3239 ... 2029 4645 5553]\n",
      "ChurnValue [0 1]\n",
      "City ['Los Angeles' 'San Diego' 'West Hollywood' ... 'Valley Center'\n",
      " 'Holtville' 'Johannesburg']\n",
      "DeviceProtectionPlan [0 1]\n",
      "Gender [0 1]\n",
      "InternetType ['Fiber Optic' 'DSL' 'Cable' nan]\n",
      "Latitude [33.973616 33.949255 33.964131 ... 32.774046 32.811001 35.363339]\n",
      "Longitude [-118.24902  -118.246978 -118.272783 ... -117.142454 -115.152865\n",
      " -117.637641]\n",
      "Married [1 0]\n",
      "MonthlyCharge [29.85  56.95  56.004 ... 62.192 45.968 78.7  ]\n",
      "NumberofDependents [0 2 3 1 5 4 6 7 8 9]\n",
      "NumberofReferrals [ 0  1  7  6 10  3  9  5  8  2  4 11]\n",
      "Offer ['Offer E' 'None' 'Offer D' 'Offer C' 'Offer B' 'Offer A']\n",
      "Population [54492 44586 58198 ... 11650  8062   207]\n",
      "PremiumTechSupport [0 1]\n",
      "Product/ServiceIssuesReported [0 1 2 3 4 5 6]\n",
      "ReferredaFriend [0 1]\n",
      "StreamingMusic [0 1]\n",
      "TenureinMonths [ 1 34  2 45  8 22 10 28 62 13 16 58 49 25 69 52 71 21 12 30 47 72 17 27\n",
      "  5 46 11 70 63 43 15 60 18 66  9  3 31 50 64 56  7 42 35 48 29 65 38 68\n",
      " 32 55 37 36 41  6  4 33 67 23 57 61 14 20 53 40 59 24 44 19 54 51 26 39]\n",
      "TotalCustomerSvcRequests [2 1 4 0 3 5 7 6 8 9]\n",
      "TotalExtraDataCharges [   0.     30.23  238.   ... 2272.     17.84 4344.  ]\n",
      "TotalLongDistanceCharges [   0.    581.06   20.94 ... 2135.52   42.44 2043.36]\n",
      "TotalRefunds [ 0.   45.61 13.43  8.74  4.48 36.6  33.43 40.95 45.44 18.55 11.05 33.21\n",
      " 48.25 21.72 21.69 14.22 45.37 27.6  10.17 10.76 36.44 20.28 42.18 40.79\n",
      " 25.67 20.45 41.21  2.29 24.08 13.03 36.29 30.26  4.6  41.67 15.62 46.78\n",
      " 14.49 25.84 16.97 23.67 46.56 27.09 10.23 15.57 26.55  3.2  18.39 21.6\n",
      " 17.14  5.73 32.09  1.83 47.19 14.21 38.15  8.3  31.39 12.55 11.48 43.38\n",
      " 49.37  9.34 38.61 37.06 43.25 23.28 45.07 44.9  23.61 19.89 38.84  1.01\n",
      " 14.67 37.37 21.32 36.04 49.51 47.91 11.72 29.76  1.99 40.62 18.84 47.04\n",
      "  5.49  9.49 29.17 19.25 45.69 29.88 39.93 26.98 11.83 16.58 17.16 23.89\n",
      " 11.   34.29 18.85 48.26 35.82 37.64 15.73 41.2  12.19  9.36 19.67 39.27\n",
      " 41.85 40.   12.81  4.73 27.38 14.24  9.22 33.8   9.73 46.07 47.87 39.99\n",
      " 14.76  2.24 42.89 16.12 38.37 47.36 33.76 12.8  23.01 12.16 45.75 28.42\n",
      " 37.03 38.46 46.66 35.61 18.89  1.66 23.72 17.6  21.35 29.32 23.92 45.81\n",
      " 49.53 21.52 29.   29.99 12.48 21.08 36.4  21.17  6.26 17.91 29.84 34.67\n",
      " 28.93 41.23 47.73 40.46 49.57 15.41 12.07 40.64 10.2  17.88 37.55 48.09\n",
      " 32.46 20.23 12.59 43.31  8.13 46.64 23.33 47.2  33.25 33.73 49.06 25.79\n",
      " 15.24 26.99 44.58 20.16  8.88  6.79 39.29 44.31 29.5  16.86 42.64  1.31\n",
      " 10.57 34.44 13.07 22.34 43.95 37.44 25.57 14.93 13.01 46.75 38.98 28.7\n",
      "  2.28 47.02 16.85 11.45 29.11 32.55  5.44 27.79 43.68 41.74 16.73  2.18\n",
      "  3.26 26.87 28.35 10.47  7.39 27.15 45.82 39.18 31.05  6.65 15.2   1.69\n",
      " 43.66 24.36 27.89  6.11  7.43 25.07 37.45 34.16 17.5  11.37 46.81 48.66\n",
      " 15.02 14.23 36.52 38.09 19.63 45.47 39.92 22.55 24.98  3.34 17.05 38.33\n",
      " 47.79 24.92 40.54  5.55 30.22  5.47 44.   28.98 49.38 37.68 18.17 36.38\n",
      " 26.83 29.21 18.88 33.67 17.3  17.03  3.55 25.62 18.62  9.39  5.9   5.01\n",
      " 42.57 42.43  4.7  21.53 21.58 35.28 28.83 38.57 29.41 10.65 42.29 16.38\n",
      " 36.66 39.45 29.64 26.32 11.85 16.26 20.17 32.59 16.36 22.53  6.72 36.22\n",
      " 38.34 28.08 17.96 33.29 21.71 36.78 30.75 25.55 17.19 33.1  32.71  4.76\n",
      " 44.81  3.33 19.16 31.58  1.09 18.64 44.17 24.9  15.38  5.15  6.41 41.66\n",
      " 46.06 33.13 12.66 48.79  3.59 44.86 34.83 49.79 44.53 47.45 13.37  2.81\n",
      " 44.13 23.13 35.05 41.18 30.46 48.61 26.02 38.48 40.15 48.95 24.44  9.68\n",
      " 20.29 48.54  4.96 18.21  1.27 22.96 28.49 19.5   8.35 35.7  17.01 34.69\n",
      "  4.93  2.76 46.99 23.16 35.34 44.42 48.59 27.3  11.8  17.17 15.76 44.16\n",
      "  2.97 15.31 45.54 14.15 32.53 22.97 21.25 36.02 39.68 23.39 20.87 34.09\n",
      " 36.61 18.72 44.63 23.97 38.42  1.48  2.93 17.76 33.07 26.7   3.85  3.51\n",
      " 35.23  9.48 36.13 44.51  4.08 34.45 16.96 16.91 43.12 49.76 23.5  29.95\n",
      "  9.99 33.24 28.63 10.7  36.92 27.01 42.34 34.47  9.79 26.37  8.96 21.9\n",
      "  4.25 16.56 10.28 46.67 14.78 49.23 35.01  9.35 37.04 49.24 32.65 39.15\n",
      " 18.78 14.57 49.22 16.27  5.83 35.44 29.29 47.59 46.39 24.07  8.5  23.47\n",
      " 29.59 28.09  6.49 34.59 47.55 37.01 43.76 25.98 12.26 37.49 19.13  1.65\n",
      " 31.9  21.81 15.17 14.3  22.72  8.53 46.26 15.43 25.49 17.33 45.6  25.24\n",
      "  2.62 36.07 29.93 23.79 22.4  16.89  7.3  16.99 41.33 30.45 30.14 24.99\n",
      " 30.53 32.24  4.68  4.18  2.21 19.32 25.92 45.46 25.42 43.96 38.65 49.02\n",
      " 19.12 20.19 26.84 40.41 19.31 48.23 45.38 27.24]\n",
      "TotalRegularCharges [  29.85 1889.5   108.15 ...  346.45  306.6  6844.5 ]\n",
      "Under30 [0 1]\n",
      "UnlimitedData [1 0]\n",
      "ZipCode [90001 90002 90003 ... 92108 92250 93528]\n"
     ]
    }
   ],
   "source": [
    "# showing unique values\n",
    "for i in range(0,len(data.columns)):\n",
    "    print(data.columns[i],data[data.columns[i]].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae28f83f",
   "metadata": {},
   "source": [
    "## Data Exploration and Viz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "cf4777c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e00ae9cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.rcParams[\"figure.figsize\"] = [10, 5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d9142f86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>OnlineBackup</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "      <th>Age</th>\n",
       "      <th>AvgMonthlyGBDownload</th>\n",
       "      <th>AvgMonthlyLongDistanceCharges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>ChurnValue</th>\n",
       "      <th>City</th>\n",
       "      <th>DeviceProtectionPlan</th>\n",
       "      <th>Gender</th>\n",
       "      <th>InternetType</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>MonthlyCharge</th>\n",
       "      <th>NumberofDependents</th>\n",
       "      <th>NumberofReferrals</th>\n",
       "      <th>Offer</th>\n",
       "      <th>Population</th>\n",
       "      <th>PremiumTechSupport</th>\n",
       "      <th>Product/ServiceIssuesReported</th>\n",
       "      <th>ReferredaFriend</th>\n",
       "      <th>StreamingMusic</th>\n",
       "      <th>TenureinMonths</th>\n",
       "      <th>TotalCustomerSvcRequests</th>\n",
       "      <th>TotalExtraDataCharges</th>\n",
       "      <th>TotalLongDistanceCharges</th>\n",
       "      <th>TotalRefunds</th>\n",
       "      <th>TotalRegularCharges</th>\n",
       "      <th>Under30</th>\n",
       "      <th>UnlimitedData</th>\n",
       "      <th>ZipCode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3964</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.973616</td>\n",
       "      <td>-118.249020</td>\n",
       "      <td>1</td>\n",
       "      <td>29.850</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Offer E</td>\n",
       "      <td>54492</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.5</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>16</td>\n",
       "      <td>17.09</td>\n",
       "      <td>3441</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.949255</td>\n",
       "      <td>-118.246978</td>\n",
       "      <td>0</td>\n",
       "      <td>56.950</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>44586</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>30.23</td>\n",
       "      <td>581.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1889.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.15</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>23</td>\n",
       "      <td>10.47</td>\n",
       "      <td>3239</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.964131</td>\n",
       "      <td>-118.272783</td>\n",
       "      <td>0</td>\n",
       "      <td>56.004</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>58198</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.94</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108.15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4307</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>34.076259</td>\n",
       "      <td>-118.310715</td>\n",
       "      <td>0</td>\n",
       "      <td>42.300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>67852</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>56</td>\n",
       "      <td>9.12</td>\n",
       "      <td>2701</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Cable</td>\n",
       "      <td>34.059281</td>\n",
       "      <td>-118.307420</td>\n",
       "      <td>0</td>\n",
       "      <td>73.528</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>43019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>90005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gender  SeniorCitizen  Partner  Dependents  tenure  PhoneService  \\\n",
       "0       0              0        1           0       1             0   \n",
       "1       1              0        0           0      34             1   \n",
       "2       1              0        0           0       2             1   \n",
       "3       1              0        0           0      45             0   \n",
       "4       0              0        0           0       2             1   \n",
       "\n",
       "      MultipleLines InternetService OnlineSecurity OnlineBackup StreamingTV  \\\n",
       "0  No phone service             DSL              0            1           0   \n",
       "1                 0             DSL              1            0           0   \n",
       "2                 0             DSL              1            1           0   \n",
       "3  No phone service             DSL              1            0           0   \n",
       "4                 0     Fiber optic              0            0           0   \n",
       "\n",
       "  StreamingMovies        Contract  PaperlessBilling  \\\n",
       "0               0  Month-to-month                 1   \n",
       "1               0        One year                 0   \n",
       "2               0  Month-to-month                 1   \n",
       "3               0        One year                 0   \n",
       "4               0  Month-to-month                 1   \n",
       "\n",
       "               PaymentMethod  MonthlyCharges TotalCharges  Churn  Age  \\\n",
       "0           Electronic check           29.85        29.85      0   36   \n",
       "1               Mailed check           56.95       1889.5      0   46   \n",
       "2               Mailed check           53.85       108.15      1   37   \n",
       "3  Bank transfer (automatic)           42.30      1840.75      0   53   \n",
       "4           Electronic check           70.70       151.65      1   19   \n",
       "\n",
       "   AvgMonthlyGBDownload  AvgMonthlyLongDistanceCharges  CLTV  ChurnValue  \\\n",
       "0                    10                           0.00  3964           0   \n",
       "1                    16                          17.09  3441           0   \n",
       "2                    23                          10.47  3239           1   \n",
       "3                    10                           0.00  4307           0   \n",
       "4                    56                           9.12  2701           1   \n",
       "\n",
       "          City  DeviceProtectionPlan  Gender InternetType   Latitude  \\\n",
       "0  Los Angeles                     0       0  Fiber Optic  33.973616   \n",
       "1  Los Angeles                     1       1  Fiber Optic  33.949255   \n",
       "2  Los Angeles                     0       1  Fiber Optic  33.964131   \n",
       "3  Los Angeles                     1       1          DSL  34.076259   \n",
       "4  Los Angeles                     0       0        Cable  34.059281   \n",
       "\n",
       "    Longitude  Married  MonthlyCharge  NumberofDependents  NumberofReferrals  \\\n",
       "0 -118.249020        1         29.850                   0                  0   \n",
       "1 -118.246978        0         56.950                   0                  0   \n",
       "2 -118.272783        0         56.004                   0                  0   \n",
       "3 -118.310715        0         42.300                   0                  0   \n",
       "4 -118.307420        0         73.528                   2                  0   \n",
       "\n",
       "     Offer  Population  PremiumTechSupport  Product/ServiceIssuesReported  \\\n",
       "0  Offer E       54492                   0                              0   \n",
       "1     None       44586                   0                              0   \n",
       "2     None       58198                   0                              0   \n",
       "3     None       67852                   1                              0   \n",
       "4     None       43019                   0                              0   \n",
       "\n",
       "   ReferredaFriend  StreamingMusic  TenureinMonths  TotalCustomerSvcRequests  \\\n",
       "0                0               0               1                         2   \n",
       "1                0               0              34                         1   \n",
       "2                0               0               2                         4   \n",
       "3                0               0              45                         4   \n",
       "4                0               0               2                         0   \n",
       "\n",
       "   TotalExtraDataCharges  TotalLongDistanceCharges  TotalRefunds  \\\n",
       "0                   0.00                      0.00           0.0   \n",
       "1                  30.23                    581.06           0.0   \n",
       "2                   0.00                     20.94           0.0   \n",
       "3                   0.00                      0.00           0.0   \n",
       "4                   0.00                     18.24           0.0   \n",
       "\n",
       "   TotalRegularCharges  Under30  UnlimitedData  ZipCode  \n",
       "0                29.85        0              1    90001  \n",
       "1              1889.50        0              1    90002  \n",
       "2               108.15        0              1    90003  \n",
       "3              1840.75        0              1    90004  \n",
       "4               151.65        1              1    90005  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb04986b",
   "metadata": {},
   "source": [
    "Distribution of MonthlyCharges"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "e5e0c5a7",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hp\\anaconda3\\lib\\site-packages\\seaborn\\axisgrid.py:409: RuntimeWarning: More than 20 figures have been opened. Figures created through the pyplot interface (`matplotlib.pyplot.figure`) are retained until explicitly closed and may consume too much memory. (To control this warning, see the rcParam `figure.max_open_warning`).\n",
      "  fig = plt.figure(figsize=figsize)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Error in callback <function flush_figures at 0x00000198273E08B8> (for post_execute):\n"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib_inline\\backend_inline.py\u001b[0m in \u001b[0;36mflush_figures\u001b[1;34m()\u001b[0m\n\u001b[0;32m    119\u001b[0m         \u001b[1;31m# ignore the tracking, just draw and close all figures\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    120\u001b[0m         \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 121\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mshow\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;32mTrue\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    122\u001b[0m         \u001b[1;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    123\u001b[0m             \u001b[1;31m# safely show traceback if in IPython, else raise\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib_inline\\backend_inline.py\u001b[0m in \u001b[0;36mshow\u001b[1;34m(close, block)\u001b[0m\n\u001b[0;32m     41\u001b[0m             display(\n\u001b[0;32m     42\u001b[0m                 \u001b[0mfigure_manager\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 43\u001b[1;33m                 \u001b[0mmetadata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0m_fetch_figure_metadata\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfigure_manager\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     44\u001b[0m             )\n\u001b[0;32m     45\u001b[0m     \u001b[1;32mfinally\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\IPython\\core\\display.py\u001b[0m in \u001b[0;36mdisplay\u001b[1;34m(include, exclude, metadata, transient, display_id, *objs, **kwargs)\u001b[0m\n\u001b[0;32m    318\u001b[0m             \u001b[0mpublish_display_data\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mobj\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    319\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 320\u001b[1;33m             \u001b[0mformat_dict\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmd_dict\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mformat\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0minclude\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mexclude\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    321\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mformat_dict\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    322\u001b[0m                 \u001b[1;31m# nothing to display (e.g. _ipython_display_ took over)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\IPython\\core\\formatters.py\u001b[0m in \u001b[0;36mformat\u001b[1;34m(self, obj, include, exclude)\u001b[0m\n\u001b[0;32m    178\u001b[0m             \u001b[0mmd\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    179\u001b[0m             \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 180\u001b[1;33m                 \u001b[0mdata\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mformatter\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    181\u001b[0m             \u001b[1;32mexcept\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    182\u001b[0m                 \u001b[1;31m# FIXME: log the exception\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\decorator.py\u001b[0m in \u001b[0;36mfun\u001b[1;34m(*args, **kw)\u001b[0m\n\u001b[0;32m    230\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mkwsyntax\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    231\u001b[0m                 \u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfix\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkw\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msig\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 232\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mcaller\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mextras\u001b[0m \u001b[1;33m+\u001b[0m \u001b[0margs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    233\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__name__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    234\u001b[0m     \u001b[0mfun\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\IPython\\core\\formatters.py\u001b[0m in \u001b[0;36mcatch_format_error\u001b[1;34m(method, self, *args, **kwargs)\u001b[0m\n\u001b[0;32m    222\u001b[0m     \u001b[1;34m\"\"\"show traceback on failed format call\"\"\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    223\u001b[0m     \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 224\u001b[1;33m         \u001b[0mr\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmethod\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    225\u001b[0m     \u001b[1;32mexcept\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    226\u001b[0m         \u001b[1;31m# don't warn on NotImplementedErrors\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\IPython\\core\\formatters.py\u001b[0m in \u001b[0;36m__call__\u001b[1;34m(self, obj)\u001b[0m\n\u001b[0;32m    339\u001b[0m                 \u001b[1;32mpass\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    340\u001b[0m             \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 341\u001b[1;33m                 \u001b[1;32mreturn\u001b[0m \u001b[0mprinter\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    342\u001b[0m             \u001b[1;31m# Finally look for special method names\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    343\u001b[0m             \u001b[0mmethod\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mget_real_method\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mprint_method\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\IPython\\core\\pylabtools.py\u001b[0m in \u001b[0;36mprint_figure\u001b[1;34m(fig, fmt, bbox_inches, base64, **kwargs)\u001b[0m\n\u001b[0;32m    149\u001b[0m         \u001b[0mFigureCanvasBase\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    150\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 151\u001b[1;33m     \u001b[0mfig\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mprint_figure\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mbytes_io\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    152\u001b[0m     \u001b[0mdata\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mbytes_io\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    153\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0mfmt\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m'svg'\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\backend_bases.py\u001b[0m in \u001b[0;36mprint_figure\u001b[1;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)\u001b[0m\n\u001b[0;32m   2233\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mbbox_inches\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m\"tight\"\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2234\u001b[0m                     bbox_inches = self.figure.get_tightbbox(\n\u001b[1;32m-> 2235\u001b[1;33m                         renderer, bbox_extra_artists=bbox_extra_artists)\n\u001b[0m\u001b[0;32m   2236\u001b[0m                     \u001b[1;32mif\u001b[0m \u001b[0mpad_inches\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2237\u001b[0m                         \u001b[0mpad_inches\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mrcParams\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'savefig.pad_inches'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\figure.py\u001b[0m in \u001b[0;36mget_tightbbox\u001b[1;34m(self, renderer, bbox_extra_artists)\u001b[0m\n\u001b[0;32m   1647\u001b[0m                 \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1648\u001b[0m                     bbox = ax.get_tightbbox(\n\u001b[1;32m-> 1649\u001b[1;33m                         renderer, bbox_extra_artists=bbox_extra_artists)\n\u001b[0m\u001b[0;32m   1650\u001b[0m                 \u001b[1;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1651\u001b[0m                     \u001b[0mbbox\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0max\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_tightbbox\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\axes\\_base.py\u001b[0m in \u001b[0;36mget_tightbbox\u001b[1;34m(self, renderer, call_axes_locator, bbox_extra_artists, for_layout_only)\u001b[0m\n\u001b[0;32m   4444\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[0mbb_yaxis\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   4445\u001b[0m                     \u001b[0mbb\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mbb_yaxis\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 4446\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_update_title_position\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   4447\u001b[0m         \u001b[0maxbbox\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_window_extent\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   4448\u001b[0m         \u001b[0mbb\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0maxbbox\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\axes\\_base.py\u001b[0m in \u001b[0;36m_update_title_position\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m   2810\u001b[0m                 if (ax.xaxis.get_ticks_position() in ['top', 'unknown']\n\u001b[0;32m   2811\u001b[0m                         or ax.xaxis.get_label_position() == 'top'):\n\u001b[1;32m-> 2812\u001b[1;33m                     \u001b[0mbb\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0max\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mxaxis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_tightbbox\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2813\u001b[0m                 \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2814\u001b[0m                     \u001b[0mbb\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0max\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_window_extent\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\axis.py\u001b[0m in \u001b[0;36mget_tightbbox\u001b[1;34m(self, renderer, for_layout_only)\u001b[0m\n\u001b[0;32m   1086\u001b[0m         \u001b[0mticks_to_draw\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_update_ticks\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1087\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1088\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_update_label_position\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1089\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1090\u001b[0m         \u001b[1;31m# go back to just this axis's tick labels\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\axis.py\u001b[0m in \u001b[0;36m_update_label_position\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m   2083\u001b[0m         \u001b[1;31m# get bounding boxes for this axis and any siblings\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2084\u001b[0m         \u001b[1;31m# that have been set by `fig.align_xlabels()`\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2085\u001b[1;33m         \u001b[0mbboxes\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mbboxes2\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_tick_boxes_siblings\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2086\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2087\u001b[0m         \u001b[0mx\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlabel\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_position\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\axis.py\u001b[0m in \u001b[0;36m_get_tick_boxes_siblings\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m   1871\u001b[0m             \u001b[0maxis\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0max\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_axis_map\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1872\u001b[0m             \u001b[0mticks_to_draw\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_update_ticks\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1873\u001b[1;33m             \u001b[0mtlb\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mtlb2\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_tick_bboxes\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mticks_to_draw\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrenderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1874\u001b[0m             \u001b[0mbboxes\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtlb\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1875\u001b[0m             \u001b[0mbboxes2\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mextend\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtlb2\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\axis.py\u001b[0m in \u001b[0;36m_get_tick_bboxes\u001b[1;34m(self, ticks, renderer)\u001b[0m\n\u001b[0;32m   1067\u001b[0m         \u001b[1;34m\"\"\"Return lists of bboxes for ticks' label1's and label2's.\"\"\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1068\u001b[0m         return ([tick.label1.get_window_extent(renderer)\n\u001b[1;32m-> 1069\u001b[1;33m                  for tick in ticks if tick.label1.get_visible()],\n\u001b[0m\u001b[0;32m   1070\u001b[0m                 [tick.label2.get_window_extent(renderer)\n\u001b[0;32m   1071\u001b[0m                  for tick in ticks if tick.label2.get_visible()])\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\axis.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[1;34m(.0)\u001b[0m\n\u001b[0;32m   1067\u001b[0m         \u001b[1;34m\"\"\"Return lists of bboxes for ticks' label1's and label2's.\"\"\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1068\u001b[0m         return ([tick.label1.get_window_extent(renderer)\n\u001b[1;32m-> 1069\u001b[1;33m                  for tick in ticks if tick.label1.get_visible()],\n\u001b[0m\u001b[0;32m   1070\u001b[0m                 [tick.label2.get_window_extent(renderer)\n\u001b[0;32m   1071\u001b[0m                  for tick in ticks if tick.label2.get_visible()])\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\text.py\u001b[0m in \u001b[0;36mget_window_extent\u001b[1;34m(self, renderer, dpi)\u001b[0m\n\u001b[0;32m    901\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    902\u001b[0m         \u001b[1;32mwith\u001b[0m \u001b[0mcbook\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_setattr_cm\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdpi\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdpi\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 903\u001b[1;33m             \u001b[0mbbox\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0minfo\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdescent\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_layout\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_renderer\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    904\u001b[0m             \u001b[0mx\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_unitless_position\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    905\u001b[0m             \u001b[0mx\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_transform\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mx\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\text.py\u001b[0m in \u001b[0;36m_get_layout\u001b[1;34m(self, renderer)\u001b[0m\n\u001b[0;32m    306\u001b[0m         _, lp_h, lp_d = renderer.get_text_width_height_descent(\n\u001b[0;32m    307\u001b[0m             \u001b[1;34m\"lp\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_fontproperties\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 308\u001b[1;33m             ismath=\"TeX\" if self.get_usetex() else False)\n\u001b[0m\u001b[0;32m    309\u001b[0m         \u001b[0mmin_dy\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mlp_h\u001b[0m \u001b[1;33m-\u001b[0m \u001b[0mlp_d\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m*\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_linespacing\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    310\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\matplotlib\\backends\\backend_agg.py\u001b[0m in \u001b[0;36mget_text_width_height_descent\u001b[1;34m(self, s, prop, ismath)\u001b[0m\n\u001b[0;32m    238\u001b[0m         \u001b[0mflags\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mget_hinting_flag\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    239\u001b[0m         \u001b[0mfont\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_agg_font\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mprop\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 240\u001b[1;33m         \u001b[0mfont\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mset_text\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0ms\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m0.0\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mflags\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    241\u001b[0m         \u001b[0mw\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mh\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfont\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_width_height\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m  \u001b[1;31m# width and height of unrotated string\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    242\u001b[0m         \u001b[0md\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mfont\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_descent\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "col = list(data.columns)\n",
    "\n",
    "for i in range(0, len(col)):\n",
    "    sns.displot(\n",
    "    data = data,\n",
    "    x = col[i],\n",
    "    kind = \"hist\",)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "6ba67019",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x19829686b48>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(\n",
    "    data = data,\n",
    "    x = \"MonthlyCharges\",\n",
    "    kind = \"hist\",\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c54067bb",
   "metadata": {},
   "source": [
    "#### Distribution of MonthlyCharges per Churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "02b96ea5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x198299bf888>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlYAAAEvCAYAAACHYI+LAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjQuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/MnkTPAAAACXBIWXMAAAsTAAALEwEAmpwYAAASXUlEQVR4nO3df4zk9X3f8dc7nHHt2C5QDkT40SMudeKksexubRzayA217LhRoFKQcHByclFQVTd1rSoxxFL9R2vJlasqrSLXwj/iq4oglFCgP2IHXeq6dTDuEbABEwI2Ddxx5dahxImDMHe8+8dOrPOxm9vd+ezuzO7jIa1m5jPf2X1rP7qb587szlR3BwCA6X3PVg8AALBdCCsAgEGEFQDAIMIKAGAQYQUAMIiwAgAYZNdWD5AkZ555Zu/Zs2erxwAAOKl77rnnG929e7nrZiKs9uzZkwMHDmz1GAAAJ1VVf7DSdZ4KBAAYRFgBAAwirAAABjlpWFXVp6rqSFU9cNzaR6rq96rqK1X1n6rqtOOuu66qHq2qh6vqbRs0NwDAzFnNI1afTvL2E9buTPLD3f0jSX4/yXVJUlWvTXJlkh+a3OajVXXKsGkBAGbYScOquz+f5OkT1n6ru49OLn4xyXmT85cluam7n+vux5I8muSNA+cFAJhZI37H6u8n+c3J+XOTPHHcdQcnawAA295Ur2NVVR9IcjTJDX+2tMxhvcJtr0lyTZJccMEF04xxUrfdeygf+ezDefKZZ/N9p70sv/i21+Ty1+s9AGCsdYdVVe1N8pNJLu3uP4ung0nOP+6w85I8udztu/v6JNcnycLCwrLxNcJt9x7K+379vu/U3aFnns37fv2+JBFXALBNzMqDKOt6KrCq3p7k/Ul+qrv/9Lir7khyZVW9tKouTHJRki9NP+b6/dItX37RQ2Y9WQcA5t9t9x7Kdbfen0PPPJvO0oMo1916f26799Cmz7Kal1u4McldSV5TVQer6uokv5rklUnurKr7qupjSdLdDya5OclXk3wmyXu6+9iGTb8K3z62/INhK60DAPPlI599OM8+/9258ezzx/KRzz686bOc9KnA7n7nMsuf/HOO/1CSD00zFADAah165tk1rW8kr7wOAMy1Wu5P5/6c9Y0krACAudYr/HbPSusbSVgBAAwirACAufbylyyfMyutbyRhBQDMtaMvLP+c30rrG0lYAQBzbZZeWklYAQAMIqwAgLm20qsqbMGrLQgrAGC+7VqhZlZa30jCCgCYa8+/sLb1jSSsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABjkpGFVVZ+qqiNV9cBxa2dU1Z1V9cjk9PTjrruuqh6tqoer6m0bNTgAwKxZzSNWn07y9hPWrk2yv7svSrJ/cjlV9dokVyb5ocltPlpVpwybFgBghp00rLr780mePmH5siT7Juf3Jbn8uPWbuvu57n4syaNJ3jhmVACA2bbe37E6u7sPJ8nk9KzJ+rlJnjjuuIOTtRepqmuq6kBVHVhcXFznGAAAs2P0L6/XMmu93IHdfX13L3T3wu7duwePAQCw+dYbVk9V1TlJMjk9Mlk/mOT84447L8mT6x8PAGB+rDes7kiyd3J+b5Lbj1u/sqpeWlUXJrkoyZemGxEAYD7sOtkBVXVjkrckObOqDib5YJIPJ7m5qq5O8niSK5Kkux+sqpuTfDXJ0STv6e5jGzQ7AMBMOWlYdfc7V7jq0hWO/1CSD00zFADAPPLK6wAAgwgrAIBBhBUAwCDCCgBgEGEFADCIsAIAGERYAQAMIqwAAAYRVgAAgwgrAIBBhBUAwCDCCgBgEGEFADCIsAIAGERYAQAMIqwAAAYRVgAAgwgrAIBBhBUAwCDCCgBgEGEFADCIsAIAGERYAQAMIqwAAAYRVgAAgwgrAIBBhBUAwCDCCgBgEGEFADCIsAIAGERYAQAMIqwAAAYRVgAAgwgrAIBBhBUAwCDCCgBgEGEFADCIsAIAGERYAQAMIqwAAAaZKqyq6n1V9WBVPVBVN1bVX6iqM6rqzqp6ZHJ6+qhhAQBm2brDqqrOTfKPkyx09w8nOSXJlUmuTbK/uy9Ksn9yGQBg25v2qcBdSV5WVbuSvDzJk0kuS7Jvcv2+JJdP+TUAAObCusOquw8l+VdJHk9yOMkfdfdvJTm7uw9Pjjmc5KwRgwIAzLppngo8PUuPTl2Y5PuSfG9VvWsNt7+mqg5U1YHFxcX1jgEAMDOmeSrw7yR5rLsXu/v5JLcm+dEkT1XVOUkyOT2y3I27+/ruXujuhd27d08xBgDAbJgmrB5PcnFVvbyqKsmlSR5KckeSvZNj9ia5fboRAQDmw6713rC7766qW5L8bpKjSe5Ncn2SVyS5uaquzlJ8XTFiUACAWbfusEqS7v5gkg+esPxclh69AgDYUbzyOgDAIMIKAGAQYQUAMIiwAgAYRFgBAAwirAAABhFWAACDCCsAgEGEFQDAIMIKAGAQYQUAMIiwAgAYRFgBAAwirAAABhFWAACDCCsAgEGEFQDAIMIKAGAQYQUAMIiwAgAYRFgBAAwirAAABhFWAACDCCsAgEGEFQDAIMIKAGAQYQUAMIiwAgAYRFgBAAwirAAABhFWAACDCCsAgEGEFQDAIMIKAGAQYQUAMIiwAgAYRFgBAAwirAAABhFWAACDCCsAgEGmCquqOq2qbqmq36uqh6rqzVV1RlXdWVWPTE5PHzUsAMAsm/YRq3+T5DPd/QNJXpfkoSTXJtnf3Rcl2T+5DACw7a07rKrqVUl+LMknk6S7v93dzyS5LMm+yWH7klw+3YgAAPNhmkesvj/JYpJfq6p7q+oTVfW9Sc7u7sNJMjk9a8CcAAAzb5qw2pXkDUn+XXe/Psm3soan/arqmqo6UFUHFhcXpxgDAGA2TBNWB5Mc7O67J5dvyVJoPVVV5yTJ5PTIcjfu7uu7e6G7F3bv3j3FGAAAs2HdYdXd/zfJE1X1msnSpUm+muSOJHsna3uT3D7VhAAAc2LXlLf/hSQ3VNWpSb6e5N1ZirWbq+rqJI8nuWLKrwEAMBemCqvuvi/JwjJXXTrN5wUAmEdeeR0AYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgU4dVVZ1SVfdW1X+ZXD6jqu6sqkcmp6dPPyYAwOwb8YjVe5M8dNzla5Ps7+6LkuyfXAYA2PamCquqOi/J303yieOWL0uyb3J+X5LLp/kaAADzYtpHrH4lyS8leeG4tbO7+3CSTE7PmvJrAADMhXWHVVX9ZJIj3X3POm9/TVUdqKoDi4uL6x0DAGBmTPOI1SVJfqqq/k+Sm5L8eFX9hyRPVdU5STI5PbLcjbv7+u5e6O6F3bt3TzEGAMBsWHdYdfd13X1ed+9JcmWS3+7udyW5I8neyWF7k9w+9ZQAAHNgI17H6sNJ3lpVjyR56+QyAMC2t2vEJ+nuzyX53OT8Hya5dMTnBQA4mbNfeWqe+uNvL7u+2bzyOgAw1+7+wFvzqpee8l1rr3rpKbn7A2/d9FmEFQAw126791C++dyx71r75nPHctu9hzZ9FmEFAMy1X/yP961pfSMJKwBgrj3/wtrWN5KwAgAYRFgBAAwirAAABhFWAACDCCsAgEGEFQDAIMIKAGAQYQUAMIiwAgAYRFgBAHPtklefsab1jbTtw+pdF1+wpnUAYL5csbD8ffpK6xtp24fVTV96Yk3rAMB88SbMm+joC72mdQBgvngTZgCAbUhYAQAMIqwAAAYRVgAAgwgrAIBBhBUAwCDCCgBgEGEFAMy1qrWtb6RtH1az9P5BAMB4V71p+beuWWl9I+3a9K+4yb7wtafXtA4AzJd/cflfS5LcePcTOdadU6ryzjed/531zbTtH7ECALa/xxb/JMd66e3qjnXnscU/2ZI5hBUAMNeu+vhdL3om6gtfezpXffyuTZ9FWAEAc22Wfu1HWAEADCKsAAAGEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACAOba96zwZssrrW8kYQUAzLWfWeHNllda30jCCgCYayu92fJcvQlzVZ1fVf+9qh6qqger6r2T9TOq6s6qemRyevq4cQEAvttfue6/rml9I03ziNXRJP+0u38wycVJ3lNVr01ybZL93X1Rkv2TywAAG+Jor219I607rLr7cHf/7uT8Hyd5KMm5SS5Lsm9y2L4kl085IwDAXBjyO1ZVtSfJ65PcneTs7j6cLMVXkrNGfA0AgFk3dVhV1SuS/EaSf9Ld31zD7a6pqgNVdWBxcXHaMQAAttxUYVVVL8lSVN3Q3bdOlp+qqnMm15+T5Mhyt+3u67t7obsXdu/ePc0YAAAzYZq/Cqwkn0zyUHf/6+OuuiPJ3sn5vUluX/94AADzY9cUt70kyc8mub+q7pus/XKSDye5uaquTvJ4kiummhAAYE6sO6y6+38lWenF4i9d7+cFAJhXXnkdAJhrl7z6jDWtb6RtH1az9M0GAMa74eff/KL79UtefUZu+Pk3b/os1b0FL0t6goWFhT5w4MCGff6rPn5XvvC1p79zeau+2QDA/Kuqe7p7Ybnrpvnl9bkhogCAzbDtnwoEANgswgoAYBBhBQAwiLACABhEWAEADCKsAAAGEVYAAIMIKwCAQWbilderajHJH2zClzozyTc24euwevZkNtmX2WNPZpN9mT2bsSd/ubt3L3fFTITVZqmqAyu9BD1bw57MJvsye+zJbLIvs2er98RTgQAAgwgrAIBBdlpYXb/VA/Ai9mQ22ZfZY09mk32ZPVu6Jzvqd6wAADbSTnvECgBgw2y7sKqqt1fVw1X1aFVdu8z1VVX/dnL9V6rqDVsx506zin25arIfX6mq36mq123FnDvJyfbkuOP+RlUdq6qf3sz5dqrV7EtVvaWq7quqB6vqf2z2jDvNKv7/+otV9Z+r6suTPXn3Vsy5k1TVp6rqSFU9sML1W3df393b5iPJKUm+luT7k5ya5MtJXnvCMe9I8ptJKsnFSe7e6rm3+8cq9+VHk5w+Of8T9mXr9+S44347yX9L8tNbPfd2/1jlv5XTknw1yQWTy2dt9dzb+WOVe/LLSf7l5PzuJE8nOXWrZ9/OH0l+LMkbkjywwvVbdl+/3R6xemOSR7v769397SQ3JbnshGMuS/Lve8kXk5xWVeds9qA7zEn3pbt/p7v/3+TiF5Oct8kz7jSr+beSJL+Q5DeSHNnM4Xaw1ezLzyS5tbsfT5LutjcbazV70kleWVWV5BVZCqujmzvmztLdn8/S93klW3Zfv93C6twkTxx3+eBkba3HMNZav+dXZ+knDTbOSfekqs5N8veSfGwT59rpVvNv5a8mOb2qPldV91TVz23adDvTavbkV5P8YJInk9yf5L3d/cLmjMcKtuy+ftdmfJFNVMusnfhnj6s5hrFW/T2vqr+dpbD6mxs6EavZk19J8v7uPrb0gzibYDX7sivJX09yaZKXJbmrqr7Y3b+/0cPtUKvZk7cluS/Jjyd5dZI7q+p/dvc3N3g2VrZl9/XbLawOJjn/uMvnZekniLUew1ir+p5X1Y8k+USSn+juP9yk2Xaq1ezJQpKbJlF1ZpJ3VNXR7r5tUybcmVb7f9g3uvtbSb5VVZ9P8rokwmpjrGZP3p3kw730yz2PVtVjSX4gyZc2Z0SWsWX39dvtqcD/neSiqrqwqk5NcmWSO0445o4kPzf5i4GLk/xRdx/e7EF3mJPuS1VdkOTWJD/rJ+9NcdI96e4Lu3tPd+9JckuSfyiqNtxq/g+7PcnfqqpdVfXyJG9K8tAmz7mTrGZPHs/SI4ipqrOTvCbJ1zd1Sk60Zff12+oRq+4+WlX/KMlns/SXHJ/q7ger6h9Mrv9Ylv666R1JHk3yp1n6SYMNtMp9+WdJ/lKSj04eITna3th0w6xyT9hkq9mX7n6oqj6T5CtJXkjyie5e9k/Omd4q/6388ySfrqr7s/QU1Pu7+xtbNvQOUFU3JnlLkjOr6mCSDyZ5SbL19/VeeR0AYJDt9lQgAMCWEVYAAIMIKwCAQYQVAMAgwgoAYBBhBQAwiLACABhEWAEADPL/ASRx35xEM5deAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df[\"Churn\"],df[\"MonthlyCharges\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "cf43eb8b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x19829a20a48>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x = \"Churn\", y = \"MonthlyCharges\",  data = data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fabb1a2b",
   "metadata": {},
   "source": [
    "Seems that there are no differences in the monthly charge between customers who stay and left the company"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "00237313",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x19829a95888>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 403.5x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x = \"Churn\", y = \"MonthlyCharges\", hue = \"gender\",  data = data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d7631b7a",
   "metadata": {},
   "source": [
    "Slicing the data by genders also doesn't reveal any different trend between the male and female customers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aafa7079",
   "metadata": {},
   "source": [
    "#### Does Tenure has relationship affecting Churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "5c0cc03a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1982c153948>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 403.5x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.catplot(x = \"Churn\", y = \"TenureinMonths\", hue = \"gender\",  data = data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c849b8e6",
   "metadata": {},
   "source": [
    "It seems that for customers that are still with our company, there is not specific distribution. However, for those that left the company, are more condensed under the 20 months tenure.\n",
    "\n",
    "Hence, perhaps, we can conclude that the first 20 months are especially important for long-term customer retention.\n",
    "\n",
    "Again, there is no noticeable differences for the 2 genders."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0b0bab5",
   "metadata": {},
   "source": [
    "#### Heatmap correlation matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "ad314bac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "corr = data.corr()\n",
    "sns.heatmap(corr,\n",
    "            xticklabels = corr.columns,\n",
    "            yticklabels = corr.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e23870a6",
   "metadata": {},
   "source": [
    "Cannot really see much, but from the majority color scheme, seems that most of the columns have low correlation with each other."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "3a606558",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# randomly pick some columns\n",
    "intng_col = [\"gender\", \"Dependents\", \"TenureinMonths\", \"MonthlyCharge\", \"Age\"]\n",
    "\n",
    "corrdf = pd.DataFrame()\n",
    "corrdf = data[intng_col]\n",
    "\n",
    "corr = corrdf.corr()\n",
    "\n",
    "sns.heatmap(corr,\n",
    "            xticklabels = corrdf.columns,\n",
    "            yticklabels = corrdf.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4e02c29f",
   "metadata": {},
   "source": [
    "The trens seems to still stand between these variables, as the heatmap still show a really low correlation between the variables"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a39329a8",
   "metadata": {},
   "source": [
    "#### Relationship between cities and Churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "id": "291f8b9c",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "perCity_data = pd.DataFrame()\n",
    "perCity_data = data.groupby([\"City\"]).mean()\n",
    "perCity_data = perCity_data.sort_values(by=[\"Churn\"], ascending = False)\n",
    "worst10cities = perCity_data.iloc[0:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e51e420",
   "metadata": {},
   "source": [
    "Treemap of Top 10 Cities with Highest Average Churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "id": "9903f553",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import squarify\n",
    "colors=['#fae588','#f79d65','#f9dc5c','#e8ac65','#e76f51','#ef233c','#b7094c'] #color palette\n",
    "sns.set_style(style=\"whitegrid\") # set seaborn plot style\n",
    "sizes= worst10cities[\"Churn\"].values# proportions of the categories\n",
    "label= worst10cities.index\n",
    "squarify.plot(sizes=sizes, label=label, alpha=0.6,color=colors).set(title='Treemap of Top 10 Cities with Highest Average Churn')\n",
    "plt.axis('off')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30b1dad2",
   "metadata": {},
   "source": [
    "Treemap of Top 10 Cities with Highest Numbers of Churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "454bfd9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "perCity_data = pd.DataFrame()\n",
    "perCity_data = data.groupby([\"City\"]).sum()\n",
    "perCity_data = perCity_data.sort_values(by=[\"Churn\"], ascending = False)\n",
    "worst10cities = perCity_data.iloc[0:10]\n",
    "sns.set_style(style=\"whitegrid\") # set seaborn plot style\n",
    "sizes= worst10cities[\"Churn\"].values# proportions of the categories\n",
    "label= worst10cities.index\n",
    "squarify.plot(sizes=sizes, label=label, alpha=0.6).set(title='Treemap of Top 10 Cities with Highest Numbers of Churn')\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0f471fd7",
   "metadata": {},
   "source": [
    "### check later if need or not"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "15cfa2ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "percentage = []\n",
    "for i in range(0,len(perCity_data[\"Churn\"].index)):\n",
    "    percentage.append(perCity_data[\"Churn\"].values[i] / len(data.loc[data[\"City\"] == perCity_data[\"Churn\"].index[i]]))\n",
    "\n",
    "perCity_data[\"Churn percentage\"] = percentage"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b58e22a",
   "metadata": {},
   "source": [
    "## Modeling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "b6139c99",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>OnlineBackup</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "      <th>Age</th>\n",
       "      <th>AvgMonthlyGBDownload</th>\n",
       "      <th>AvgMonthlyLongDistanceCharges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>City</th>\n",
       "      <th>DeviceProtectionPlan</th>\n",
       "      <th>Gender</th>\n",
       "      <th>InternetType</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>MonthlyCharge</th>\n",
       "      <th>NumberofDependents</th>\n",
       "      <th>NumberofReferrals</th>\n",
       "      <th>Offer</th>\n",
       "      <th>Population</th>\n",
       "      <th>PremiumTechSupport</th>\n",
       "      <th>Product/ServiceIssuesReported</th>\n",
       "      <th>ReferredaFriend</th>\n",
       "      <th>StreamingMusic</th>\n",
       "      <th>TenureinMonths</th>\n",
       "      <th>TotalCustomerSvcRequests</th>\n",
       "      <th>TotalExtraDataCharges</th>\n",
       "      <th>TotalLongDistanceCharges</th>\n",
       "      <th>TotalRefunds</th>\n",
       "      <th>TotalRegularCharges</th>\n",
       "      <th>Under30</th>\n",
       "      <th>UnlimitedData</th>\n",
       "      <th>ZipCode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3964</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.973616</td>\n",
       "      <td>-118.249020</td>\n",
       "      <td>1</td>\n",
       "      <td>29.850</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Offer E</td>\n",
       "      <td>54492</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.5</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>16</td>\n",
       "      <td>17.09</td>\n",
       "      <td>3441</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.949255</td>\n",
       "      <td>-118.246978</td>\n",
       "      <td>0</td>\n",
       "      <td>56.950</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>44586</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>30.23</td>\n",
       "      <td>581.06</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1889.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.15</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>23</td>\n",
       "      <td>10.47</td>\n",
       "      <td>3239</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>33.964131</td>\n",
       "      <td>-118.272783</td>\n",
       "      <td>0</td>\n",
       "      <td>56.004</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>58198</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.94</td>\n",
       "      <td>0.00</td>\n",
       "      <td>108.15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>0</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4307</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>34.076259</td>\n",
       "      <td>-118.310715</td>\n",
       "      <td>0</td>\n",
       "      <td>42.300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>67852</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>56</td>\n",
       "      <td>9.12</td>\n",
       "      <td>2701</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Cable</td>\n",
       "      <td>34.059281</td>\n",
       "      <td>-118.307420</td>\n",
       "      <td>0</td>\n",
       "      <td>73.528</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>43019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.24</td>\n",
       "      <td>0.00</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>90005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7038</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>One year</td>\n",
       "      <td>1</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>84.80</td>\n",
       "      <td>1990.5</td>\n",
       "      <td>0</td>\n",
       "      <td>38</td>\n",
       "      <td>24</td>\n",
       "      <td>36.05</td>\n",
       "      <td>2140</td>\n",
       "      <td>Adelanto</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>34.667815</td>\n",
       "      <td>-117.536183</td>\n",
       "      <td>1</td>\n",
       "      <td>84.800</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Offer C</td>\n",
       "      <td>18980</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>865.20</td>\n",
       "      <td>48.23</td>\n",
       "      <td>1990.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>92301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7039</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>One year</td>\n",
       "      <td>1</td>\n",
       "      <td>Credit card (automatic)</td>\n",
       "      <td>103.20</td>\n",
       "      <td>7362.9</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>59</td>\n",
       "      <td>29.66</td>\n",
       "      <td>5560</td>\n",
       "      <td>Amboy</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Cable</td>\n",
       "      <td>34.559882</td>\n",
       "      <td>-115.637164</td>\n",
       "      <td>1</td>\n",
       "      <td>103.200</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>None</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>72</td>\n",
       "      <td>2</td>\n",
       "      <td>4344.00</td>\n",
       "      <td>2135.52</td>\n",
       "      <td>45.38</td>\n",
       "      <td>7362.90</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>92304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7040</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>29.60</td>\n",
       "      <td>346.45</td>\n",
       "      <td>0</td>\n",
       "      <td>32</td>\n",
       "      <td>17</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2793</td>\n",
       "      <td>Angelus Oaks</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>34.167800</td>\n",
       "      <td>-116.864330</td>\n",
       "      <td>1</td>\n",
       "      <td>29.600</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>301</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>27.24</td>\n",
       "      <td>346.45</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>92305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7041</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>1</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>74.40</td>\n",
       "      <td>306.6</td>\n",
       "      <td>1</td>\n",
       "      <td>75</td>\n",
       "      <td>9</td>\n",
       "      <td>10.61</td>\n",
       "      <td>5839</td>\n",
       "      <td>Fallbrook</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>DSL</td>\n",
       "      <td>33.362575</td>\n",
       "      <td>-117.299644</td>\n",
       "      <td>1</td>\n",
       "      <td>77.376</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>42239</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>28.00</td>\n",
       "      <td>42.44</td>\n",
       "      <td>0.00</td>\n",
       "      <td>306.60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>92028</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7042</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>66</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Two year</td>\n",
       "      <td>1</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>105.65</td>\n",
       "      <td>6844.5</td>\n",
       "      <td>0</td>\n",
       "      <td>44</td>\n",
       "      <td>11</td>\n",
       "      <td>30.96</td>\n",
       "      <td>5097</td>\n",
       "      <td>Apple Valley</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>34.424926</td>\n",
       "      <td>-117.184503</td>\n",
       "      <td>0</td>\n",
       "      <td>105.650</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>28819</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>66</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2043.36</td>\n",
       "      <td>0.00</td>\n",
       "      <td>6844.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>92308</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7043 rows × 47 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      gender  SeniorCitizen  Partner  Dependents  tenure  PhoneService  \\\n",
       "0          0              0        1           0       1             0   \n",
       "1          1              0        0           0      34             1   \n",
       "2          1              0        0           0       2             1   \n",
       "3          1              0        0           0      45             0   \n",
       "4          0              0        0           0       2             1   \n",
       "...      ...            ...      ...         ...     ...           ...   \n",
       "7038       1              0        1           1      24             1   \n",
       "7039       0              0        1           1      72             1   \n",
       "7040       0              0        1           1      11             0   \n",
       "7041       1              1        1           0       4             1   \n",
       "7042       1              0        0           0      66             1   \n",
       "\n",
       "         MultipleLines InternetService OnlineSecurity OnlineBackup  \\\n",
       "0     No phone service             DSL              0            1   \n",
       "1                    0             DSL              1            0   \n",
       "2                    0             DSL              1            1   \n",
       "3     No phone service             DSL              1            0   \n",
       "4                    0     Fiber optic              0            0   \n",
       "...                ...             ...            ...          ...   \n",
       "7038                 1             DSL              1            0   \n",
       "7039                 1     Fiber optic              0            1   \n",
       "7040  No phone service             DSL              1            0   \n",
       "7041                 1     Fiber optic              0            0   \n",
       "7042                 0     Fiber optic              1            0   \n",
       "\n",
       "     StreamingTV StreamingMovies        Contract  PaperlessBilling  \\\n",
       "0              0               0  Month-to-month                 1   \n",
       "1              0               0        One year                 0   \n",
       "2              0               0  Month-to-month                 1   \n",
       "3              0               0        One year                 0   \n",
       "4              0               0  Month-to-month                 1   \n",
       "...          ...             ...             ...               ...   \n",
       "7038           1               1        One year                 1   \n",
       "7039           1               1        One year                 1   \n",
       "7040           0               0  Month-to-month                 1   \n",
       "7041           0               0  Month-to-month                 1   \n",
       "7042           1               1        Two year                 1   \n",
       "\n",
       "                  PaymentMethod  MonthlyCharges TotalCharges  Churn  Age  \\\n",
       "0              Electronic check           29.85        29.85      0   36   \n",
       "1                  Mailed check           56.95       1889.5      0   46   \n",
       "2                  Mailed check           53.85       108.15      1   37   \n",
       "3     Bank transfer (automatic)           42.30      1840.75      0   53   \n",
       "4              Electronic check           70.70       151.65      1   19   \n",
       "...                         ...             ...          ...    ...  ...   \n",
       "7038               Mailed check           84.80       1990.5      0   38   \n",
       "7039    Credit card (automatic)          103.20       7362.9      0   30   \n",
       "7040           Electronic check           29.60       346.45      0   32   \n",
       "7041               Mailed check           74.40        306.6      1   75   \n",
       "7042  Bank transfer (automatic)          105.65       6844.5      0   44   \n",
       "\n",
       "      AvgMonthlyGBDownload  AvgMonthlyLongDistanceCharges  CLTV          City  \\\n",
       "0                       10                           0.00  3964   Los Angeles   \n",
       "1                       16                          17.09  3441   Los Angeles   \n",
       "2                       23                          10.47  3239   Los Angeles   \n",
       "3                       10                           0.00  4307   Los Angeles   \n",
       "4                       56                           9.12  2701   Los Angeles   \n",
       "...                    ...                            ...   ...           ...   \n",
       "7038                    24                          36.05  2140      Adelanto   \n",
       "7039                    59                          29.66  5560         Amboy   \n",
       "7040                    17                           0.00  2793  Angelus Oaks   \n",
       "7041                     9                          10.61  5839     Fallbrook   \n",
       "7042                    11                          30.96  5097  Apple Valley   \n",
       "\n",
       "      DeviceProtectionPlan  Gender InternetType   Latitude   Longitude  \\\n",
       "0                        0       0  Fiber Optic  33.973616 -118.249020   \n",
       "1                        1       1  Fiber Optic  33.949255 -118.246978   \n",
       "2                        0       1  Fiber Optic  33.964131 -118.272783   \n",
       "3                        1       1          DSL  34.076259 -118.310715   \n",
       "4                        0       0        Cable  34.059281 -118.307420   \n",
       "...                    ...     ...          ...        ...         ...   \n",
       "7038                     1       1          DSL  34.667815 -117.536183   \n",
       "7039                     1       0        Cable  34.559882 -115.637164   \n",
       "7040                     0       0          DSL  34.167800 -116.864330   \n",
       "7041                     0       1          DSL  33.362575 -117.299644   \n",
       "7042                     1       1  Fiber Optic  34.424926 -117.184503   \n",
       "\n",
       "      Married  MonthlyCharge  NumberofDependents  NumberofReferrals    Offer  \\\n",
       "0           1         29.850                   0                  0  Offer E   \n",
       "1           0         56.950                   0                  0     None   \n",
       "2           0         56.004                   0                  0     None   \n",
       "3           0         42.300                   0                  0     None   \n",
       "4           0         73.528                   2                  0     None   \n",
       "...       ...            ...                 ...                ...      ...   \n",
       "7038        1         84.800                   2                  1  Offer C   \n",
       "7039        1        103.200                   2                  4     None   \n",
       "7040        1         29.600                   2                  1     None   \n",
       "7041        1         77.376                   0                  0     None   \n",
       "7042        0        105.650                   0                  0     None   \n",
       "\n",
       "      Population  PremiumTechSupport  Product/ServiceIssuesReported  \\\n",
       "0          54492                   0                              0   \n",
       "1          44586                   0                              0   \n",
       "2          58198                   0                              0   \n",
       "3          67852                   1                              0   \n",
       "4          43019                   0                              0   \n",
       "...          ...                 ...                            ...   \n",
       "7038       18980                   1                              0   \n",
       "7039          42                   0                              0   \n",
       "7040         301                   0                              0   \n",
       "7041       42239                   0                              2   \n",
       "7042       28819                   1                              2   \n",
       "\n",
       "      ReferredaFriend  StreamingMusic  TenureinMonths  \\\n",
       "0                   0               0               1   \n",
       "1                   0               0              34   \n",
       "2                   0               0               2   \n",
       "3                   0               0              45   \n",
       "4                   0               0               2   \n",
       "...               ...             ...             ...   \n",
       "7038                1               1              24   \n",
       "7039                1               1              72   \n",
       "7040                1               0              11   \n",
       "7041                0               0               4   \n",
       "7042                0               1              66   \n",
       "\n",
       "      TotalCustomerSvcRequests  TotalExtraDataCharges  \\\n",
       "0                            2                   0.00   \n",
       "1                            1                  30.23   \n",
       "2                            4                   0.00   \n",
       "3                            4                   0.00   \n",
       "4                            0                   0.00   \n",
       "...                        ...                    ...   \n",
       "7038                         2                   0.00   \n",
       "7039                         2                4344.00   \n",
       "7040                         0                   0.00   \n",
       "7041                         2                  28.00   \n",
       "7042                         1                   0.00   \n",
       "\n",
       "      TotalLongDistanceCharges  TotalRefunds  TotalRegularCharges  Under30  \\\n",
       "0                         0.00          0.00                29.85        0   \n",
       "1                       581.06          0.00              1889.50        0   \n",
       "2                        20.94          0.00               108.15        0   \n",
       "3                         0.00          0.00              1840.75        0   \n",
       "4                        18.24          0.00               151.65        1   \n",
       "...                        ...           ...                  ...      ...   \n",
       "7038                    865.20         48.23              1990.50        0   \n",
       "7039                   2135.52         45.38              7362.90        0   \n",
       "7040                      0.00         27.24               346.45        0   \n",
       "7041                     42.44          0.00               306.60        0   \n",
       "7042                   2043.36          0.00              6844.50        0   \n",
       "\n",
       "      UnlimitedData  ZipCode  \n",
       "0                 1    90001  \n",
       "1                 1    90002  \n",
       "2                 1    90003  \n",
       "3                 1    90004  \n",
       "4                 1    90005  \n",
       "...             ...      ...  \n",
       "7038              1    92301  \n",
       "7039              0    92304  \n",
       "7040              1    92305  \n",
       "7041              0    92028  \n",
       "7042              1    92308  \n",
       "\n",
       "[7043 rows x 47 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data2 = data.drop(\"ChurnValue\", axis =1)\n",
    "data2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d00be95e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MultipleLines</th>\n",
       "      <th>InternetService</th>\n",
       "      <th>OnlineSecurity</th>\n",
       "      <th>OnlineBackup</th>\n",
       "      <th>StreamingTV</th>\n",
       "      <th>StreamingMovies</th>\n",
       "      <th>Contract</th>\n",
       "      <th>PaymentMethod</th>\n",
       "      <th>Churn</th>\n",
       "      <th>City</th>\n",
       "      <th>InternetType</th>\n",
       "      <th>NumberofDependents</th>\n",
       "      <th>NumberofReferrals</th>\n",
       "      <th>Offer</th>\n",
       "      <th>Product/ServiceIssuesReported</th>\n",
       "      <th>TotalCustomerSvcRequests</th>\n",
       "      <th>TotalCustomerSvcRequests</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Offer E</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Mailed check</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Fiber Optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>No phone service</td>\n",
       "      <td>DSL</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>One year</td>\n",
       "      <td>Bank transfer (automatic)</td>\n",
       "      <td>0</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>DSL</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>Fiber optic</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Month-to-month</td>\n",
       "      <td>Electronic check</td>\n",
       "      <td>1</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>None</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      MultipleLines InternetService OnlineSecurity OnlineBackup StreamingTV  \\\n",
       "0  No phone service             DSL              0            1           0   \n",
       "1                 0             DSL              1            0           0   \n",
       "2                 0             DSL              1            1           0   \n",
       "3  No phone service             DSL              1            0           0   \n",
       "4                 0     Fiber optic              0            0           0   \n",
       "\n",
       "  StreamingMovies        Contract              PaymentMethod Churn  \\\n",
       "0               0  Month-to-month           Electronic check     0   \n",
       "1               0        One year               Mailed check     0   \n",
       "2               0  Month-to-month               Mailed check     1   \n",
       "3               0        One year  Bank transfer (automatic)     0   \n",
       "4               0  Month-to-month           Electronic check     1   \n",
       "\n",
       "          City InternetType NumberofDependents NumberofReferrals    Offer  \\\n",
       "0  Los Angeles  Fiber Optic                  0                 0  Offer E   \n",
       "1  Los Angeles  Fiber Optic                  0                 0     None   \n",
       "2  Los Angeles  Fiber Optic                  0                 0     None   \n",
       "3  Los Angeles          DSL                  0                 0     None   \n",
       "4  Los Angeles        Cable                  2                 0     None   \n",
       "\n",
       "  Product/ServiceIssuesReported TotalCustomerSvcRequests  \\\n",
       "0                             0                        2   \n",
       "1                             0                        1   \n",
       "2                             0                        4   \n",
       "3                             0                        4   \n",
       "4                             0                        0   \n",
       "\n",
       "  TotalCustomerSvcRequests  \n",
       "0                        2  \n",
       "1                        1  \n",
       "2                        4  \n",
       "3                        4  \n",
       "4                        0  "
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cat_col = [\"MultipleLines\", \"InternetService\", \"OnlineSecurity\", \"OnlineBackup\", \"StreamingTV\",\n",
    "          \"StreamingMovies\", \"Contract\", \"PaymentMethod\", \"Churn\", \"City\", \"InternetType\", \"NumberofDependents\",\n",
    "          \"NumberofReferrals\", \"Offer\", \"Product/ServiceIssuesReported\", \"TotalCustomerSvcRequests\",\n",
    "          \"TotalCustomerSvcRequests\"]\n",
    "# only turn those that has more than 1 categories into dummies, the rest can stay as numeric as it doesnt matter\n",
    "data2[cat_col].astype(\"category\").head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c149bba4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Need to change Total Charges to float\n",
    "# removing any whitespaces\n",
    "data2[\"TotalCharges\"] = data2[\"TotalCharges\"].replace(\" \",\"\")\n",
    "#force-turning Total Charges to numeric\n",
    "data2[\"TotalCharges\"] = pd.to_numeric(data2[\"TotalCharges\"], downcast = \"float\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "7070c14c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# since we forced-change it, there might be some rows that turned into NA\n",
    "data2[\"TotalCharges\"].isna().sum()\n",
    "\n",
    "data2[\"TotalCharges\"] = data2[\"TotalCharges\"].fillna(value = data3[\"TotalCharges\"].median())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "8c761560",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 7043 entries, 0 to 7042\n",
      "Data columns (total 47 columns):\n",
      " #   Column                         Non-Null Count  Dtype  \n",
      "---  ------                         --------------  -----  \n",
      " 0   gender                         7043 non-null   int64  \n",
      " 1   SeniorCitizen                  7043 non-null   int64  \n",
      " 2   Partner                        7043 non-null   int64  \n",
      " 3   Dependents                     7043 non-null   int64  \n",
      " 4   tenure                         7043 non-null   int64  \n",
      " 5   PhoneService                   7043 non-null   int64  \n",
      " 6   MultipleLines                  7043 non-null   object \n",
      " 7   InternetService                5517 non-null   object \n",
      " 8   OnlineSecurity                 7043 non-null   object \n",
      " 9   OnlineBackup                   7043 non-null   object \n",
      " 10  StreamingTV                    7043 non-null   object \n",
      " 11  StreamingMovies                7043 non-null   object \n",
      " 12  Contract                       7043 non-null   object \n",
      " 13  PaperlessBilling               7043 non-null   int64  \n",
      " 14  PaymentMethod                  7043 non-null   object \n",
      " 15  MonthlyCharges                 7043 non-null   float64\n",
      " 16  TotalCharges                   7043 non-null   float32\n",
      " 17  Churn                          7043 non-null   int64  \n",
      " 18  Age                            7043 non-null   int64  \n",
      " 19  AvgMonthlyGBDownload           7043 non-null   int64  \n",
      " 20  AvgMonthlyLongDistanceCharges  7043 non-null   float64\n",
      " 21  CLTV                           7043 non-null   int64  \n",
      " 22  City                           7043 non-null   object \n",
      " 23  DeviceProtectionPlan           7043 non-null   int64  \n",
      " 24  Gender                         7043 non-null   int64  \n",
      " 25  InternetType                   5517 non-null   object \n",
      " 26  Latitude                       7043 non-null   float64\n",
      " 27  Longitude                      7043 non-null   float64\n",
      " 28  Married                        7043 non-null   int64  \n",
      " 29  MonthlyCharge                  7043 non-null   float64\n",
      " 30  NumberofDependents             7043 non-null   int64  \n",
      " 31  NumberofReferrals              7043 non-null   int64  \n",
      " 32  Offer                          7043 non-null   object \n",
      " 33  Population                     7043 non-null   int64  \n",
      " 34  PremiumTechSupport             7043 non-null   int64  \n",
      " 35  Product/ServiceIssuesReported  7043 non-null   int64  \n",
      " 36  ReferredaFriend                7043 non-null   int64  \n",
      " 37  StreamingMusic                 7043 non-null   int64  \n",
      " 38  TenureinMonths                 7043 non-null   int64  \n",
      " 39  TotalCustomerSvcRequests       7043 non-null   int64  \n",
      " 40  TotalExtraDataCharges          7043 non-null   float64\n",
      " 41  TotalLongDistanceCharges       7043 non-null   float64\n",
      " 42  TotalRefunds                   7043 non-null   float64\n",
      " 43  TotalRegularCharges            7043 non-null   float64\n",
      " 44  Under30                        7043 non-null   int64  \n",
      " 45  UnlimitedData                  7043 non-null   int64  \n",
      " 46  ZipCode                        7043 non-null   int64  \n",
      "dtypes: float32(1), float64(9), int64(26), object(11)\n",
      "memory usage: 2.5+ MB\n"
     ]
    }
   ],
   "source": [
    "data2.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "cb5904d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7043, 1164)"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3 = pd.get_dummies(data2, drop_first = True)\n",
    "data3.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "be08df8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>TotalCharges</th>\n",
       "      <th>Churn</th>\n",
       "      <th>Age</th>\n",
       "      <th>AvgMonthlyGBDownload</th>\n",
       "      <th>AvgMonthlyLongDistanceCharges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>DeviceProtectionPlan</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>MonthlyCharge</th>\n",
       "      <th>NumberofDependents</th>\n",
       "      <th>NumberofReferrals</th>\n",
       "      <th>Population</th>\n",
       "      <th>PremiumTechSupport</th>\n",
       "      <th>Product/ServiceIssuesReported</th>\n",
       "      <th>ReferredaFriend</th>\n",
       "      <th>StreamingMusic</th>\n",
       "      <th>TenureinMonths</th>\n",
       "      <th>TotalCustomerSvcRequests</th>\n",
       "      <th>TotalExtraDataCharges</th>\n",
       "      <th>TotalLongDistanceCharges</th>\n",
       "      <th>TotalRefunds</th>\n",
       "      <th>TotalRegularCharges</th>\n",
       "      <th>Under30</th>\n",
       "      <th>UnlimitedData</th>\n",
       "      <th>ZipCode</th>\n",
       "      <th>MultipleLines_1</th>\n",
       "      <th>MultipleLines_No phone service</th>\n",
       "      <th>InternetService_Fiber optic</th>\n",
       "      <th>OnlineSecurity_1</th>\n",
       "      <th>OnlineSecurity_No internet service</th>\n",
       "      <th>OnlineBackup_1</th>\n",
       "      <th>OnlineBackup_No internet service</th>\n",
       "      <th>StreamingTV_1</th>\n",
       "      <th>StreamingTV_No internet service</th>\n",
       "      <th>StreamingMovies_1</th>\n",
       "      <th>StreamingMovies_No internet service</th>\n",
       "      <th>Contract_One year</th>\n",
       "      <th>Contract_Two year</th>\n",
       "      <th>PaymentMethod_Credit card (automatic)</th>\n",
       "      <th>PaymentMethod_Electronic check</th>\n",
       "      <th>PaymentMethod_Mailed check</th>\n",
       "      <th>City_Acton</th>\n",
       "      <th>City_Adelanto</th>\n",
       "      <th>City_Adin</th>\n",
       "      <th>City_Agoura Hills</th>\n",
       "      <th>City_Aguanga</th>\n",
       "      <th>City_Ahwahnee</th>\n",
       "      <th>City_Alameda</th>\n",
       "      <th>City_Alamo</th>\n",
       "      <th>City_Albany</th>\n",
       "      <th>City_Albion</th>\n",
       "      <th>City_Alderpoint</th>\n",
       "      <th>City_Alhambra</th>\n",
       "      <th>City_Aliso Viejo</th>\n",
       "      <th>City_Alleghany</th>\n",
       "      <th>City_Alpaugh</th>\n",
       "      <th>City_Alpine</th>\n",
       "      <th>City_Alta</th>\n",
       "      <th>City_Altadena</th>\n",
       "      <th>City_Alturas</th>\n",
       "      <th>City_Alviso</th>\n",
       "      <th>City_Amador City</th>\n",
       "      <th>City_Amboy</th>\n",
       "      <th>City_Anaheim</th>\n",
       "      <th>City_Anderson</th>\n",
       "      <th>City_Angels Camp</th>\n",
       "      <th>City_Angelus Oaks</th>\n",
       "      <th>City_Angwin</th>\n",
       "      <th>City_Annapolis</th>\n",
       "      <th>City_Antelope</th>\n",
       "      <th>City_Antioch</th>\n",
       "      <th>City_Anza</th>\n",
       "      <th>City_Apple Valley</th>\n",
       "      <th>City_Applegate</th>\n",
       "      <th>City_Aptos</th>\n",
       "      <th>City_Arbuckle</th>\n",
       "      <th>City_Arcadia</th>\n",
       "      <th>City_Arcata</th>\n",
       "      <th>City_Armona</th>\n",
       "      <th>City_Arnold</th>\n",
       "      <th>City_Aromas</th>\n",
       "      <th>City_Arroyo Grande</th>\n",
       "      <th>City_Artesia</th>\n",
       "      <th>City_Arvin</th>\n",
       "      <th>City_Atascadero</th>\n",
       "      <th>City_Atherton</th>\n",
       "      <th>City_Atwater</th>\n",
       "      <th>City_Auberry</th>\n",
       "      <th>City_Auburn</th>\n",
       "      <th>City_Avalon</th>\n",
       "      <th>City_Avenal</th>\n",
       "      <th>City_Avery</th>\n",
       "      <th>City_Avila Beach</th>\n",
       "      <th>City_Azusa</th>\n",
       "      <th>City_Badger</th>\n",
       "      <th>City_Baker</th>\n",
       "      <th>City_Bakersfield</th>\n",
       "      <th>City_Baldwin Park</th>\n",
       "      <th>City_Ballico</th>\n",
       "      <th>City_Bangor</th>\n",
       "      <th>City_Banning</th>\n",
       "      <th>City_Barstow</th>\n",
       "      <th>City_Bass Lake</th>\n",
       "      <th>City_Bayside</th>\n",
       "      <th>City_Beale Afb</th>\n",
       "      <th>City_Beaumont</th>\n",
       "      <th>City_Bell</th>\n",
       "      <th>City_Bella Vista</th>\n",
       "      <th>City_Bellflower</th>\n",
       "      <th>City_Belmont</th>\n",
       "      <th>City_Belvedere Tiburon</th>\n",
       "      <th>City_Ben Lomond</th>\n",
       "      <th>City_Benicia</th>\n",
       "      <th>City_Benton</th>\n",
       "      <th>City_Berkeley</th>\n",
       "      <th>City_Berry Creek</th>\n",
       "      <th>City_Bethel Island</th>\n",
       "      <th>City_Beverly Hills</th>\n",
       "      <th>City_Bieber</th>\n",
       "      <th>City_Big Bar</th>\n",
       "      <th>City_Big Bear City</th>\n",
       "      <th>City_Big Bear Lake</th>\n",
       "      <th>City_Big Bend</th>\n",
       "      <th>City_Big Creek</th>\n",
       "      <th>City_Big Oak Flat</th>\n",
       "      <th>City_Big Pine</th>\n",
       "      <th>City_Biggs</th>\n",
       "      <th>City_Biola</th>\n",
       "      <th>City_Birds Landing</th>\n",
       "      <th>City_Bishop</th>\n",
       "      <th>City_Blairsden Graeagle</th>\n",
       "      <th>City_Blocksburg</th>\n",
       "      <th>City_Bloomington</th>\n",
       "      <th>City_Blue Lake</th>\n",
       "      <th>City_Blythe</th>\n",
       "      <th>City_Bodega</th>\n",
       "      <th>City_Bodega Bay</th>\n",
       "      <th>City_Bodfish</th>\n",
       "      <th>City_Bolinas</th>\n",
       "      <th>City_Bonita</th>\n",
       "      <th>City_Bonsall</th>\n",
       "      <th>City_Boonville</th>\n",
       "      <th>City_Boron</th>\n",
       "      <th>City_Borrego Springs</th>\n",
       "      <th>City_Boulder Creek</th>\n",
       "      <th>City_Boulevard</th>\n",
       "      <th>City_Bradley</th>\n",
       "      <th>City_Branscomb</th>\n",
       "      <th>City_Brawley</th>\n",
       "      <th>City_Brea</th>\n",
       "      <th>City_Brentwood</th>\n",
       "      <th>City_Bridgeport</th>\n",
       "      <th>City_Bridgeville</th>\n",
       "      <th>City_Brisbane</th>\n",
       "      <th>City_Brookdale</th>\n",
       "      <th>City_Brooks</th>\n",
       "      <th>City_Browns Valley</th>\n",
       "      <th>City_Brownsville</th>\n",
       "      <th>City_Buellton</th>\n",
       "      <th>City_Buena Park</th>\n",
       "      <th>City_Burbank</th>\n",
       "      <th>City_Burlingame</th>\n",
       "      <th>City_Burney</th>\n",
       "      <th>City_Burnt Ranch</th>\n",
       "      <th>City_Burson</th>\n",
       "      <th>City_Butte City</th>\n",
       "      <th>City_Buttonwillow</th>\n",
       "      <th>City_Byron</th>\n",
       "      <th>City_Cabazon</th>\n",
       "      <th>City_Calabasas</th>\n",
       "      <th>City_Calexico</th>\n",
       "      <th>City_Caliente</th>\n",
       "      <th>City_California City</th>\n",
       "      <th>City_California Hot Springs</th>\n",
       "      <th>City_Calimesa</th>\n",
       "      <th>City_Calipatria</th>\n",
       "      <th>City_Calistoga</th>\n",
       "      <th>City_Callahan</th>\n",
       "      <th>City_Calpine</th>\n",
       "      <th>City_Camarillo</th>\n",
       "      <th>City_Cambria</th>\n",
       "      <th>City_Camino</th>\n",
       "      <th>City_Camp Nelson</th>\n",
       "      <th>City_Campbell</th>\n",
       "      <th>City_Campo</th>\n",
       "      <th>City_Campo Seco</th>\n",
       "      <th>City_Camptonville</th>\n",
       "      <th>City_Canby</th>\n",
       "      <th>City_Canoga Park</th>\n",
       "      <th>City_Cantua Creek</th>\n",
       "      <th>City_Canyon Country</th>\n",
       "      <th>City_Canyon Dam</th>\n",
       "      <th>City_Capay</th>\n",
       "      <th>City_Capistrano Beach</th>\n",
       "      <th>City_Capitola</th>\n",
       "      <th>City_Cardiff By The Sea</th>\n",
       "      <th>City_Carlotta</th>\n",
       "      <th>City_Carlsbad</th>\n",
       "      <th>City_Carmel</th>\n",
       "      <th>City_Carmel By The Sea</th>\n",
       "      <th>City_Carmel Valley</th>\n",
       "      <th>City_Carmichael</th>\n",
       "      <th>City_Carnelian Bay</th>\n",
       "      <th>City_Carpinteria</th>\n",
       "      <th>City_Carson</th>\n",
       "      <th>City_Caruthers</th>\n",
       "      <th>City_Casmalia</th>\n",
       "      <th>City_Caspar</th>\n",
       "      <th>City_Cassel</th>\n",
       "      <th>City_Castaic</th>\n",
       "      <th>City_Castella</th>\n",
       "      <th>City_Castro Valley</th>\n",
       "      <th>City_Castroville</th>\n",
       "      <th>City_Cathedral City</th>\n",
       "      <th>City_Catheys Valley</th>\n",
       "      <th>City_Cayucos</th>\n",
       "      <th>City_Cazadero</th>\n",
       "      <th>City_Cedar Glen</th>\n",
       "      <th>City_Cedarville</th>\n",
       "      <th>City_Ceres</th>\n",
       "      <th>City_Cerritos</th>\n",
       "      <th>City_Challenge</th>\n",
       "      <th>City_Chatsworth</th>\n",
       "      <th>City_Chester</th>\n",
       "      <th>City_Chico</th>\n",
       "      <th>City_Chilcoot</th>\n",
       "      <th>City_Chino</th>\n",
       "      <th>City_Chino Hills</th>\n",
       "      <th>City_Chowchilla</th>\n",
       "      <th>City_Chualar</th>\n",
       "      <th>City_Chula Vista</th>\n",
       "      <th>City_Citrus Heights</th>\n",
       "      <th>City_Claremont</th>\n",
       "      <th>City_Clarksburg</th>\n",
       "      <th>City_Clayton</th>\n",
       "      <th>City_Clearlake</th>\n",
       "      <th>City_Clearlake Oaks</th>\n",
       "      <th>City_Clements</th>\n",
       "      <th>City_Clio</th>\n",
       "      <th>City_Clipper Mills</th>\n",
       "      <th>City_Cloverdale</th>\n",
       "      <th>City_Clovis</th>\n",
       "      <th>City_Coachella</th>\n",
       "      <th>City_Coalinga</th>\n",
       "      <th>City_Coarsegold</th>\n",
       "      <th>City_Cobb</th>\n",
       "      <th>City_Coleville</th>\n",
       "      <th>City_Colfax</th>\n",
       "      <th>City_Colton</th>\n",
       "      <th>City_Columbia</th>\n",
       "      <th>City_Colusa</th>\n",
       "      <th>City_Comptche</th>\n",
       "      <th>City_Compton</th>\n",
       "      <th>City_Concord</th>\n",
       "      <th>City_Cool</th>\n",
       "      <th>City_Copperopolis</th>\n",
       "      <th>City_Corcoran</th>\n",
       "      <th>City_Corning</th>\n",
       "      <th>City_Corona</th>\n",
       "      <th>City_Corona Del Mar</th>\n",
       "      <th>City_Coronado</th>\n",
       "      <th>City_Corte Madera</th>\n",
       "      <th>City_Costa Mesa</th>\n",
       "      <th>City_Cotati</th>\n",
       "      <th>City_Cottonwood</th>\n",
       "      <th>City_Coulterville</th>\n",
       "      <th>City_Courtland</th>\n",
       "      <th>City_Covelo</th>\n",
       "      <th>City_Covina</th>\n",
       "      <th>City_Crescent Mills</th>\n",
       "      <th>City_Cressey</th>\n",
       "      <th>City_Crestline</th>\n",
       "      <th>City_Creston</th>\n",
       "      <th>City_Crockett</th>\n",
       "      <th>City_Crows Landing</th>\n",
       "      <th>City_Culver City</th>\n",
       "      <th>City_Cupertino</th>\n",
       "      <th>City_Cutler</th>\n",
       "      <th>City_Cypress</th>\n",
       "      <th>City_Daggett</th>\n",
       "      <th>City_Daly City</th>\n",
       "      <th>City_Dana Point</th>\n",
       "      <th>City_Danville</th>\n",
       "      <th>City_Darwin</th>\n",
       "      <th>City_Davenport</th>\n",
       "      <th>City_Davis</th>\n",
       "      <th>City_Davis Creek</th>\n",
       "      <th>City_Death Valley</th>\n",
       "      <th>City_Deer Park</th>\n",
       "      <th>City_Del Mar</th>\n",
       "      <th>City_Del Rey</th>\n",
       "      <th>City_Delano</th>\n",
       "      <th>City_Delhi</th>\n",
       "      <th>City_Denair</th>\n",
       "      <th>City_Descanso</th>\n",
       "      <th>City_Desert Center</th>\n",
       "      <th>City_Desert Hot Springs</th>\n",
       "      <th>City_Diamond Bar</th>\n",
       "      <th>City_Diamond Springs</th>\n",
       "      <th>City_Dillon Beach</th>\n",
       "      <th>City_Dinuba</th>\n",
       "      <th>City_Dixon</th>\n",
       "      <th>City_Dobbins</th>\n",
       "      <th>City_Dorris</th>\n",
       "      <th>City_Dos Palos</th>\n",
       "      <th>City_Dos Rios</th>\n",
       "      <th>City_Douglas City</th>\n",
       "      <th>City_Downey</th>\n",
       "      <th>City_Downieville</th>\n",
       "      <th>City_Doyle</th>\n",
       "      <th>City_Duarte</th>\n",
       "      <th>City_Dublin</th>\n",
       "      <th>City_Ducor</th>\n",
       "      <th>City_Dulzura</th>\n",
       "      <th>City_Duncans Mills</th>\n",
       "      <th>City_Dunlap</th>\n",
       "      <th>City_Dunnigan</th>\n",
       "      <th>City_Dunsmuir</th>\n",
       "      <th>City_Durham</th>\n",
       "      <th>City_Dutch Flat</th>\n",
       "      <th>City_Eagleville</th>\n",
       "      <th>City_Earlimart</th>\n",
       "      <th>City_Earp</th>\n",
       "      <th>City_Echo Lake</th>\n",
       "      <th>City_Edwards</th>\n",
       "      <th>City_El Cajon</th>\n",
       "      <th>City_El Centro</th>\n",
       "      <th>City_El Cerrito</th>\n",
       "      <th>City_El Dorado</th>\n",
       "      <th>City_El Dorado Hills</th>\n",
       "      <th>City_El Monte</th>\n",
       "      <th>City_El Nido</th>\n",
       "      <th>City_El Portal</th>\n",
       "      <th>City_El Segundo</th>\n",
       "      <th>City_El Sobrante</th>\n",
       "      <th>City_Eldridge</th>\n",
       "      <th>City_Elk</th>\n",
       "      <th>City_Elk Creek</th>\n",
       "      <th>City_Elk Grove</th>\n",
       "      <th>City_Elmira</th>\n",
       "      <th>City_Elverta</th>\n",
       "      <th>City_Emeryville</th>\n",
       "      <th>City_Emigrant Gap</th>\n",
       "      <th>City_Encinitas</th>\n",
       "      <th>City_Encino</th>\n",
       "      <th>City_Escalon</th>\n",
       "      <th>City_Escondido</th>\n",
       "      <th>City_Esparto</th>\n",
       "      <th>City_Essex</th>\n",
       "      <th>City_Etna</th>\n",
       "      <th>City_Eureka</th>\n",
       "      <th>City_Exeter</th>\n",
       "      <th>City_Fair Oaks</th>\n",
       "      <th>City_Fairfax</th>\n",
       "      <th>City_Fairfield</th>\n",
       "      <th>City_Fall River Mills</th>\n",
       "      <th>City_Fallbrook</th>\n",
       "      <th>City_Farmersville</th>\n",
       "      <th>City_Farmington</th>\n",
       "      <th>City_Fawnskin</th>\n",
       "      <th>City_Fellows</th>\n",
       "      <th>City_Felton</th>\n",
       "      <th>City_Ferndale</th>\n",
       "      <th>City_Fiddletown</th>\n",
       "      <th>City_Fields Landing</th>\n",
       "      <th>City_Fillmore</th>\n",
       "      <th>City_Firebaugh</th>\n",
       "      <th>City_Fish Camp</th>\n",
       "      <th>City_Five Points</th>\n",
       "      <th>City_Flournoy</th>\n",
       "      <th>City_Folsom</th>\n",
       "      <th>City_Fontana</th>\n",
       "      <th>City_Foothill Ranch</th>\n",
       "      <th>City_Forbestown</th>\n",
       "      <th>City_Forest Falls</th>\n",
       "      <th>City_Forest Knolls</th>\n",
       "      <th>City_Forest Ranch</th>\n",
       "      <th>City_Foresthill</th>\n",
       "      <th>City_Forestville</th>\n",
       "      <th>City_Forks Of Salmon</th>\n",
       "      <th>City_Fort Bidwell</th>\n",
       "      <th>City_Fort Bragg</th>\n",
       "      <th>City_Fort Irwin</th>\n",
       "      <th>City_Fortuna</th>\n",
       "      <th>City_Fountain Valley</th>\n",
       "      <th>City_Fowler</th>\n",
       "      <th>City_Frazier Park</th>\n",
       "      <th>City_Freedom</th>\n",
       "      <th>City_Fremont</th>\n",
       "      <th>City_French Camp</th>\n",
       "      <th>City_French Gulch</th>\n",
       "      <th>City_Fresno</th>\n",
       "      <th>City_Friant</th>\n",
       "      <th>City_Fullerton</th>\n",
       "      <th>City_Fulton</th>\n",
       "      <th>City_Galt</th>\n",
       "      <th>City_Garberville</th>\n",
       "      <th>City_Garden Grove</th>\n",
       "      <th>City_Garden Valley</th>\n",
       "      <th>City_Gardena</th>\n",
       "      <th>City_Gasquet</th>\n",
       "      <th>City_Gazelle</th>\n",
       "      <th>City_Georgetown</th>\n",
       "      <th>City_Gerber</th>\n",
       "      <th>City_Geyserville</th>\n",
       "      <th>City_Gilroy</th>\n",
       "      <th>City_Glen Ellen</th>\n",
       "      <th>City_Glencoe</th>\n",
       "      <th>City_Glendale</th>\n",
       "      <th>City_Glendora</th>\n",
       "      <th>City_Glenhaven</th>\n",
       "      <th>City_Glenn</th>\n",
       "      <th>City_Glennville</th>\n",
       "      <th>City_Gold Run</th>\n",
       "      <th>City_Goleta</th>\n",
       "      <th>City_Gonzales</th>\n",
       "      <th>City_Goodyears Bar</th>\n",
       "      <th>City_Granada Hills</th>\n",
       "      <th>City_Grand Terrace</th>\n",
       "      <th>City_Granite Bay</th>\n",
       "      <th>City_Grass Valley</th>\n",
       "      <th>City_Graton</th>\n",
       "      <th>City_Green Valley Lake</th>\n",
       "      <th>City_Greenbrae</th>\n",
       "      <th>City_Greenfield</th>\n",
       "      <th>City_Greenview</th>\n",
       "      <th>City_Greenville</th>\n",
       "      <th>City_Greenwood</th>\n",
       "      <th>City_Grenada</th>\n",
       "      <th>City_Gridley</th>\n",
       "      <th>City_Grimes</th>\n",
       "      <th>City_Grizzly Flats</th>\n",
       "      <th>City_Groveland</th>\n",
       "      <th>City_Grover Beach</th>\n",
       "      <th>City_Guadalupe</th>\n",
       "      <th>City_Gualala</th>\n",
       "      <th>City_Guatay</th>\n",
       "      <th>City_Guerneville</th>\n",
       "      <th>City_Guinda</th>\n",
       "      <th>City_Gustine</th>\n",
       "      <th>City_Hacienda Heights</th>\n",
       "      <th>City_Half Moon Bay</th>\n",
       "      <th>City_Hamilton City</th>\n",
       "      <th>City_Hanford</th>\n",
       "      <th>City_Happy Camp</th>\n",
       "      <th>City_Harbor City</th>\n",
       "      <th>City_Hat Creek</th>\n",
       "      <th>City_Hathaway Pines</th>\n",
       "      <th>City_Hawaiian Gardens</th>\n",
       "      <th>City_Hawthorne</th>\n",
       "      <th>City_Hayward</th>\n",
       "      <th>City_Healdsburg</th>\n",
       "      <th>City_Heber</th>\n",
       "      <th>City_Helendale</th>\n",
       "      <th>City_Helm</th>\n",
       "      <th>City_Hemet</th>\n",
       "      <th>City_Herald</th>\n",
       "      <th>City_Hercules</th>\n",
       "      <th>City_Herlong</th>\n",
       "      <th>City_Hermosa Beach</th>\n",
       "      <th>City_Hesperia</th>\n",
       "      <th>City_Hickman</th>\n",
       "      <th>City_Highland</th>\n",
       "      <th>City_Hilmar</th>\n",
       "      <th>City_Hinkley</th>\n",
       "      <th>City_Holtville</th>\n",
       "      <th>City_Homeland</th>\n",
       "      <th>City_Homewood</th>\n",
       "      <th>City_Honeydew</th>\n",
       "      <th>City_Hood</th>\n",
       "      <th>City_Hoopa</th>\n",
       "      <th>City_Hopland</th>\n",
       "      <th>City_Hornbrook</th>\n",
       "      <th>City_Hornitos</th>\n",
       "      <th>City_Hughson</th>\n",
       "      <th>City_Hume</th>\n",
       "      <th>City_Huntington Beach</th>\n",
       "      <th>City_Huntington Park</th>\n",
       "      <th>City_Huron</th>\n",
       "      <th>City_Hyampom</th>\n",
       "      <th>City_Hydesville</th>\n",
       "      <th>City_Idyllwild</th>\n",
       "      <th>City_Igo</th>\n",
       "      <th>City_Imperial</th>\n",
       "      <th>City_Imperial Beach</th>\n",
       "      <th>City_Independence</th>\n",
       "      <th>City_Indian Wells</th>\n",
       "      <th>City_Indio</th>\n",
       "      <th>City_Inglewood</th>\n",
       "      <th>City_Inverness</th>\n",
       "      <th>City_Ione</th>\n",
       "      <th>City_Irvine</th>\n",
       "      <th>City_Isleton</th>\n",
       "      <th>City_Ivanhoe</th>\n",
       "      <th>City_Jackson</th>\n",
       "      <th>City_Jacumba</th>\n",
       "      <th>City_Jamestown</th>\n",
       "      <th>City_Jamul</th>\n",
       "      <th>City_Janesville</th>\n",
       "      <th>City_Jenner</th>\n",
       "      <th>City_Johannesburg</th>\n",
       "      <th>City_Jolon</th>\n",
       "      <th>City_Joshua Tree</th>\n",
       "      <th>City_Julian</th>\n",
       "      <th>City_Junction City</th>\n",
       "      <th>City_June Lake</th>\n",
       "      <th>City_Keeler</th>\n",
       "      <th>City_Keene</th>\n",
       "      <th>City_Kelseyville</th>\n",
       "      <th>City_Kenwood</th>\n",
       "      <th>City_Kerman</th>\n",
       "      <th>City_Kernville</th>\n",
       "      <th>City_Kettleman City</th>\n",
       "      <th>City_Keyes</th>\n",
       "      <th>City_King City</th>\n",
       "      <th>City_Kings Beach</th>\n",
       "      <th>City_Kingsburg</th>\n",
       "      <th>City_Kirkwood</th>\n",
       "      <th>City_Klamath</th>\n",
       "      <th>City_Klamath River</th>\n",
       "      <th>City_Kneeland</th>\n",
       "      <th>City_Knights Landing</th>\n",
       "      <th>City_Korbel</th>\n",
       "      <th>City_Kyburz</th>\n",
       "      <th>City_La Canada Flintridge</th>\n",
       "      <th>City_La Crescenta</th>\n",
       "      <th>City_La Grange</th>\n",
       "      <th>City_La Habra</th>\n",
       "      <th>City_La Honda</th>\n",
       "      <th>City_La Jolla</th>\n",
       "      <th>City_La Mesa</th>\n",
       "      <th>City_La Mirada</th>\n",
       "      <th>City_La Palma</th>\n",
       "      <th>City_La Puente</th>\n",
       "      <th>City_La Quinta</th>\n",
       "      <th>City_La Verne</th>\n",
       "      <th>City_Ladera Ranch</th>\n",
       "      <th>City_Lafayette</th>\n",
       "      <th>City_Laguna Beach</th>\n",
       "      <th>City_Laguna Hills</th>\n",
       "      <th>City_Laguna Niguel</th>\n",
       "      <th>City_Lagunitas</th>\n",
       "      <th>City_Lake Arrowhead</th>\n",
       "      <th>City_Lake Elsinore</th>\n",
       "      <th>City_Lake Forest</th>\n",
       "      <th>City_Lake Hughes</th>\n",
       "      <th>City_Lake Isabella</th>\n",
       "      <th>City_Lakehead</th>\n",
       "      <th>City_Lakeport</th>\n",
       "      <th>City_Lakeshore</th>\n",
       "      <th>City_Lakeside</th>\n",
       "      <th>City_Lakewood</th>\n",
       "      <th>City_Lamont</th>\n",
       "      <th>City_Lancaster</th>\n",
       "      <th>City_Landers</th>\n",
       "      <th>City_Larkspur</th>\n",
       "      <th>City_Lathrop</th>\n",
       "      <th>City_Laton</th>\n",
       "      <th>City_Lawndale</th>\n",
       "      <th>City_Laytonville</th>\n",
       "      <th>City_Le Grand</th>\n",
       "      <th>City_Lebec</th>\n",
       "      <th>City_Lee Vining</th>\n",
       "      <th>City_Leggett</th>\n",
       "      <th>City_Lemon Cove</th>\n",
       "      <th>City_Lemon Grove</th>\n",
       "      <th>City_Lemoore</th>\n",
       "      <th>City_Lewiston</th>\n",
       "      <th>City_Likely</th>\n",
       "      <th>City_Lincoln</th>\n",
       "      <th>City_Linden</th>\n",
       "      <th>City_Lindsay</th>\n",
       "      <th>City_Litchfield</th>\n",
       "      <th>City_Little River</th>\n",
       "      <th>City_Littlerock</th>\n",
       "      <th>City_Live Oak</th>\n",
       "      <th>City_Livermore</th>\n",
       "      <th>City_Livingston</th>\n",
       "      <th>City_Llano</th>\n",
       "      <th>City_Lockeford</th>\n",
       "      <th>City_Lockwood</th>\n",
       "      <th>City_Lodi</th>\n",
       "      <th>City_Loleta</th>\n",
       "      <th>City_Loma Linda</th>\n",
       "      <th>City_Loma Mar</th>\n",
       "      <th>City_Lomita</th>\n",
       "      <th>City_Lompoc</th>\n",
       "      <th>City_Long Barn</th>\n",
       "      <th>City_Long Beach</th>\n",
       "      <th>City_Lookout</th>\n",
       "      <th>City_Loomis</th>\n",
       "      <th>City_Los Alamitos</th>\n",
       "      <th>City_Los Alamos</th>\n",
       "      <th>City_Los Altos</th>\n",
       "      <th>City_Los Angeles</th>\n",
       "      <th>City_Los Banos</th>\n",
       "      <th>City_Los Gatos</th>\n",
       "      <th>City_Los Molinos</th>\n",
       "      <th>City_Los Olivos</th>\n",
       "      <th>City_Los Osos</th>\n",
       "      <th>City_Lost Hills</th>\n",
       "      <th>City_Lotus</th>\n",
       "      <th>City_Lower Lake</th>\n",
       "      <th>City_Loyalton</th>\n",
       "      <th>City_Lucerne</th>\n",
       "      <th>City_Lucerne Valley</th>\n",
       "      <th>City_Ludlow</th>\n",
       "      <th>City_Lynwood</th>\n",
       "      <th>City_Lytle Creek</th>\n",
       "      <th>City_Macdoel</th>\n",
       "      <th>City_Mad River</th>\n",
       "      <th>City_Madeline</th>\n",
       "      <th>City_Madera</th>\n",
       "      <th>City_Madison</th>\n",
       "      <th>City_Magalia</th>\n",
       "      <th>City_Malibu</th>\n",
       "      <th>City_Mammoth Lakes</th>\n",
       "      <th>City_Manchester</th>\n",
       "      <th>City_Manhattan Beach</th>\n",
       "      <th>City_Manteca</th>\n",
       "      <th>City_Manton</th>\n",
       "      <th>City_March Air Reserve Base</th>\n",
       "      <th>City_Marina</th>\n",
       "      <th>City_Marina Del Rey</th>\n",
       "      <th>City_Mariposa</th>\n",
       "      <th>City_Markleeville</th>\n",
       "      <th>City_Marshall</th>\n",
       "      <th>City_Martinez</th>\n",
       "      <th>City_Marysville</th>\n",
       "      <th>City_Mather</th>\n",
       "      <th>City_Maxwell</th>\n",
       "      <th>City_Maywood</th>\n",
       "      <th>City_Mc Farland</th>\n",
       "      <th>City_Mc Kittrick</th>\n",
       "      <th>City_Mcarthur</th>\n",
       "      <th>City_Mccloud</th>\n",
       "      <th>City_Mckinleyville</th>\n",
       "      <th>City_Meadow Valley</th>\n",
       "      <th>City_Meadow Vista</th>\n",
       "      <th>City_Mecca</th>\n",
       "      <th>City_Mendocino</th>\n",
       "      <th>City_Menifee</th>\n",
       "      <th>City_Menlo Park</th>\n",
       "      <th>City_Mentone</th>\n",
       "      <th>City_Merced</th>\n",
       "      <th>City_Meridian</th>\n",
       "      <th>City_Mi Wuk Village</th>\n",
       "      <th>City_Middletown</th>\n",
       "      <th>City_Midpines</th>\n",
       "      <th>City_Midway City</th>\n",
       "      <th>City_Milford</th>\n",
       "      <th>City_Mill Creek</th>\n",
       "      <th>City_Mill Valley</th>\n",
       "      <th>City_Millbrae</th>\n",
       "      <th>City_Millville</th>\n",
       "      <th>City_Milpitas</th>\n",
       "      <th>City_Mineral</th>\n",
       "      <th>City_Mira Loma</th>\n",
       "      <th>City_Miramonte</th>\n",
       "      <th>City_Miranda</th>\n",
       "      <th>City_Mission Hills</th>\n",
       "      <th>City_Mission Viejo</th>\n",
       "      <th>City_Modesto</th>\n",
       "      <th>City_Mojave</th>\n",
       "      <th>City_Mokelumne Hill</th>\n",
       "      <th>City_Monrovia</th>\n",
       "      <th>City_Montara</th>\n",
       "      <th>City_Montclair</th>\n",
       "      <th>City_Monte Rio</th>\n",
       "      <th>City_Montebello</th>\n",
       "      <th>City_Monterey</th>\n",
       "      <th>City_Monterey Park</th>\n",
       "      <th>City_Montgomery Creek</th>\n",
       "      <th>City_Montrose</th>\n",
       "      <th>City_Moorpark</th>\n",
       "      <th>City_Moraga</th>\n",
       "      <th>City_Moreno Valley</th>\n",
       "      <th>City_Morgan Hill</th>\n",
       "      <th>City_Morongo Valley</th>\n",
       "      <th>City_Morro Bay</th>\n",
       "      <th>City_Moss Beach</th>\n",
       "      <th>City_Moss Landing</th>\n",
       "      <th>City_Mount Hamilton</th>\n",
       "      <th>City_Mount Hermon</th>\n",
       "      <th>City_Mount Laguna</th>\n",
       "      <th>City_Mount Shasta</th>\n",
       "      <th>City_Mountain Center</th>\n",
       "      <th>City_Mountain Ranch</th>\n",
       "      <th>City_Mountain View</th>\n",
       "      <th>City_Mt Baldy</th>\n",
       "      <th>City_Murphys</th>\n",
       "      <th>City_Murrieta</th>\n",
       "      <th>City_Myers Flat</th>\n",
       "      <th>City_Napa</th>\n",
       "      <th>City_National City</th>\n",
       "      <th>City_Navarro</th>\n",
       "      <th>City_Needles</th>\n",
       "      <th>City_Nevada City</th>\n",
       "      <th>City_New Cuyama</th>\n",
       "      <th>City_Newark</th>\n",
       "      <th>City_Newbury Park</th>\n",
       "      <th>City_Newcastle</th>\n",
       "      <th>City_Newhall</th>\n",
       "      <th>City_Newman</th>\n",
       "      <th>City_Newport Beach</th>\n",
       "      <th>City_Newport Coast</th>\n",
       "      <th>City_Nicasio</th>\n",
       "      <th>City_Nice</th>\n",
       "      <th>City_Nicolaus</th>\n",
       "      <th>City_Niland</th>\n",
       "      <th>City_Nipomo</th>\n",
       "      <th>City_Nipton</th>\n",
       "      <th>City_Norco</th>\n",
       "      <th>City_North Fork</th>\n",
       "      <th>City_North Highlands</th>\n",
       "      <th>City_North Hills</th>\n",
       "      <th>City_North Hollywood</th>\n",
       "      <th>City_North Palm Springs</th>\n",
       "      <th>City_North San Juan</th>\n",
       "      <th>City_Northridge</th>\n",
       "      <th>City_Norwalk</th>\n",
       "      <th>City_Novato</th>\n",
       "      <th>City_Nubieber</th>\n",
       "      <th>City_Nuevo</th>\n",
       "      <th>City_O Neals</th>\n",
       "      <th>City_Oak Park</th>\n",
       "      <th>City_Oak Run</th>\n",
       "      <th>City_Oak View</th>\n",
       "      <th>City_Oakdale</th>\n",
       "      <th>City_Oakhurst</th>\n",
       "      <th>City_Oakland</th>\n",
       "      <th>City_Oakley</th>\n",
       "      <th>City_Occidental</th>\n",
       "      <th>City_Oceano</th>\n",
       "      <th>City_Oceanside</th>\n",
       "      <th>City_Ocotillo</th>\n",
       "      <th>City_Ojai</th>\n",
       "      <th>City_Olancha</th>\n",
       "      <th>City_Old Station</th>\n",
       "      <th>City_Olema</th>\n",
       "      <th>City_Olivehurst</th>\n",
       "      <th>City_Olympic Valley</th>\n",
       "      <th>City_Ontario</th>\n",
       "      <th>City_Orange</th>\n",
       "      <th>City_Orange Cove</th>\n",
       "      <th>City_Orangevale</th>\n",
       "      <th>City_Oregon House</th>\n",
       "      <th>City_Orick</th>\n",
       "      <th>City_Orinda</th>\n",
       "      <th>City_Orland</th>\n",
       "      <th>City_Orleans</th>\n",
       "      <th>City_Oro Grande</th>\n",
       "      <th>City_Orosi</th>\n",
       "      <th>City_Oroville</th>\n",
       "      <th>City_Oxnard</th>\n",
       "      <th>City_Pacific Grove</th>\n",
       "      <th>City_Pacific Palisades</th>\n",
       "      <th>City_Pacifica</th>\n",
       "      <th>City_Pacoima</th>\n",
       "      <th>City_Paicines</th>\n",
       "      <th>City_Pala</th>\n",
       "      <th>City_Palermo</th>\n",
       "      <th>City_Palm Desert</th>\n",
       "      <th>City_Palm Springs</th>\n",
       "      <th>City_Palmdale</th>\n",
       "      <th>City_Palo Alto</th>\n",
       "      <th>City_Palo Cedro</th>\n",
       "      <th>City_Palo Verde</th>\n",
       "      <th>City_Palomar Mountain</th>\n",
       "      <th>City_Palos Verdes Peninsula</th>\n",
       "      <th>City_Paradise</th>\n",
       "      <th>City_Paramount</th>\n",
       "      <th>City_Parker Dam</th>\n",
       "      <th>City_Parlier</th>\n",
       "      <th>City_Pasadena</th>\n",
       "      <th>City_Paskenta</th>\n",
       "      <th>City_Paso Robles</th>\n",
       "      <th>City_Patterson</th>\n",
       "      <th>City_Pauma Valley</th>\n",
       "      <th>City_Paynes Creek</th>\n",
       "      <th>City_Pearblossom</th>\n",
       "      <th>City_Pebble Beach</th>\n",
       "      <th>City_Penn Valley</th>\n",
       "      <th>City_Penngrove</th>\n",
       "      <th>City_Penryn</th>\n",
       "      <th>City_Perris</th>\n",
       "      <th>City_Pescadero</th>\n",
       "      <th>City_Petaluma</th>\n",
       "      <th>City_Petrolia</th>\n",
       "      <th>City_Phelan</th>\n",
       "      <th>City_Phillipsville</th>\n",
       "      <th>City_Philo</th>\n",
       "      <th>City_Pico Rivera</th>\n",
       "      <th>City_Piercy</th>\n",
       "      <th>City_Pilot Hill</th>\n",
       "      <th>City_Pine Grove</th>\n",
       "      <th>City_Pine Valley</th>\n",
       "      <th>City_Pinecrest</th>\n",
       "      <th>City_Pinole</th>\n",
       "      <th>City_Pinon Hills</th>\n",
       "      <th>City_Pioneer</th>\n",
       "      <th>City_Pioneertown</th>\n",
       "      <th>City_Piru</th>\n",
       "      <th>City_Pismo Beach</th>\n",
       "      <th>City_Pittsburg</th>\n",
       "      <th>City_Pixley</th>\n",
       "      <th>City_Placentia</th>\n",
       "      <th>City_Placerville</th>\n",
       "      <th>City_Planada</th>\n",
       "      <th>City_Platina</th>\n",
       "      <th>City_Playa Del Rey</th>\n",
       "      <th>City_Pleasant Grove</th>\n",
       "      <th>City_Pleasant Hill</th>\n",
       "      <th>City_Pleasanton</th>\n",
       "      <th>City_Plymouth</th>\n",
       "      <th>City_Point Arena</th>\n",
       "      <th>City_Point Reyes Station</th>\n",
       "      <th>City_Pollock Pines</th>\n",
       "      <th>City_Pomona</th>\n",
       "      <th>City_Pope Valley</th>\n",
       "      <th>City_Port Costa</th>\n",
       "      <th>City_Port Hueneme</th>\n",
       "      <th>City_Porter Ranch</th>\n",
       "      <th>City_Porterville</th>\n",
       "      <th>City_Portola</th>\n",
       "      <th>City_Portola Valley</th>\n",
       "      <th>City_Posey</th>\n",
       "      <th>City_Potrero</th>\n",
       "      <th>City_Potter Valley</th>\n",
       "      <th>City_Poway</th>\n",
       "      <th>City_Prather</th>\n",
       "      <th>City_Princeton</th>\n",
       "      <th>City_Quincy</th>\n",
       "      <th>City_Raisin City</th>\n",
       "      <th>City_Ramona</th>\n",
       "      <th>City_Ranchita</th>\n",
       "      <th>City_Rancho Cordova</th>\n",
       "      <th>City_Rancho Cucamonga</th>\n",
       "      <th>City_Rancho Mirage</th>\n",
       "      <th>City_Rancho Palos Verdes</th>\n",
       "      <th>City_Rancho Santa Fe</th>\n",
       "      <th>City_Rancho Santa Margarita</th>\n",
       "      <th>City_Randsburg</th>\n",
       "      <th>City_Ravendale</th>\n",
       "      <th>City_Raymond</th>\n",
       "      <th>City_Red Bluff</th>\n",
       "      <th>City_Redcrest</th>\n",
       "      <th>City_Redding</th>\n",
       "      <th>City_Redlands</th>\n",
       "      <th>City_Redondo Beach</th>\n",
       "      <th>City_Redway</th>\n",
       "      <th>City_Redwood City</th>\n",
       "      <th>City_Redwood Valley</th>\n",
       "      <th>City_Reedley</th>\n",
       "      <th>City_Rescue</th>\n",
       "      <th>City_Reseda</th>\n",
       "      <th>City_Rialto</th>\n",
       "      <th>City_Richgrove</th>\n",
       "      <th>City_Richmond</th>\n",
       "      <th>City_Richvale</th>\n",
       "      <th>City_Rio Dell</th>\n",
       "      <th>City_Rio Linda</th>\n",
       "      <th>City_Rio Nido</th>\n",
       "      <th>City_Rio Oso</th>\n",
       "      <th>City_Rio Vista</th>\n",
       "      <th>City_Ripon</th>\n",
       "      <th>City_River Pines</th>\n",
       "      <th>City_Riverbank</th>\n",
       "      <th>City_Riverdale</th>\n",
       "      <th>City_Riverside</th>\n",
       "      <th>City_Rocklin</th>\n",
       "      <th>City_Rodeo</th>\n",
       "      <th>City_Rohnert Park</th>\n",
       "      <th>City_Rosamond</th>\n",
       "      <th>City_Rosemead</th>\n",
       "      <th>City_Roseville</th>\n",
       "      <th>City_Rough And Ready</th>\n",
       "      <th>City_Round Mountain</th>\n",
       "      <th>City_Rowland Heights</th>\n",
       "      <th>City_Running Springs</th>\n",
       "      <th>City_Sacramento</th>\n",
       "      <th>City_Saint Helena</th>\n",
       "      <th>City_Salida</th>\n",
       "      <th>City_Salinas</th>\n",
       "      <th>City_Salton City</th>\n",
       "      <th>City_Salyer</th>\n",
       "      <th>City_Samoa</th>\n",
       "      <th>City_San Andreas</th>\n",
       "      <th>City_San Anselmo</th>\n",
       "      <th>City_San Ardo</th>\n",
       "      <th>City_San Bernardino</th>\n",
       "      <th>City_San Bruno</th>\n",
       "      <th>City_San Carlos</th>\n",
       "      <th>City_San Clemente</th>\n",
       "      <th>City_San Diego</th>\n",
       "      <th>City_San Dimas</th>\n",
       "      <th>City_San Fernando</th>\n",
       "      <th>City_San Francisco</th>\n",
       "      <th>City_San Gabriel</th>\n",
       "      <th>City_San Geronimo</th>\n",
       "      <th>City_San Gregorio</th>\n",
       "      <th>City_San Jacinto</th>\n",
       "      <th>City_San Joaquin</th>\n",
       "      <th>City_San Jose</th>\n",
       "      <th>City_San Juan Bautista</th>\n",
       "      <th>City_San Juan Capistrano</th>\n",
       "      <th>City_San Leandro</th>\n",
       "      <th>City_San Lorenzo</th>\n",
       "      <th>City_San Lucas</th>\n",
       "      <th>City_San Luis Obispo</th>\n",
       "      <th>City_San Marcos</th>\n",
       "      <th>City_San Marino</th>\n",
       "      <th>City_San Martin</th>\n",
       "      <th>City_San Mateo</th>\n",
       "      <th>City_San Miguel</th>\n",
       "      <th>City_San Pablo</th>\n",
       "      <th>City_San Pedro</th>\n",
       "      <th>City_San Quentin</th>\n",
       "      <th>City_San Rafael</th>\n",
       "      <th>City_San Ramon</th>\n",
       "      <th>City_San Simeon</th>\n",
       "      <th>City_San Ysidro</th>\n",
       "      <th>City_Sanger</th>\n",
       "      <th>City_Santa Ana</th>\n",
       "      <th>City_Santa Barbara</th>\n",
       "      <th>City_Santa Clara</th>\n",
       "      <th>City_Santa Clarita</th>\n",
       "      <th>City_Santa Cruz</th>\n",
       "      <th>City_Santa Fe Springs</th>\n",
       "      <th>City_Santa Margarita</th>\n",
       "      <th>City_Santa Maria</th>\n",
       "      <th>City_Santa Monica</th>\n",
       "      <th>City_Santa Paula</th>\n",
       "      <th>City_Santa Rosa</th>\n",
       "      <th>City_Santa Ynez</th>\n",
       "      <th>City_Santa Ysabel</th>\n",
       "      <th>City_Santee</th>\n",
       "      <th>City_Saratoga</th>\n",
       "      <th>City_Sausalito</th>\n",
       "      <th>City_Scotia</th>\n",
       "      <th>City_Scott Bar</th>\n",
       "      <th>City_Scotts Valley</th>\n",
       "      <th>City_Seal Beach</th>\n",
       "      <th>City_Seaside</th>\n",
       "      <th>City_Sebastopol</th>\n",
       "      <th>City_Seeley</th>\n",
       "      <th>City_Seiad Valley</th>\n",
       "      <th>City_Selma</th>\n",
       "      <th>City_Sequoia National Park</th>\n",
       "      <th>City_Shafter</th>\n",
       "      <th>City_Shandon</th>\n",
       "      <th>City_Shasta</th>\n",
       "      <th>City_Shasta Lake</th>\n",
       "      <th>City_Shaver Lake</th>\n",
       "      <th>City_Sheep Ranch</th>\n",
       "      <th>City_Sheridan</th>\n",
       "      <th>City_Sherman Oaks</th>\n",
       "      <th>City_Shingle Springs</th>\n",
       "      <th>City_Shingletown</th>\n",
       "      <th>City_Shoshone</th>\n",
       "      <th>City_Sierra City</th>\n",
       "      <th>City_Sierra Madre</th>\n",
       "      <th>City_Sierraville</th>\n",
       "      <th>City_Silverado</th>\n",
       "      <th>City_Simi Valley</th>\n",
       "      <th>City_Sloughhouse</th>\n",
       "      <th>City_Smartville</th>\n",
       "      <th>City_Smith River</th>\n",
       "      <th>City_Snelling</th>\n",
       "      <th>City_Soda Springs</th>\n",
       "      <th>City_Solana Beach</th>\n",
       "      <th>City_Soledad</th>\n",
       "      <th>City_Solvang</th>\n",
       "      <th>City_Somerset</th>\n",
       "      <th>City_Somes Bar</th>\n",
       "      <th>City_Somis</th>\n",
       "      <th>City_Sonoma</th>\n",
       "      <th>City_Sonora</th>\n",
       "      <th>City_Soquel</th>\n",
       "      <th>City_Soulsbyville</th>\n",
       "      <th>City_South Dos Palos</th>\n",
       "      <th>City_South El Monte</th>\n",
       "      <th>City_South Gate</th>\n",
       "      <th>City_South Lake Tahoe</th>\n",
       "      <th>City_South Pasadena</th>\n",
       "      <th>City_South San Francisco</th>\n",
       "      <th>City_Spreckels</th>\n",
       "      <th>City_Spring Valley</th>\n",
       "      <th>City_Springville</th>\n",
       "      <th>City_Squaw Valley</th>\n",
       "      <th>City_Standish</th>\n",
       "      <th>City_Stanford</th>\n",
       "      <th>City_Stanton</th>\n",
       "      <th>City_Stevenson Ranch</th>\n",
       "      <th>City_Stevinson</th>\n",
       "      <th>City_Stinson Beach</th>\n",
       "      <th>City_Stirling City</th>\n",
       "      <th>City_Stockton</th>\n",
       "      <th>City_Stonyford</th>\n",
       "      <th>City_Stratford</th>\n",
       "      <th>City_Strathmore</th>\n",
       "      <th>City_Strawberry Valley</th>\n",
       "      <th>City_Studio City</th>\n",
       "      <th>City_Sugarloaf</th>\n",
       "      <th>City_Suisun City</th>\n",
       "      <th>City_Sultana</th>\n",
       "      <th>City_Summerland</th>\n",
       "      <th>City_Sun City</th>\n",
       "      <th>City_Sun Valley</th>\n",
       "      <th>City_Sunland</th>\n",
       "      <th>City_Sunnyvale</th>\n",
       "      <th>City_Sunol</th>\n",
       "      <th>City_Sunset Beach</th>\n",
       "      <th>City_Surfside</th>\n",
       "      <th>City_Susanville</th>\n",
       "      <th>City_Sutter</th>\n",
       "      <th>City_Sutter Creek</th>\n",
       "      <th>City_Sylmar</th>\n",
       "      <th>City_Taft</th>\n",
       "      <th>City_Tahoe City</th>\n",
       "      <th>City_Tahoe Vista</th>\n",
       "      <th>City_Tahoma</th>\n",
       "      <th>City_Tarzana</th>\n",
       "      <th>City_Taylorsville</th>\n",
       "      <th>City_Tecate</th>\n",
       "      <th>City_Tehachapi</th>\n",
       "      <th>City_Tehama</th>\n",
       "      <th>City_Temecula</th>\n",
       "      <th>City_Temple City</th>\n",
       "      <th>City_Templeton</th>\n",
       "      <th>City_Termo</th>\n",
       "      <th>City_Terra Bella</th>\n",
       "      <th>City_The Sea Ranch</th>\n",
       "      <th>City_Thermal</th>\n",
       "      <th>City_Thornton</th>\n",
       "      <th>City_Thousand Oaks</th>\n",
       "      <th>City_Thousand Palms</th>\n",
       "      <th>City_Three Rivers</th>\n",
       "      <th>City_Tollhouse</th>\n",
       "      <th>City_Tomales</th>\n",
       "      <th>City_Topanga</th>\n",
       "      <th>City_Topaz</th>\n",
       "      <th>City_Torrance</th>\n",
       "      <th>City_Trabuco Canyon</th>\n",
       "      <th>City_Tracy</th>\n",
       "      <th>City_Tranquillity</th>\n",
       "      <th>City_Traver</th>\n",
       "      <th>City_Travis Afb</th>\n",
       "      <th>City_Trinidad</th>\n",
       "      <th>City_Trinity Center</th>\n",
       "      <th>City_Tujunga</th>\n",
       "      <th>City_Tulare</th>\n",
       "      <th>City_Tulelake</th>\n",
       "      <th>City_Tuolumne</th>\n",
       "      <th>City_Tupman</th>\n",
       "      <th>City_Turlock</th>\n",
       "      <th>City_Tustin</th>\n",
       "      <th>City_Twain</th>\n",
       "      <th>City_Twain Harte</th>\n",
       "      <th>City_Twentynine Palms</th>\n",
       "      <th>City_Twin Bridges</th>\n",
       "      <th>City_Ukiah</th>\n",
       "      <th>City_Union City</th>\n",
       "      <th>City_Upland</th>\n",
       "      <th>City_Upper Lake</th>\n",
       "      <th>City_Vacaville</th>\n",
       "      <th>City_Valencia</th>\n",
       "      <th>City_Vallecito</th>\n",
       "      <th>City_Vallejo</th>\n",
       "      <th>City_Valley Center</th>\n",
       "      <th>City_Valley Ford</th>\n",
       "      <th>City_Valley Springs</th>\n",
       "      <th>City_Valley Village</th>\n",
       "      <th>City_Valyermo</th>\n",
       "      <th>City_Van Nuys</th>\n",
       "      <th>City_Venice</th>\n",
       "      <th>City_Ventura</th>\n",
       "      <th>City_Vernalis</th>\n",
       "      <th>City_Victorville</th>\n",
       "      <th>City_Villa Park</th>\n",
       "      <th>City_Vina</th>\n",
       "      <th>City_Visalia</th>\n",
       "      <th>City_Vista</th>\n",
       "      <th>City_Volcano</th>\n",
       "      <th>City_Wallace</th>\n",
       "      <th>City_Walnut</th>\n",
       "      <th>City_Walnut Creek</th>\n",
       "      <th>City_Walnut Grove</th>\n",
       "      <th>City_Warner Springs</th>\n",
       "      <th>City_Wasco</th>\n",
       "      <th>City_Washington</th>\n",
       "      <th>City_Waterford</th>\n",
       "      <th>City_Watsonville</th>\n",
       "      <th>City_Weaverville</th>\n",
       "      <th>City_Weed</th>\n",
       "      <th>City_Weimar</th>\n",
       "      <th>City_Weldon</th>\n",
       "      <th>City_Wendel</th>\n",
       "      <th>City_Weott</th>\n",
       "      <th>City_West Covina</th>\n",
       "      <th>City_West Hills</th>\n",
       "      <th>City_West Hollywood</th>\n",
       "      <th>City_West Point</th>\n",
       "      <th>City_West Sacramento</th>\n",
       "      <th>City_Westlake Village</th>\n",
       "      <th>City_Westminster</th>\n",
       "      <th>City_Westmorland</th>\n",
       "      <th>City_Westport</th>\n",
       "      <th>City_Westwood</th>\n",
       "      <th>City_Wheatland</th>\n",
       "      <th>City_White Water</th>\n",
       "      <th>City_Whitmore</th>\n",
       "      <th>City_Whittier</th>\n",
       "      <th>City_Wildomar</th>\n",
       "      <th>City_Williams</th>\n",
       "      <th>City_Willits</th>\n",
       "      <th>City_Willow Creek</th>\n",
       "      <th>City_Willows</th>\n",
       "      <th>City_Wilmington</th>\n",
       "      <th>City_Wilseyville</th>\n",
       "      <th>City_Wilton</th>\n",
       "      <th>City_Winchester</th>\n",
       "      <th>City_Windsor</th>\n",
       "      <th>City_Winnetka</th>\n",
       "      <th>City_Winterhaven</th>\n",
       "      <th>City_Winters</th>\n",
       "      <th>City_Winton</th>\n",
       "      <th>City_Wishon</th>\n",
       "      <th>City_Witter Springs</th>\n",
       "      <th>City_Wofford Heights</th>\n",
       "      <th>City_Woodacre</th>\n",
       "      <th>City_Woodbridge</th>\n",
       "      <th>City_Woodlake</th>\n",
       "      <th>City_Woodland</th>\n",
       "      <th>City_Woodland Hills</th>\n",
       "      <th>City_Woody</th>\n",
       "      <th>City_Wrightwood</th>\n",
       "      <th>City_Yermo</th>\n",
       "      <th>City_Yorba Linda</th>\n",
       "      <th>City_Yorkville</th>\n",
       "      <th>City_Yountville</th>\n",
       "      <th>City_Yreka</th>\n",
       "      <th>City_Yuba City</th>\n",
       "      <th>City_Yucaipa</th>\n",
       "      <th>City_Yucca Valley</th>\n",
       "      <th>City_Zenia</th>\n",
       "      <th>InternetType_DSL</th>\n",
       "      <th>InternetType_Fiber Optic</th>\n",
       "      <th>Offer_Offer A</th>\n",
       "      <th>Offer_Offer B</th>\n",
       "      <th>Offer_Offer C</th>\n",
       "      <th>Offer_Offer D</th>\n",
       "      <th>Offer_Offer E</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>29.85</td>\n",
       "      <td>29.850000</td>\n",
       "      <td>0</td>\n",
       "      <td>36</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3964</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>33.973616</td>\n",
       "      <td>-118.249020</td>\n",
       "      <td>1</td>\n",
       "      <td>29.850</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>54492</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.85</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90001</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>56.95</td>\n",
       "      <td>1889.500000</td>\n",
       "      <td>0</td>\n",
       "      <td>46</td>\n",
       "      <td>16</td>\n",
       "      <td>17.09</td>\n",
       "      <td>3441</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>33.949255</td>\n",
       "      <td>-118.246978</td>\n",
       "      <td>0</td>\n",
       "      <td>56.950</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>44586</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34</td>\n",
       "      <td>1</td>\n",
       "      <td>30.23</td>\n",
       "      <td>581.06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1889.50</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90002</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>53.85</td>\n",
       "      <td>108.150002</td>\n",
       "      <td>1</td>\n",
       "      <td>37</td>\n",
       "      <td>23</td>\n",
       "      <td>10.47</td>\n",
       "      <td>3239</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>33.964131</td>\n",
       "      <td>-118.272783</td>\n",
       "      <td>0</td>\n",
       "      <td>56.004</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58198</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>20.94</td>\n",
       "      <td>0.0</td>\n",
       "      <td>108.15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90003</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>42.30</td>\n",
       "      <td>1840.750000</td>\n",
       "      <td>0</td>\n",
       "      <td>53</td>\n",
       "      <td>10</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4307</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>34.076259</td>\n",
       "      <td>-118.310715</td>\n",
       "      <td>0</td>\n",
       "      <td>42.300</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>67852</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>4</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1840.75</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>90004</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>70.70</td>\n",
       "      <td>151.649994</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>56</td>\n",
       "      <td>9.12</td>\n",
       "      <td>2701</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>34.059281</td>\n",
       "      <td>-118.307420</td>\n",
       "      <td>0</td>\n",
       "      <td>73.528</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>43019</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>18.24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>151.65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>90005</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   gender  SeniorCitizen  Partner  Dependents  tenure  PhoneService  \\\n",
       "0       0              0        1           0       1             0   \n",
       "1       1              0        0           0      34             1   \n",
       "2       1              0        0           0       2             1   \n",
       "3       1              0        0           0      45             0   \n",
       "4       0              0        0           0       2             1   \n",
       "\n",
       "   PaperlessBilling  MonthlyCharges  TotalCharges  Churn  Age  \\\n",
       "0                 1           29.85     29.850000      0   36   \n",
       "1                 0           56.95   1889.500000      0   46   \n",
       "2                 1           53.85    108.150002      1   37   \n",
       "3                 0           42.30   1840.750000      0   53   \n",
       "4                 1           70.70    151.649994      1   19   \n",
       "\n",
       "   AvgMonthlyGBDownload  AvgMonthlyLongDistanceCharges  CLTV  \\\n",
       "0                    10                           0.00  3964   \n",
       "1                    16                          17.09  3441   \n",
       "2                    23                          10.47  3239   \n",
       "3                    10                           0.00  4307   \n",
       "4                    56                           9.12  2701   \n",
       "\n",
       "   DeviceProtectionPlan  Gender   Latitude   Longitude  Married  \\\n",
       "0                     0       0  33.973616 -118.249020        1   \n",
       "1                     1       1  33.949255 -118.246978        0   \n",
       "2                     0       1  33.964131 -118.272783        0   \n",
       "3                     1       1  34.076259 -118.310715        0   \n",
       "4                     0       0  34.059281 -118.307420        0   \n",
       "\n",
       "   MonthlyCharge  NumberofDependents  NumberofReferrals  Population  \\\n",
       "0         29.850                   0                  0       54492   \n",
       "1         56.950                   0                  0       44586   \n",
       "2         56.004                   0                  0       58198   \n",
       "3         42.300                   0                  0       67852   \n",
       "4         73.528                   2                  0       43019   \n",
       "\n",
       "   PremiumTechSupport  Product/ServiceIssuesReported  ReferredaFriend  \\\n",
       "0                   0                              0                0   \n",
       "1                   0                              0                0   \n",
       "2                   0                              0                0   \n",
       "3                   1                              0                0   \n",
       "4                   0                              0                0   \n",
       "\n",
       "   StreamingMusic  TenureinMonths  TotalCustomerSvcRequests  \\\n",
       "0               0               1                         2   \n",
       "1               0              34                         1   \n",
       "2               0               2                         4   \n",
       "3               0              45                         4   \n",
       "4               0               2                         0   \n",
       "\n",
       "   TotalExtraDataCharges  TotalLongDistanceCharges  TotalRefunds  \\\n",
       "0                   0.00                      0.00           0.0   \n",
       "1                  30.23                    581.06           0.0   \n",
       "2                   0.00                     20.94           0.0   \n",
       "3                   0.00                      0.00           0.0   \n",
       "4                   0.00                     18.24           0.0   \n",
       "\n",
       "   TotalRegularCharges  Under30  UnlimitedData  ZipCode  MultipleLines_1  \\\n",
       "0                29.85        0              1    90001                0   \n",
       "1              1889.50        0              1    90002                0   \n",
       "2               108.15        0              1    90003                0   \n",
       "3              1840.75        0              1    90004                0   \n",
       "4               151.65        1              1    90005                0   \n",
       "\n",
       "   MultipleLines_No phone service  InternetService_Fiber optic  \\\n",
       "0                               1                            0   \n",
       "1                               0                            0   \n",
       "2                               0                            0   \n",
       "3                               1                            0   \n",
       "4                               0                            1   \n",
       "\n",
       "   OnlineSecurity_1  OnlineSecurity_No internet service  OnlineBackup_1  \\\n",
       "0                 0                                   0               1   \n",
       "1                 1                                   0               0   \n",
       "2                 1                                   0               1   \n",
       "3                 1                                   0               0   \n",
       "4                 0                                   0               0   \n",
       "\n",
       "   OnlineBackup_No internet service  StreamingTV_1  \\\n",
       "0                                 0              0   \n",
       "1                                 0              0   \n",
       "2                                 0              0   \n",
       "3                                 0              0   \n",
       "4                                 0              0   \n",
       "\n",
       "   StreamingTV_No internet service  StreamingMovies_1  \\\n",
       "0                                0                  0   \n",
       "1                                0                  0   \n",
       "2                                0                  0   \n",
       "3                                0                  0   \n",
       "4                                0                  0   \n",
       "\n",
       "   StreamingMovies_No internet service  Contract_One year  Contract_Two year  \\\n",
       "0                                    0                  0                  0   \n",
       "1                                    0                  1                  0   \n",
       "2                                    0                  0                  0   \n",
       "3                                    0                  1                  0   \n",
       "4                                    0                  0                  0   \n",
       "\n",
       "   PaymentMethod_Credit card (automatic)  PaymentMethod_Electronic check  \\\n",
       "0                                      0                               1   \n",
       "1                                      0                               0   \n",
       "2                                      0                               0   \n",
       "3                                      0                               0   \n",
       "4                                      0                               1   \n",
       "\n",
       "   PaymentMethod_Mailed check  City_Acton  City_Adelanto  City_Adin  \\\n",
       "0                           0           0              0          0   \n",
       "1                           1           0              0          0   \n",
       "2                           1           0              0          0   \n",
       "3                           0           0              0          0   \n",
       "4                           0           0              0          0   \n",
       "\n",
       "   City_Agoura Hills  City_Aguanga  City_Ahwahnee  City_Alameda  City_Alamo  \\\n",
       "0                  0             0              0             0           0   \n",
       "1                  0             0              0             0           0   \n",
       "2                  0             0              0             0           0   \n",
       "3                  0             0              0             0           0   \n",
       "4                  0             0              0             0           0   \n",
       "\n",
       "   City_Albany  City_Albion  City_Alderpoint  City_Alhambra  City_Aliso Viejo  \\\n",
       "0            0            0                0              0                 0   \n",
       "1            0            0                0              0                 0   \n",
       "2            0            0                0              0                 0   \n",
       "3            0            0                0              0                 0   \n",
       "4            0            0                0              0                 0   \n",
       "\n",
       "   City_Alleghany  City_Alpaugh  City_Alpine  City_Alta  City_Altadena  \\\n",
       "0               0             0            0          0              0   \n",
       "1               0             0            0          0              0   \n",
       "2               0             0            0          0              0   \n",
       "3               0             0            0          0              0   \n",
       "4               0             0            0          0              0   \n",
       "\n",
       "   City_Alturas  City_Alviso  City_Amador City  City_Amboy  City_Anaheim  \\\n",
       "0             0            0                 0           0             0   \n",
       "1             0            0                 0           0             0   \n",
       "2             0            0                 0           0             0   \n",
       "3             0            0                 0           0             0   \n",
       "4             0            0                 0           0             0   \n",
       "\n",
       "   City_Anderson  City_Angels Camp  City_Angelus Oaks  City_Angwin  \\\n",
       "0              0                 0                  0            0   \n",
       "1              0                 0                  0            0   \n",
       "2              0                 0                  0            0   \n",
       "3              0                 0                  0            0   \n",
       "4              0                 0                  0            0   \n",
       "\n",
       "   City_Annapolis  City_Antelope  City_Antioch  City_Anza  City_Apple Valley  \\\n",
       "0               0              0             0          0                  0   \n",
       "1               0              0             0          0                  0   \n",
       "2               0              0             0          0                  0   \n",
       "3               0              0             0          0                  0   \n",
       "4               0              0             0          0                  0   \n",
       "\n",
       "   City_Applegate  City_Aptos  City_Arbuckle  City_Arcadia  City_Arcata  \\\n",
       "0               0           0              0             0            0   \n",
       "1               0           0              0             0            0   \n",
       "2               0           0              0             0            0   \n",
       "3               0           0              0             0            0   \n",
       "4               0           0              0             0            0   \n",
       "\n",
       "   City_Armona  City_Arnold  City_Aromas  City_Arroyo Grande  City_Artesia  \\\n",
       "0            0            0            0                   0             0   \n",
       "1            0            0            0                   0             0   \n",
       "2            0            0            0                   0             0   \n",
       "3            0            0            0                   0             0   \n",
       "4            0            0            0                   0             0   \n",
       "\n",
       "   City_Arvin  City_Atascadero  City_Atherton  City_Atwater  City_Auberry  \\\n",
       "0           0                0              0             0             0   \n",
       "1           0                0              0             0             0   \n",
       "2           0                0              0             0             0   \n",
       "3           0                0              0             0             0   \n",
       "4           0                0              0             0             0   \n",
       "\n",
       "   City_Auburn  City_Avalon  City_Avenal  City_Avery  City_Avila Beach  \\\n",
       "0            0            0            0           0                 0   \n",
       "1            0            0            0           0                 0   \n",
       "2            0            0            0           0                 0   \n",
       "3            0            0            0           0                 0   \n",
       "4            0            0            0           0                 0   \n",
       "\n",
       "   City_Azusa  City_Badger  City_Baker  City_Bakersfield  City_Baldwin Park  \\\n",
       "0           0            0           0                 0                  0   \n",
       "1           0            0           0                 0                  0   \n",
       "2           0            0           0                 0                  0   \n",
       "3           0            0           0                 0                  0   \n",
       "4           0            0           0                 0                  0   \n",
       "\n",
       "   City_Ballico  City_Bangor  City_Banning  City_Barstow  City_Bass Lake  \\\n",
       "0             0            0             0             0               0   \n",
       "1             0            0             0             0               0   \n",
       "2             0            0             0             0               0   \n",
       "3             0            0             0             0               0   \n",
       "4             0            0             0             0               0   \n",
       "\n",
       "   City_Bayside  City_Beale Afb  City_Beaumont  City_Bell  City_Bella Vista  \\\n",
       "0             0               0              0          0                 0   \n",
       "1             0               0              0          0                 0   \n",
       "2             0               0              0          0                 0   \n",
       "3             0               0              0          0                 0   \n",
       "4             0               0              0          0                 0   \n",
       "\n",
       "   City_Bellflower  City_Belmont  City_Belvedere Tiburon  City_Ben Lomond  \\\n",
       "0                0             0                       0                0   \n",
       "1                0             0                       0                0   \n",
       "2                0             0                       0                0   \n",
       "3                0             0                       0                0   \n",
       "4                0             0                       0                0   \n",
       "\n",
       "   City_Benicia  City_Benton  City_Berkeley  City_Berry Creek  \\\n",
       "0             0            0              0                 0   \n",
       "1             0            0              0                 0   \n",
       "2             0            0              0                 0   \n",
       "3             0            0              0                 0   \n",
       "4             0            0              0                 0   \n",
       "\n",
       "   City_Bethel Island  City_Beverly Hills  City_Bieber  City_Big Bar  \\\n",
       "0                   0                   0            0             0   \n",
       "1                   0                   0            0             0   \n",
       "2                   0                   0            0             0   \n",
       "3                   0                   0            0             0   \n",
       "4                   0                   0            0             0   \n",
       "\n",
       "   City_Big Bear City  City_Big Bear Lake  City_Big Bend  City_Big Creek  \\\n",
       "0                   0                   0              0               0   \n",
       "1                   0                   0              0               0   \n",
       "2                   0                   0              0               0   \n",
       "3                   0                   0              0               0   \n",
       "4                   0                   0              0               0   \n",
       "\n",
       "   City_Big Oak Flat  City_Big Pine  City_Biggs  City_Biola  \\\n",
       "0                  0              0           0           0   \n",
       "1                  0              0           0           0   \n",
       "2                  0              0           0           0   \n",
       "3                  0              0           0           0   \n",
       "4                  0              0           0           0   \n",
       "\n",
       "   City_Birds Landing  City_Bishop  City_Blairsden Graeagle  City_Blocksburg  \\\n",
       "0                   0            0                        0                0   \n",
       "1                   0            0                        0                0   \n",
       "2                   0            0                        0                0   \n",
       "3                   0            0                        0                0   \n",
       "4                   0            0                        0                0   \n",
       "\n",
       "   City_Bloomington  City_Blue Lake  City_Blythe  City_Bodega  \\\n",
       "0                 0               0            0            0   \n",
       "1                 0               0            0            0   \n",
       "2                 0               0            0            0   \n",
       "3                 0               0            0            0   \n",
       "4                 0               0            0            0   \n",
       "\n",
       "   City_Bodega Bay  City_Bodfish  City_Bolinas  City_Bonita  City_Bonsall  \\\n",
       "0                0             0             0            0             0   \n",
       "1                0             0             0            0             0   \n",
       "2                0             0             0            0             0   \n",
       "3                0             0             0            0             0   \n",
       "4                0             0             0            0             0   \n",
       "\n",
       "   City_Boonville  City_Boron  City_Borrego Springs  City_Boulder Creek  \\\n",
       "0               0           0                     0                   0   \n",
       "1               0           0                     0                   0   \n",
       "2               0           0                     0                   0   \n",
       "3               0           0                     0                   0   \n",
       "4               0           0                     0                   0   \n",
       "\n",
       "   City_Boulevard  City_Bradley  City_Branscomb  City_Brawley  City_Brea  \\\n",
       "0               0             0               0             0          0   \n",
       "1               0             0               0             0          0   \n",
       "2               0             0               0             0          0   \n",
       "3               0             0               0             0          0   \n",
       "4               0             0               0             0          0   \n",
       "\n",
       "   City_Brentwood  City_Bridgeport  City_Bridgeville  City_Brisbane  \\\n",
       "0               0                0                 0              0   \n",
       "1               0                0                 0              0   \n",
       "2               0                0                 0              0   \n",
       "3               0                0                 0              0   \n",
       "4               0                0                 0              0   \n",
       "\n",
       "   City_Brookdale  City_Brooks  City_Browns Valley  City_Brownsville  \\\n",
       "0               0            0                   0                 0   \n",
       "1               0            0                   0                 0   \n",
       "2               0            0                   0                 0   \n",
       "3               0            0                   0                 0   \n",
       "4               0            0                   0                 0   \n",
       "\n",
       "   City_Buellton  City_Buena Park  City_Burbank  City_Burlingame  City_Burney  \\\n",
       "0              0                0             0                0            0   \n",
       "1              0                0             0                0            0   \n",
       "2              0                0             0                0            0   \n",
       "3              0                0             0                0            0   \n",
       "4              0                0             0                0            0   \n",
       "\n",
       "   City_Burnt Ranch  City_Burson  City_Butte City  City_Buttonwillow  \\\n",
       "0                 0            0                0                  0   \n",
       "1                 0            0                0                  0   \n",
       "2                 0            0                0                  0   \n",
       "3                 0            0                0                  0   \n",
       "4                 0            0                0                  0   \n",
       "\n",
       "   City_Byron  City_Cabazon  City_Calabasas  City_Calexico  City_Caliente  \\\n",
       "0           0             0               0              0              0   \n",
       "1           0             0               0              0              0   \n",
       "2           0             0               0              0              0   \n",
       "3           0             0               0              0              0   \n",
       "4           0             0               0              0              0   \n",
       "\n",
       "   City_California City  City_California Hot Springs  City_Calimesa  \\\n",
       "0                     0                            0              0   \n",
       "1                     0                            0              0   \n",
       "2                     0                            0              0   \n",
       "3                     0                            0              0   \n",
       "4                     0                            0              0   \n",
       "\n",
       "   City_Calipatria  City_Calistoga  City_Callahan  City_Calpine  \\\n",
       "0                0               0              0             0   \n",
       "1                0               0              0             0   \n",
       "2                0               0              0             0   \n",
       "3                0               0              0             0   \n",
       "4                0               0              0             0   \n",
       "\n",
       "   City_Camarillo  City_Cambria  City_Camino  City_Camp Nelson  City_Campbell  \\\n",
       "0               0             0            0                 0              0   \n",
       "1               0             0            0                 0              0   \n",
       "2               0             0            0                 0              0   \n",
       "3               0             0            0                 0              0   \n",
       "4               0             0            0                 0              0   \n",
       "\n",
       "   City_Campo  City_Campo Seco  City_Camptonville  City_Canby  \\\n",
       "0           0                0                  0           0   \n",
       "1           0                0                  0           0   \n",
       "2           0                0                  0           0   \n",
       "3           0                0                  0           0   \n",
       "4           0                0                  0           0   \n",
       "\n",
       "   City_Canoga Park  City_Cantua Creek  City_Canyon Country  City_Canyon Dam  \\\n",
       "0                 0                  0                    0                0   \n",
       "1                 0                  0                    0                0   \n",
       "2                 0                  0                    0                0   \n",
       "3                 0                  0                    0                0   \n",
       "4                 0                  0                    0                0   \n",
       "\n",
       "   City_Capay  City_Capistrano Beach  City_Capitola  City_Cardiff By The Sea  \\\n",
       "0           0                      0              0                        0   \n",
       "1           0                      0              0                        0   \n",
       "2           0                      0              0                        0   \n",
       "3           0                      0              0                        0   \n",
       "4           0                      0              0                        0   \n",
       "\n",
       "   City_Carlotta  City_Carlsbad  City_Carmel  City_Carmel By The Sea  \\\n",
       "0              0              0            0                       0   \n",
       "1              0              0            0                       0   \n",
       "2              0              0            0                       0   \n",
       "3              0              0            0                       0   \n",
       "4              0              0            0                       0   \n",
       "\n",
       "   City_Carmel Valley  City_Carmichael  City_Carnelian Bay  City_Carpinteria  \\\n",
       "0                   0                0                   0                 0   \n",
       "1                   0                0                   0                 0   \n",
       "2                   0                0                   0                 0   \n",
       "3                   0                0                   0                 0   \n",
       "4                   0                0                   0                 0   \n",
       "\n",
       "   City_Carson  City_Caruthers  City_Casmalia  City_Caspar  City_Cassel  \\\n",
       "0            0               0              0            0            0   \n",
       "1            0               0              0            0            0   \n",
       "2            0               0              0            0            0   \n",
       "3            0               0              0            0            0   \n",
       "4            0               0              0            0            0   \n",
       "\n",
       "   City_Castaic  City_Castella  City_Castro Valley  City_Castroville  \\\n",
       "0             0              0                   0                 0   \n",
       "1             0              0                   0                 0   \n",
       "2             0              0                   0                 0   \n",
       "3             0              0                   0                 0   \n",
       "4             0              0                   0                 0   \n",
       "\n",
       "   City_Cathedral City  City_Catheys Valley  City_Cayucos  City_Cazadero  \\\n",
       "0                    0                    0             0              0   \n",
       "1                    0                    0             0              0   \n",
       "2                    0                    0             0              0   \n",
       "3                    0                    0             0              0   \n",
       "4                    0                    0             0              0   \n",
       "\n",
       "   City_Cedar Glen  City_Cedarville  City_Ceres  City_Cerritos  \\\n",
       "0                0                0           0              0   \n",
       "1                0                0           0              0   \n",
       "2                0                0           0              0   \n",
       "3                0                0           0              0   \n",
       "4                0                0           0              0   \n",
       "\n",
       "   City_Challenge  City_Chatsworth  City_Chester  City_Chico  City_Chilcoot  \\\n",
       "0               0                0             0           0              0   \n",
       "1               0                0             0           0              0   \n",
       "2               0                0             0           0              0   \n",
       "3               0                0             0           0              0   \n",
       "4               0                0             0           0              0   \n",
       "\n",
       "   City_Chino  City_Chino Hills  City_Chowchilla  City_Chualar  \\\n",
       "0           0                 0                0             0   \n",
       "1           0                 0                0             0   \n",
       "2           0                 0                0             0   \n",
       "3           0                 0                0             0   \n",
       "4           0                 0                0             0   \n",
       "\n",
       "   City_Chula Vista  City_Citrus Heights  City_Claremont  City_Clarksburg  \\\n",
       "0                 0                    0               0                0   \n",
       "1                 0                    0               0                0   \n",
       "2                 0                    0               0                0   \n",
       "3                 0                    0               0                0   \n",
       "4                 0                    0               0                0   \n",
       "\n",
       "   City_Clayton  City_Clearlake  City_Clearlake Oaks  City_Clements  \\\n",
       "0             0               0                    0              0   \n",
       "1             0               0                    0              0   \n",
       "2             0               0                    0              0   \n",
       "3             0               0                    0              0   \n",
       "4             0               0                    0              0   \n",
       "\n",
       "   City_Clio  City_Clipper Mills  City_Cloverdale  City_Clovis  \\\n",
       "0          0                   0                0            0   \n",
       "1          0                   0                0            0   \n",
       "2          0                   0                0            0   \n",
       "3          0                   0                0            0   \n",
       "4          0                   0                0            0   \n",
       "\n",
       "   City_Coachella  City_Coalinga  City_Coarsegold  City_Cobb  City_Coleville  \\\n",
       "0               0              0                0          0               0   \n",
       "1               0              0                0          0               0   \n",
       "2               0              0                0          0               0   \n",
       "3               0              0                0          0               0   \n",
       "4               0              0                0          0               0   \n",
       "\n",
       "   City_Colfax  City_Colton  City_Columbia  City_Colusa  City_Comptche  \\\n",
       "0            0            0              0            0              0   \n",
       "1            0            0              0            0              0   \n",
       "2            0            0              0            0              0   \n",
       "3            0            0              0            0              0   \n",
       "4            0            0              0            0              0   \n",
       "\n",
       "   City_Compton  City_Concord  City_Cool  City_Copperopolis  City_Corcoran  \\\n",
       "0             0             0          0                  0              0   \n",
       "1             0             0          0                  0              0   \n",
       "2             0             0          0                  0              0   \n",
       "3             0             0          0                  0              0   \n",
       "4             0             0          0                  0              0   \n",
       "\n",
       "   City_Corning  City_Corona  City_Corona Del Mar  City_Coronado  \\\n",
       "0             0            0                    0              0   \n",
       "1             0            0                    0              0   \n",
       "2             0            0                    0              0   \n",
       "3             0            0                    0              0   \n",
       "4             0            0                    0              0   \n",
       "\n",
       "   City_Corte Madera  City_Costa Mesa  City_Cotati  City_Cottonwood  \\\n",
       "0                  0                0            0                0   \n",
       "1                  0                0            0                0   \n",
       "2                  0                0            0                0   \n",
       "3                  0                0            0                0   \n",
       "4                  0                0            0                0   \n",
       "\n",
       "   City_Coulterville  City_Courtland  City_Covelo  City_Covina  \\\n",
       "0                  0               0            0            0   \n",
       "1                  0               0            0            0   \n",
       "2                  0               0            0            0   \n",
       "3                  0               0            0            0   \n",
       "4                  0               0            0            0   \n",
       "\n",
       "   City_Crescent Mills  City_Cressey  City_Crestline  City_Creston  \\\n",
       "0                    0             0               0             0   \n",
       "1                    0             0               0             0   \n",
       "2                    0             0               0             0   \n",
       "3                    0             0               0             0   \n",
       "4                    0             0               0             0   \n",
       "\n",
       "   City_Crockett  City_Crows Landing  City_Culver City  City_Cupertino  \\\n",
       "0              0                   0                 0               0   \n",
       "1              0                   0                 0               0   \n",
       "2              0                   0                 0               0   \n",
       "3              0                   0                 0               0   \n",
       "4              0                   0                 0               0   \n",
       "\n",
       "   City_Cutler  City_Cypress  City_Daggett  City_Daly City  City_Dana Point  \\\n",
       "0            0             0             0               0                0   \n",
       "1            0             0             0               0                0   \n",
       "2            0             0             0               0                0   \n",
       "3            0             0             0               0                0   \n",
       "4            0             0             0               0                0   \n",
       "\n",
       "   City_Danville  City_Darwin  City_Davenport  City_Davis  City_Davis Creek  \\\n",
       "0              0            0               0           0                 0   \n",
       "1              0            0               0           0                 0   \n",
       "2              0            0               0           0                 0   \n",
       "3              0            0               0           0                 0   \n",
       "4              0            0               0           0                 0   \n",
       "\n",
       "   City_Death Valley  City_Deer Park  City_Del Mar  City_Del Rey  City_Delano  \\\n",
       "0                  0               0             0             0            0   \n",
       "1                  0               0             0             0            0   \n",
       "2                  0               0             0             0            0   \n",
       "3                  0               0             0             0            0   \n",
       "4                  0               0             0             0            0   \n",
       "\n",
       "   City_Delhi  City_Denair  City_Descanso  City_Desert Center  \\\n",
       "0           0            0              0                   0   \n",
       "1           0            0              0                   0   \n",
       "2           0            0              0                   0   \n",
       "3           0            0              0                   0   \n",
       "4           0            0              0                   0   \n",
       "\n",
       "   City_Desert Hot Springs  City_Diamond Bar  City_Diamond Springs  \\\n",
       "0                        0                 0                     0   \n",
       "1                        0                 0                     0   \n",
       "2                        0                 0                     0   \n",
       "3                        0                 0                     0   \n",
       "4                        0                 0                     0   \n",
       "\n",
       "   City_Dillon Beach  City_Dinuba  City_Dixon  City_Dobbins  City_Dorris  \\\n",
       "0                  0            0           0             0            0   \n",
       "1                  0            0           0             0            0   \n",
       "2                  0            0           0             0            0   \n",
       "3                  0            0           0             0            0   \n",
       "4                  0            0           0             0            0   \n",
       "\n",
       "   City_Dos Palos  City_Dos Rios  City_Douglas City  City_Downey  \\\n",
       "0               0              0                  0            0   \n",
       "1               0              0                  0            0   \n",
       "2               0              0                  0            0   \n",
       "3               0              0                  0            0   \n",
       "4               0              0                  0            0   \n",
       "\n",
       "   City_Downieville  City_Doyle  City_Duarte  City_Dublin  City_Ducor  \\\n",
       "0                 0           0            0            0           0   \n",
       "1                 0           0            0            0           0   \n",
       "2                 0           0            0            0           0   \n",
       "3                 0           0            0            0           0   \n",
       "4                 0           0            0            0           0   \n",
       "\n",
       "   City_Dulzura  City_Duncans Mills  City_Dunlap  City_Dunnigan  \\\n",
       "0             0                   0            0              0   \n",
       "1             0                   0            0              0   \n",
       "2             0                   0            0              0   \n",
       "3             0                   0            0              0   \n",
       "4             0                   0            0              0   \n",
       "\n",
       "   City_Dunsmuir  City_Durham  City_Dutch Flat  City_Eagleville  \\\n",
       "0              0            0                0                0   \n",
       "1              0            0                0                0   \n",
       "2              0            0                0                0   \n",
       "3              0            0                0                0   \n",
       "4              0            0                0                0   \n",
       "\n",
       "   City_Earlimart  City_Earp  City_Echo Lake  City_Edwards  City_El Cajon  \\\n",
       "0               0          0               0             0              0   \n",
       "1               0          0               0             0              0   \n",
       "2               0          0               0             0              0   \n",
       "3               0          0               0             0              0   \n",
       "4               0          0               0             0              0   \n",
       "\n",
       "   City_El Centro  City_El Cerrito  City_El Dorado  City_El Dorado Hills  \\\n",
       "0               0                0               0                     0   \n",
       "1               0                0               0                     0   \n",
       "2               0                0               0                     0   \n",
       "3               0                0               0                     0   \n",
       "4               0                0               0                     0   \n",
       "\n",
       "   City_El Monte  City_El Nido  City_El Portal  City_El Segundo  \\\n",
       "0              0             0               0                0   \n",
       "1              0             0               0                0   \n",
       "2              0             0               0                0   \n",
       "3              0             0               0                0   \n",
       "4              0             0               0                0   \n",
       "\n",
       "   City_El Sobrante  City_Eldridge  City_Elk  City_Elk Creek  City_Elk Grove  \\\n",
       "0                 0              0         0               0               0   \n",
       "1                 0              0         0               0               0   \n",
       "2                 0              0         0               0               0   \n",
       "3                 0              0         0               0               0   \n",
       "4                 0              0         0               0               0   \n",
       "\n",
       "   City_Elmira  City_Elverta  City_Emeryville  City_Emigrant Gap  \\\n",
       "0            0             0                0                  0   \n",
       "1            0             0                0                  0   \n",
       "2            0             0                0                  0   \n",
       "3            0             0                0                  0   \n",
       "4            0             0                0                  0   \n",
       "\n",
       "   City_Encinitas  City_Encino  City_Escalon  City_Escondido  City_Esparto  \\\n",
       "0               0            0             0               0             0   \n",
       "1               0            0             0               0             0   \n",
       "2               0            0             0               0             0   \n",
       "3               0            0             0               0             0   \n",
       "4               0            0             0               0             0   \n",
       "\n",
       "   City_Essex  City_Etna  City_Eureka  City_Exeter  City_Fair Oaks  \\\n",
       "0           0          0            0            0               0   \n",
       "1           0          0            0            0               0   \n",
       "2           0          0            0            0               0   \n",
       "3           0          0            0            0               0   \n",
       "4           0          0            0            0               0   \n",
       "\n",
       "   City_Fairfax  City_Fairfield  City_Fall River Mills  City_Fallbrook  \\\n",
       "0             0               0                      0               0   \n",
       "1             0               0                      0               0   \n",
       "2             0               0                      0               0   \n",
       "3             0               0                      0               0   \n",
       "4             0               0                      0               0   \n",
       "\n",
       "   City_Farmersville  City_Farmington  City_Fawnskin  City_Fellows  \\\n",
       "0                  0                0              0             0   \n",
       "1                  0                0              0             0   \n",
       "2                  0                0              0             0   \n",
       "3                  0                0              0             0   \n",
       "4                  0                0              0             0   \n",
       "\n",
       "   City_Felton  City_Ferndale  City_Fiddletown  City_Fields Landing  \\\n",
       "0            0              0                0                    0   \n",
       "1            0              0                0                    0   \n",
       "2            0              0                0                    0   \n",
       "3            0              0                0                    0   \n",
       "4            0              0                0                    0   \n",
       "\n",
       "   City_Fillmore  City_Firebaugh  City_Fish Camp  City_Five Points  \\\n",
       "0              0               0               0                 0   \n",
       "1              0               0               0                 0   \n",
       "2              0               0               0                 0   \n",
       "3              0               0               0                 0   \n",
       "4              0               0               0                 0   \n",
       "\n",
       "   City_Flournoy  City_Folsom  City_Fontana  City_Foothill Ranch  \\\n",
       "0              0            0             0                    0   \n",
       "1              0            0             0                    0   \n",
       "2              0            0             0                    0   \n",
       "3              0            0             0                    0   \n",
       "4              0            0             0                    0   \n",
       "\n",
       "   City_Forbestown  City_Forest Falls  City_Forest Knolls  City_Forest Ranch  \\\n",
       "0                0                  0                   0                  0   \n",
       "1                0                  0                   0                  0   \n",
       "2                0                  0                   0                  0   \n",
       "3                0                  0                   0                  0   \n",
       "4                0                  0                   0                  0   \n",
       "\n",
       "   City_Foresthill  City_Forestville  City_Forks Of Salmon  City_Fort Bidwell  \\\n",
       "0                0                 0                     0                  0   \n",
       "1                0                 0                     0                  0   \n",
       "2                0                 0                     0                  0   \n",
       "3                0                 0                     0                  0   \n",
       "4                0                 0                     0                  0   \n",
       "\n",
       "   City_Fort Bragg  City_Fort Irwin  City_Fortuna  City_Fountain Valley  \\\n",
       "0                0                0             0                     0   \n",
       "1                0                0             0                     0   \n",
       "2                0                0             0                     0   \n",
       "3                0                0             0                     0   \n",
       "4                0                0             0                     0   \n",
       "\n",
       "   City_Fowler  City_Frazier Park  City_Freedom  City_Fremont  \\\n",
       "0            0                  0             0             0   \n",
       "1            0                  0             0             0   \n",
       "2            0                  0             0             0   \n",
       "3            0                  0             0             0   \n",
       "4            0                  0             0             0   \n",
       "\n",
       "   City_French Camp  City_French Gulch  City_Fresno  City_Friant  \\\n",
       "0                 0                  0            0            0   \n",
       "1                 0                  0            0            0   \n",
       "2                 0                  0            0            0   \n",
       "3                 0                  0            0            0   \n",
       "4                 0                  0            0            0   \n",
       "\n",
       "   City_Fullerton  City_Fulton  City_Galt  City_Garberville  \\\n",
       "0               0            0          0                 0   \n",
       "1               0            0          0                 0   \n",
       "2               0            0          0                 0   \n",
       "3               0            0          0                 0   \n",
       "4               0            0          0                 0   \n",
       "\n",
       "   City_Garden Grove  City_Garden Valley  City_Gardena  City_Gasquet  \\\n",
       "0                  0                   0             0             0   \n",
       "1                  0                   0             0             0   \n",
       "2                  0                   0             0             0   \n",
       "3                  0                   0             0             0   \n",
       "4                  0                   0             0             0   \n",
       "\n",
       "   City_Gazelle  City_Georgetown  City_Gerber  City_Geyserville  City_Gilroy  \\\n",
       "0             0                0            0                 0            0   \n",
       "1             0                0            0                 0            0   \n",
       "2             0                0            0                 0            0   \n",
       "3             0                0            0                 0            0   \n",
       "4             0                0            0                 0            0   \n",
       "\n",
       "   City_Glen Ellen  City_Glencoe  City_Glendale  City_Glendora  \\\n",
       "0                0             0              0              0   \n",
       "1                0             0              0              0   \n",
       "2                0             0              0              0   \n",
       "3                0             0              0              0   \n",
       "4                0             0              0              0   \n",
       "\n",
       "   City_Glenhaven  City_Glenn  City_Glennville  City_Gold Run  City_Goleta  \\\n",
       "0               0           0                0              0            0   \n",
       "1               0           0                0              0            0   \n",
       "2               0           0                0              0            0   \n",
       "3               0           0                0              0            0   \n",
       "4               0           0                0              0            0   \n",
       "\n",
       "   City_Gonzales  City_Goodyears Bar  City_Granada Hills  City_Grand Terrace  \\\n",
       "0              0                   0                   0                   0   \n",
       "1              0                   0                   0                   0   \n",
       "2              0                   0                   0                   0   \n",
       "3              0                   0                   0                   0   \n",
       "4              0                   0                   0                   0   \n",
       "\n",
       "   City_Granite Bay  City_Grass Valley  City_Graton  City_Green Valley Lake  \\\n",
       "0                 0                  0            0                       0   \n",
       "1                 0                  0            0                       0   \n",
       "2                 0                  0            0                       0   \n",
       "3                 0                  0            0                       0   \n",
       "4                 0                  0            0                       0   \n",
       "\n",
       "   City_Greenbrae  City_Greenfield  City_Greenview  City_Greenville  \\\n",
       "0               0                0               0                0   \n",
       "1               0                0               0                0   \n",
       "2               0                0               0                0   \n",
       "3               0                0               0                0   \n",
       "4               0                0               0                0   \n",
       "\n",
       "   City_Greenwood  City_Grenada  City_Gridley  City_Grimes  \\\n",
       "0               0             0             0            0   \n",
       "1               0             0             0            0   \n",
       "2               0             0             0            0   \n",
       "3               0             0             0            0   \n",
       "4               0             0             0            0   \n",
       "\n",
       "   City_Grizzly Flats  City_Groveland  City_Grover Beach  City_Guadalupe  \\\n",
       "0                   0               0                  0               0   \n",
       "1                   0               0                  0               0   \n",
       "2                   0               0                  0               0   \n",
       "3                   0               0                  0               0   \n",
       "4                   0               0                  0               0   \n",
       "\n",
       "   City_Gualala  City_Guatay  City_Guerneville  City_Guinda  City_Gustine  \\\n",
       "0             0            0                 0            0             0   \n",
       "1             0            0                 0            0             0   \n",
       "2             0            0                 0            0             0   \n",
       "3             0            0                 0            0             0   \n",
       "4             0            0                 0            0             0   \n",
       "\n",
       "   City_Hacienda Heights  City_Half Moon Bay  City_Hamilton City  \\\n",
       "0                      0                   0                   0   \n",
       "1                      0                   0                   0   \n",
       "2                      0                   0                   0   \n",
       "3                      0                   0                   0   \n",
       "4                      0                   0                   0   \n",
       "\n",
       "   City_Hanford  City_Happy Camp  City_Harbor City  City_Hat Creek  \\\n",
       "0             0                0                 0               0   \n",
       "1             0                0                 0               0   \n",
       "2             0                0                 0               0   \n",
       "3             0                0                 0               0   \n",
       "4             0                0                 0               0   \n",
       "\n",
       "   City_Hathaway Pines  City_Hawaiian Gardens  City_Hawthorne  City_Hayward  \\\n",
       "0                    0                      0               0             0   \n",
       "1                    0                      0               0             0   \n",
       "2                    0                      0               0             0   \n",
       "3                    0                      0               0             0   \n",
       "4                    0                      0               0             0   \n",
       "\n",
       "   City_Healdsburg  City_Heber  City_Helendale  City_Helm  City_Hemet  \\\n",
       "0                0           0               0          0           0   \n",
       "1                0           0               0          0           0   \n",
       "2                0           0               0          0           0   \n",
       "3                0           0               0          0           0   \n",
       "4                0           0               0          0           0   \n",
       "\n",
       "   City_Herald  City_Hercules  City_Herlong  City_Hermosa Beach  \\\n",
       "0            0              0             0                   0   \n",
       "1            0              0             0                   0   \n",
       "2            0              0             0                   0   \n",
       "3            0              0             0                   0   \n",
       "4            0              0             0                   0   \n",
       "\n",
       "   City_Hesperia  City_Hickman  City_Highland  City_Hilmar  City_Hinkley  \\\n",
       "0              0             0              0            0             0   \n",
       "1              0             0              0            0             0   \n",
       "2              0             0              0            0             0   \n",
       "3              0             0              0            0             0   \n",
       "4              0             0              0            0             0   \n",
       "\n",
       "   City_Holtville  City_Homeland  City_Homewood  City_Honeydew  City_Hood  \\\n",
       "0               0              0              0              0          0   \n",
       "1               0              0              0              0          0   \n",
       "2               0              0              0              0          0   \n",
       "3               0              0              0              0          0   \n",
       "4               0              0              0              0          0   \n",
       "\n",
       "   City_Hoopa  City_Hopland  City_Hornbrook  City_Hornitos  City_Hughson  \\\n",
       "0           0             0               0              0             0   \n",
       "1           0             0               0              0             0   \n",
       "2           0             0               0              0             0   \n",
       "3           0             0               0              0             0   \n",
       "4           0             0               0              0             0   \n",
       "\n",
       "   City_Hume  City_Huntington Beach  City_Huntington Park  City_Huron  \\\n",
       "0          0                      0                     0           0   \n",
       "1          0                      0                     0           0   \n",
       "2          0                      0                     0           0   \n",
       "3          0                      0                     0           0   \n",
       "4          0                      0                     0           0   \n",
       "\n",
       "   City_Hyampom  City_Hydesville  City_Idyllwild  City_Igo  City_Imperial  \\\n",
       "0             0                0               0         0              0   \n",
       "1             0                0               0         0              0   \n",
       "2             0                0               0         0              0   \n",
       "3             0                0               0         0              0   \n",
       "4             0                0               0         0              0   \n",
       "\n",
       "   City_Imperial Beach  City_Independence  City_Indian Wells  City_Indio  \\\n",
       "0                    0                  0                  0           0   \n",
       "1                    0                  0                  0           0   \n",
       "2                    0                  0                  0           0   \n",
       "3                    0                  0                  0           0   \n",
       "4                    0                  0                  0           0   \n",
       "\n",
       "   City_Inglewood  City_Inverness  City_Ione  City_Irvine  City_Isleton  \\\n",
       "0               0               0          0            0             0   \n",
       "1               0               0          0            0             0   \n",
       "2               0               0          0            0             0   \n",
       "3               0               0          0            0             0   \n",
       "4               0               0          0            0             0   \n",
       "\n",
       "   City_Ivanhoe  City_Jackson  City_Jacumba  City_Jamestown  City_Jamul  \\\n",
       "0             0             0             0               0           0   \n",
       "1             0             0             0               0           0   \n",
       "2             0             0             0               0           0   \n",
       "3             0             0             0               0           0   \n",
       "4             0             0             0               0           0   \n",
       "\n",
       "   City_Janesville  City_Jenner  City_Johannesburg  City_Jolon  \\\n",
       "0                0            0                  0           0   \n",
       "1                0            0                  0           0   \n",
       "2                0            0                  0           0   \n",
       "3                0            0                  0           0   \n",
       "4                0            0                  0           0   \n",
       "\n",
       "   City_Joshua Tree  City_Julian  City_Junction City  City_June Lake  \\\n",
       "0                 0            0                   0               0   \n",
       "1                 0            0                   0               0   \n",
       "2                 0            0                   0               0   \n",
       "3                 0            0                   0               0   \n",
       "4                 0            0                   0               0   \n",
       "\n",
       "   City_Keeler  City_Keene  City_Kelseyville  City_Kenwood  City_Kerman  \\\n",
       "0            0           0                 0             0            0   \n",
       "1            0           0                 0             0            0   \n",
       "2            0           0                 0             0            0   \n",
       "3            0           0                 0             0            0   \n",
       "4            0           0                 0             0            0   \n",
       "\n",
       "   City_Kernville  City_Kettleman City  City_Keyes  City_King City  \\\n",
       "0               0                    0           0               0   \n",
       "1               0                    0           0               0   \n",
       "2               0                    0           0               0   \n",
       "3               0                    0           0               0   \n",
       "4               0                    0           0               0   \n",
       "\n",
       "   City_Kings Beach  City_Kingsburg  City_Kirkwood  City_Klamath  \\\n",
       "0                 0               0              0             0   \n",
       "1                 0               0              0             0   \n",
       "2                 0               0              0             0   \n",
       "3                 0               0              0             0   \n",
       "4                 0               0              0             0   \n",
       "\n",
       "   City_Klamath River  City_Kneeland  City_Knights Landing  City_Korbel  \\\n",
       "0                   0              0                     0            0   \n",
       "1                   0              0                     0            0   \n",
       "2                   0              0                     0            0   \n",
       "3                   0              0                     0            0   \n",
       "4                   0              0                     0            0   \n",
       "\n",
       "   City_Kyburz  City_La Canada Flintridge  City_La Crescenta  City_La Grange  \\\n",
       "0            0                          0                  0               0   \n",
       "1            0                          0                  0               0   \n",
       "2            0                          0                  0               0   \n",
       "3            0                          0                  0               0   \n",
       "4            0                          0                  0               0   \n",
       "\n",
       "   City_La Habra  City_La Honda  City_La Jolla  City_La Mesa  City_La Mirada  \\\n",
       "0              0              0              0             0               0   \n",
       "1              0              0              0             0               0   \n",
       "2              0              0              0             0               0   \n",
       "3              0              0              0             0               0   \n",
       "4              0              0              0             0               0   \n",
       "\n",
       "   City_La Palma  City_La Puente  City_La Quinta  City_La Verne  \\\n",
       "0              0               0               0              0   \n",
       "1              0               0               0              0   \n",
       "2              0               0               0              0   \n",
       "3              0               0               0              0   \n",
       "4              0               0               0              0   \n",
       "\n",
       "   City_Ladera Ranch  City_Lafayette  City_Laguna Beach  City_Laguna Hills  \\\n",
       "0                  0               0                  0                  0   \n",
       "1                  0               0                  0                  0   \n",
       "2                  0               0                  0                  0   \n",
       "3                  0               0                  0                  0   \n",
       "4                  0               0                  0                  0   \n",
       "\n",
       "   City_Laguna Niguel  City_Lagunitas  City_Lake Arrowhead  \\\n",
       "0                   0               0                    0   \n",
       "1                   0               0                    0   \n",
       "2                   0               0                    0   \n",
       "3                   0               0                    0   \n",
       "4                   0               0                    0   \n",
       "\n",
       "   City_Lake Elsinore  City_Lake Forest  City_Lake Hughes  City_Lake Isabella  \\\n",
       "0                   0                 0                 0                   0   \n",
       "1                   0                 0                 0                   0   \n",
       "2                   0                 0                 0                   0   \n",
       "3                   0                 0                 0                   0   \n",
       "4                   0                 0                 0                   0   \n",
       "\n",
       "   City_Lakehead  City_Lakeport  City_Lakeshore  City_Lakeside  City_Lakewood  \\\n",
       "0              0              0               0              0              0   \n",
       "1              0              0               0              0              0   \n",
       "2              0              0               0              0              0   \n",
       "3              0              0               0              0              0   \n",
       "4              0              0               0              0              0   \n",
       "\n",
       "   City_Lamont  City_Lancaster  City_Landers  City_Larkspur  City_Lathrop  \\\n",
       "0            0               0             0              0             0   \n",
       "1            0               0             0              0             0   \n",
       "2            0               0             0              0             0   \n",
       "3            0               0             0              0             0   \n",
       "4            0               0             0              0             0   \n",
       "\n",
       "   City_Laton  City_Lawndale  City_Laytonville  City_Le Grand  City_Lebec  \\\n",
       "0           0              0                 0              0           0   \n",
       "1           0              0                 0              0           0   \n",
       "2           0              0                 0              0           0   \n",
       "3           0              0                 0              0           0   \n",
       "4           0              0                 0              0           0   \n",
       "\n",
       "   City_Lee Vining  City_Leggett  City_Lemon Cove  City_Lemon Grove  \\\n",
       "0                0             0                0                 0   \n",
       "1                0             0                0                 0   \n",
       "2                0             0                0                 0   \n",
       "3                0             0                0                 0   \n",
       "4                0             0                0                 0   \n",
       "\n",
       "   City_Lemoore  City_Lewiston  City_Likely  City_Lincoln  City_Linden  \\\n",
       "0             0              0            0             0            0   \n",
       "1             0              0            0             0            0   \n",
       "2             0              0            0             0            0   \n",
       "3             0              0            0             0            0   \n",
       "4             0              0            0             0            0   \n",
       "\n",
       "   City_Lindsay  City_Litchfield  City_Little River  City_Littlerock  \\\n",
       "0             0                0                  0                0   \n",
       "1             0                0                  0                0   \n",
       "2             0                0                  0                0   \n",
       "3             0                0                  0                0   \n",
       "4             0                0                  0                0   \n",
       "\n",
       "   City_Live Oak  City_Livermore  City_Livingston  City_Llano  City_Lockeford  \\\n",
       "0              0               0                0           0               0   \n",
       "1              0               0                0           0               0   \n",
       "2              0               0                0           0               0   \n",
       "3              0               0                0           0               0   \n",
       "4              0               0                0           0               0   \n",
       "\n",
       "   City_Lockwood  City_Lodi  City_Loleta  City_Loma Linda  City_Loma Mar  \\\n",
       "0              0          0            0                0              0   \n",
       "1              0          0            0                0              0   \n",
       "2              0          0            0                0              0   \n",
       "3              0          0            0                0              0   \n",
       "4              0          0            0                0              0   \n",
       "\n",
       "   City_Lomita  City_Lompoc  City_Long Barn  City_Long Beach  City_Lookout  \\\n",
       "0            0            0               0                0             0   \n",
       "1            0            0               0                0             0   \n",
       "2            0            0               0                0             0   \n",
       "3            0            0               0                0             0   \n",
       "4            0            0               0                0             0   \n",
       "\n",
       "   City_Loomis  City_Los Alamitos  City_Los Alamos  City_Los Altos  \\\n",
       "0            0                  0                0               0   \n",
       "1            0                  0                0               0   \n",
       "2            0                  0                0               0   \n",
       "3            0                  0                0               0   \n",
       "4            0                  0                0               0   \n",
       "\n",
       "   City_Los Angeles  City_Los Banos  City_Los Gatos  City_Los Molinos  \\\n",
       "0                 1               0               0                 0   \n",
       "1                 1               0               0                 0   \n",
       "2                 1               0               0                 0   \n",
       "3                 1               0               0                 0   \n",
       "4                 1               0               0                 0   \n",
       "\n",
       "   City_Los Olivos  City_Los Osos  City_Lost Hills  City_Lotus  \\\n",
       "0                0              0                0           0   \n",
       "1                0              0                0           0   \n",
       "2                0              0                0           0   \n",
       "3                0              0                0           0   \n",
       "4                0              0                0           0   \n",
       "\n",
       "   City_Lower Lake  City_Loyalton  City_Lucerne  City_Lucerne Valley  \\\n",
       "0                0              0             0                    0   \n",
       "1                0              0             0                    0   \n",
       "2                0              0             0                    0   \n",
       "3                0              0             0                    0   \n",
       "4                0              0             0                    0   \n",
       "\n",
       "   City_Ludlow  City_Lynwood  City_Lytle Creek  City_Macdoel  City_Mad River  \\\n",
       "0            0             0                 0             0               0   \n",
       "1            0             0                 0             0               0   \n",
       "2            0             0                 0             0               0   \n",
       "3            0             0                 0             0               0   \n",
       "4            0             0                 0             0               0   \n",
       "\n",
       "   City_Madeline  City_Madera  City_Madison  City_Magalia  City_Malibu  \\\n",
       "0              0            0             0             0            0   \n",
       "1              0            0             0             0            0   \n",
       "2              0            0             0             0            0   \n",
       "3              0            0             0             0            0   \n",
       "4              0            0             0             0            0   \n",
       "\n",
       "   City_Mammoth Lakes  City_Manchester  City_Manhattan Beach  City_Manteca  \\\n",
       "0                   0                0                     0             0   \n",
       "1                   0                0                     0             0   \n",
       "2                   0                0                     0             0   \n",
       "3                   0                0                     0             0   \n",
       "4                   0                0                     0             0   \n",
       "\n",
       "   City_Manton  City_March Air Reserve Base  City_Marina  City_Marina Del Rey  \\\n",
       "0            0                            0            0                    0   \n",
       "1            0                            0            0                    0   \n",
       "2            0                            0            0                    0   \n",
       "3            0                            0            0                    0   \n",
       "4            0                            0            0                    0   \n",
       "\n",
       "   City_Mariposa  City_Markleeville  City_Marshall  City_Martinez  \\\n",
       "0              0                  0              0              0   \n",
       "1              0                  0              0              0   \n",
       "2              0                  0              0              0   \n",
       "3              0                  0              0              0   \n",
       "4              0                  0              0              0   \n",
       "\n",
       "   City_Marysville  City_Mather  City_Maxwell  City_Maywood  City_Mc Farland  \\\n",
       "0                0            0             0             0                0   \n",
       "1                0            0             0             0                0   \n",
       "2                0            0             0             0                0   \n",
       "3                0            0             0             0                0   \n",
       "4                0            0             0             0                0   \n",
       "\n",
       "   City_Mc Kittrick  City_Mcarthur  City_Mccloud  City_Mckinleyville  \\\n",
       "0                 0              0             0                   0   \n",
       "1                 0              0             0                   0   \n",
       "2                 0              0             0                   0   \n",
       "3                 0              0             0                   0   \n",
       "4                 0              0             0                   0   \n",
       "\n",
       "   City_Meadow Valley  City_Meadow Vista  City_Mecca  City_Mendocino  \\\n",
       "0                   0                  0           0               0   \n",
       "1                   0                  0           0               0   \n",
       "2                   0                  0           0               0   \n",
       "3                   0                  0           0               0   \n",
       "4                   0                  0           0               0   \n",
       "\n",
       "   City_Menifee  City_Menlo Park  City_Mentone  City_Merced  City_Meridian  \\\n",
       "0             0                0             0            0              0   \n",
       "1             0                0             0            0              0   \n",
       "2             0                0             0            0              0   \n",
       "3             0                0             0            0              0   \n",
       "4             0                0             0            0              0   \n",
       "\n",
       "   City_Mi Wuk Village  City_Middletown  City_Midpines  City_Midway City  \\\n",
       "0                    0                0              0                 0   \n",
       "1                    0                0              0                 0   \n",
       "2                    0                0              0                 0   \n",
       "3                    0                0              0                 0   \n",
       "4                    0                0              0                 0   \n",
       "\n",
       "   City_Milford  City_Mill Creek  City_Mill Valley  City_Millbrae  \\\n",
       "0             0                0                 0              0   \n",
       "1             0                0                 0              0   \n",
       "2             0                0                 0              0   \n",
       "3             0                0                 0              0   \n",
       "4             0                0                 0              0   \n",
       "\n",
       "   City_Millville  City_Milpitas  City_Mineral  City_Mira Loma  \\\n",
       "0               0              0             0               0   \n",
       "1               0              0             0               0   \n",
       "2               0              0             0               0   \n",
       "3               0              0             0               0   \n",
       "4               0              0             0               0   \n",
       "\n",
       "   City_Miramonte  City_Miranda  City_Mission Hills  City_Mission Viejo  \\\n",
       "0               0             0                   0                   0   \n",
       "1               0             0                   0                   0   \n",
       "2               0             0                   0                   0   \n",
       "3               0             0                   0                   0   \n",
       "4               0             0                   0                   0   \n",
       "\n",
       "   City_Modesto  City_Mojave  City_Mokelumne Hill  City_Monrovia  \\\n",
       "0             0            0                    0              0   \n",
       "1             0            0                    0              0   \n",
       "2             0            0                    0              0   \n",
       "3             0            0                    0              0   \n",
       "4             0            0                    0              0   \n",
       "\n",
       "   City_Montara  City_Montclair  City_Monte Rio  City_Montebello  \\\n",
       "0             0               0               0                0   \n",
       "1             0               0               0                0   \n",
       "2             0               0               0                0   \n",
       "3             0               0               0                0   \n",
       "4             0               0               0                0   \n",
       "\n",
       "   City_Monterey  City_Monterey Park  City_Montgomery Creek  City_Montrose  \\\n",
       "0              0                   0                      0              0   \n",
       "1              0                   0                      0              0   \n",
       "2              0                   0                      0              0   \n",
       "3              0                   0                      0              0   \n",
       "4              0                   0                      0              0   \n",
       "\n",
       "   City_Moorpark  City_Moraga  City_Moreno Valley  City_Morgan Hill  \\\n",
       "0              0            0                   0                 0   \n",
       "1              0            0                   0                 0   \n",
       "2              0            0                   0                 0   \n",
       "3              0            0                   0                 0   \n",
       "4              0            0                   0                 0   \n",
       "\n",
       "   City_Morongo Valley  City_Morro Bay  City_Moss Beach  City_Moss Landing  \\\n",
       "0                    0               0                0                  0   \n",
       "1                    0               0                0                  0   \n",
       "2                    0               0                0                  0   \n",
       "3                    0               0                0                  0   \n",
       "4                    0               0                0                  0   \n",
       "\n",
       "   City_Mount Hamilton  City_Mount Hermon  City_Mount Laguna  \\\n",
       "0                    0                  0                  0   \n",
       "1                    0                  0                  0   \n",
       "2                    0                  0                  0   \n",
       "3                    0                  0                  0   \n",
       "4                    0                  0                  0   \n",
       "\n",
       "   City_Mount Shasta  City_Mountain Center  City_Mountain Ranch  \\\n",
       "0                  0                     0                    0   \n",
       "1                  0                     0                    0   \n",
       "2                  0                     0                    0   \n",
       "3                  0                     0                    0   \n",
       "4                  0                     0                    0   \n",
       "\n",
       "   City_Mountain View  City_Mt Baldy  City_Murphys  City_Murrieta  \\\n",
       "0                   0              0             0              0   \n",
       "1                   0              0             0              0   \n",
       "2                   0              0             0              0   \n",
       "3                   0              0             0              0   \n",
       "4                   0              0             0              0   \n",
       "\n",
       "   City_Myers Flat  City_Napa  City_National City  City_Navarro  City_Needles  \\\n",
       "0                0          0                   0             0             0   \n",
       "1                0          0                   0             0             0   \n",
       "2                0          0                   0             0             0   \n",
       "3                0          0                   0             0             0   \n",
       "4                0          0                   0             0             0   \n",
       "\n",
       "   City_Nevada City  City_New Cuyama  City_Newark  City_Newbury Park  \\\n",
       "0                 0                0            0                  0   \n",
       "1                 0                0            0                  0   \n",
       "2                 0                0            0                  0   \n",
       "3                 0                0            0                  0   \n",
       "4                 0                0            0                  0   \n",
       "\n",
       "   City_Newcastle  City_Newhall  City_Newman  City_Newport Beach  \\\n",
       "0               0             0            0                   0   \n",
       "1               0             0            0                   0   \n",
       "2               0             0            0                   0   \n",
       "3               0             0            0                   0   \n",
       "4               0             0            0                   0   \n",
       "\n",
       "   City_Newport Coast  City_Nicasio  City_Nice  City_Nicolaus  City_Niland  \\\n",
       "0                   0             0          0              0            0   \n",
       "1                   0             0          0              0            0   \n",
       "2                   0             0          0              0            0   \n",
       "3                   0             0          0              0            0   \n",
       "4                   0             0          0              0            0   \n",
       "\n",
       "   City_Nipomo  City_Nipton  City_Norco  City_North Fork  \\\n",
       "0            0            0           0                0   \n",
       "1            0            0           0                0   \n",
       "2            0            0           0                0   \n",
       "3            0            0           0                0   \n",
       "4            0            0           0                0   \n",
       "\n",
       "   City_North Highlands  City_North Hills  City_North Hollywood  \\\n",
       "0                     0                 0                     0   \n",
       "1                     0                 0                     0   \n",
       "2                     0                 0                     0   \n",
       "3                     0                 0                     0   \n",
       "4                     0                 0                     0   \n",
       "\n",
       "   City_North Palm Springs  City_North San Juan  City_Northridge  \\\n",
       "0                        0                    0                0   \n",
       "1                        0                    0                0   \n",
       "2                        0                    0                0   \n",
       "3                        0                    0                0   \n",
       "4                        0                    0                0   \n",
       "\n",
       "   City_Norwalk  City_Novato  City_Nubieber  City_Nuevo  City_O Neals  \\\n",
       "0             0            0              0           0             0   \n",
       "1             0            0              0           0             0   \n",
       "2             0            0              0           0             0   \n",
       "3             0            0              0           0             0   \n",
       "4             0            0              0           0             0   \n",
       "\n",
       "   City_Oak Park  City_Oak Run  City_Oak View  City_Oakdale  City_Oakhurst  \\\n",
       "0              0             0              0             0              0   \n",
       "1              0             0              0             0              0   \n",
       "2              0             0              0             0              0   \n",
       "3              0             0              0             0              0   \n",
       "4              0             0              0             0              0   \n",
       "\n",
       "   City_Oakland  City_Oakley  City_Occidental  City_Oceano  City_Oceanside  \\\n",
       "0             0            0                0            0               0   \n",
       "1             0            0                0            0               0   \n",
       "2             0            0                0            0               0   \n",
       "3             0            0                0            0               0   \n",
       "4             0            0                0            0               0   \n",
       "\n",
       "   City_Ocotillo  City_Ojai  City_Olancha  City_Old Station  City_Olema  \\\n",
       "0              0          0             0                 0           0   \n",
       "1              0          0             0                 0           0   \n",
       "2              0          0             0                 0           0   \n",
       "3              0          0             0                 0           0   \n",
       "4              0          0             0                 0           0   \n",
       "\n",
       "   City_Olivehurst  City_Olympic Valley  City_Ontario  City_Orange  \\\n",
       "0                0                    0             0            0   \n",
       "1                0                    0             0            0   \n",
       "2                0                    0             0            0   \n",
       "3                0                    0             0            0   \n",
       "4                0                    0             0            0   \n",
       "\n",
       "   City_Orange Cove  City_Orangevale  City_Oregon House  City_Orick  \\\n",
       "0                 0                0                  0           0   \n",
       "1                 0                0                  0           0   \n",
       "2                 0                0                  0           0   \n",
       "3                 0                0                  0           0   \n",
       "4                 0                0                  0           0   \n",
       "\n",
       "   City_Orinda  City_Orland  City_Orleans  City_Oro Grande  City_Orosi  \\\n",
       "0            0            0             0                0           0   \n",
       "1            0            0             0                0           0   \n",
       "2            0            0             0                0           0   \n",
       "3            0            0             0                0           0   \n",
       "4            0            0             0                0           0   \n",
       "\n",
       "   City_Oroville  City_Oxnard  City_Pacific Grove  City_Pacific Palisades  \\\n",
       "0              0            0                   0                       0   \n",
       "1              0            0                   0                       0   \n",
       "2              0            0                   0                       0   \n",
       "3              0            0                   0                       0   \n",
       "4              0            0                   0                       0   \n",
       "\n",
       "   City_Pacifica  City_Pacoima  City_Paicines  City_Pala  City_Palermo  \\\n",
       "0              0             0              0          0             0   \n",
       "1              0             0              0          0             0   \n",
       "2              0             0              0          0             0   \n",
       "3              0             0              0          0             0   \n",
       "4              0             0              0          0             0   \n",
       "\n",
       "   City_Palm Desert  City_Palm Springs  City_Palmdale  City_Palo Alto  \\\n",
       "0                 0                  0              0               0   \n",
       "1                 0                  0              0               0   \n",
       "2                 0                  0              0               0   \n",
       "3                 0                  0              0               0   \n",
       "4                 0                  0              0               0   \n",
       "\n",
       "   City_Palo Cedro  City_Palo Verde  City_Palomar Mountain  \\\n",
       "0                0                0                      0   \n",
       "1                0                0                      0   \n",
       "2                0                0                      0   \n",
       "3                0                0                      0   \n",
       "4                0                0                      0   \n",
       "\n",
       "   City_Palos Verdes Peninsula  City_Paradise  City_Paramount  \\\n",
       "0                            0              0               0   \n",
       "1                            0              0               0   \n",
       "2                            0              0               0   \n",
       "3                            0              0               0   \n",
       "4                            0              0               0   \n",
       "\n",
       "   City_Parker Dam  City_Parlier  City_Pasadena  City_Paskenta  \\\n",
       "0                0             0              0              0   \n",
       "1                0             0              0              0   \n",
       "2                0             0              0              0   \n",
       "3                0             0              0              0   \n",
       "4                0             0              0              0   \n",
       "\n",
       "   City_Paso Robles  City_Patterson  City_Pauma Valley  City_Paynes Creek  \\\n",
       "0                 0               0                  0                  0   \n",
       "1                 0               0                  0                  0   \n",
       "2                 0               0                  0                  0   \n",
       "3                 0               0                  0                  0   \n",
       "4                 0               0                  0                  0   \n",
       "\n",
       "   City_Pearblossom  City_Pebble Beach  City_Penn Valley  City_Penngrove  \\\n",
       "0                 0                  0                 0               0   \n",
       "1                 0                  0                 0               0   \n",
       "2                 0                  0                 0               0   \n",
       "3                 0                  0                 0               0   \n",
       "4                 0                  0                 0               0   \n",
       "\n",
       "   City_Penryn  City_Perris  City_Pescadero  City_Petaluma  City_Petrolia  \\\n",
       "0            0            0               0              0              0   \n",
       "1            0            0               0              0              0   \n",
       "2            0            0               0              0              0   \n",
       "3            0            0               0              0              0   \n",
       "4            0            0               0              0              0   \n",
       "\n",
       "   City_Phelan  City_Phillipsville  City_Philo  City_Pico Rivera  City_Piercy  \\\n",
       "0            0                   0           0                 0            0   \n",
       "1            0                   0           0                 0            0   \n",
       "2            0                   0           0                 0            0   \n",
       "3            0                   0           0                 0            0   \n",
       "4            0                   0           0                 0            0   \n",
       "\n",
       "   City_Pilot Hill  City_Pine Grove  City_Pine Valley  City_Pinecrest  \\\n",
       "0                0                0                 0               0   \n",
       "1                0                0                 0               0   \n",
       "2                0                0                 0               0   \n",
       "3                0                0                 0               0   \n",
       "4                0                0                 0               0   \n",
       "\n",
       "   City_Pinole  City_Pinon Hills  City_Pioneer  City_Pioneertown  City_Piru  \\\n",
       "0            0                 0             0                 0          0   \n",
       "1            0                 0             0                 0          0   \n",
       "2            0                 0             0                 0          0   \n",
       "3            0                 0             0                 0          0   \n",
       "4            0                 0             0                 0          0   \n",
       "\n",
       "   City_Pismo Beach  City_Pittsburg  City_Pixley  City_Placentia  \\\n",
       "0                 0               0            0               0   \n",
       "1                 0               0            0               0   \n",
       "2                 0               0            0               0   \n",
       "3                 0               0            0               0   \n",
       "4                 0               0            0               0   \n",
       "\n",
       "   City_Placerville  City_Planada  City_Platina  City_Playa Del Rey  \\\n",
       "0                 0             0             0                   0   \n",
       "1                 0             0             0                   0   \n",
       "2                 0             0             0                   0   \n",
       "3                 0             0             0                   0   \n",
       "4                 0             0             0                   0   \n",
       "\n",
       "   City_Pleasant Grove  City_Pleasant Hill  City_Pleasanton  City_Plymouth  \\\n",
       "0                    0                   0                0              0   \n",
       "1                    0                   0                0              0   \n",
       "2                    0                   0                0              0   \n",
       "3                    0                   0                0              0   \n",
       "4                    0                   0                0              0   \n",
       "\n",
       "   City_Point Arena  City_Point Reyes Station  City_Pollock Pines  \\\n",
       "0                 0                         0                   0   \n",
       "1                 0                         0                   0   \n",
       "2                 0                         0                   0   \n",
       "3                 0                         0                   0   \n",
       "4                 0                         0                   0   \n",
       "\n",
       "   City_Pomona  City_Pope Valley  City_Port Costa  City_Port Hueneme  \\\n",
       "0            0                 0                0                  0   \n",
       "1            0                 0                0                  0   \n",
       "2            0                 0                0                  0   \n",
       "3            0                 0                0                  0   \n",
       "4            0                 0                0                  0   \n",
       "\n",
       "   City_Porter Ranch  City_Porterville  City_Portola  City_Portola Valley  \\\n",
       "0                  0                 0             0                    0   \n",
       "1                  0                 0             0                    0   \n",
       "2                  0                 0             0                    0   \n",
       "3                  0                 0             0                    0   \n",
       "4                  0                 0             0                    0   \n",
       "\n",
       "   City_Posey  City_Potrero  City_Potter Valley  City_Poway  City_Prather  \\\n",
       "0           0             0                   0           0             0   \n",
       "1           0             0                   0           0             0   \n",
       "2           0             0                   0           0             0   \n",
       "3           0             0                   0           0             0   \n",
       "4           0             0                   0           0             0   \n",
       "\n",
       "   City_Princeton  City_Quincy  City_Raisin City  City_Ramona  City_Ranchita  \\\n",
       "0               0            0                 0            0              0   \n",
       "1               0            0                 0            0              0   \n",
       "2               0            0                 0            0              0   \n",
       "3               0            0                 0            0              0   \n",
       "4               0            0                 0            0              0   \n",
       "\n",
       "   City_Rancho Cordova  City_Rancho Cucamonga  City_Rancho Mirage  \\\n",
       "0                    0                      0                   0   \n",
       "1                    0                      0                   0   \n",
       "2                    0                      0                   0   \n",
       "3                    0                      0                   0   \n",
       "4                    0                      0                   0   \n",
       "\n",
       "   City_Rancho Palos Verdes  City_Rancho Santa Fe  \\\n",
       "0                         0                     0   \n",
       "1                         0                     0   \n",
       "2                         0                     0   \n",
       "3                         0                     0   \n",
       "4                         0                     0   \n",
       "\n",
       "   City_Rancho Santa Margarita  City_Randsburg  City_Ravendale  City_Raymond  \\\n",
       "0                            0               0               0             0   \n",
       "1                            0               0               0             0   \n",
       "2                            0               0               0             0   \n",
       "3                            0               0               0             0   \n",
       "4                            0               0               0             0   \n",
       "\n",
       "   City_Red Bluff  City_Redcrest  City_Redding  City_Redlands  \\\n",
       "0               0              0             0              0   \n",
       "1               0              0             0              0   \n",
       "2               0              0             0              0   \n",
       "3               0              0             0              0   \n",
       "4               0              0             0              0   \n",
       "\n",
       "   City_Redondo Beach  City_Redway  City_Redwood City  City_Redwood Valley  \\\n",
       "0                   0            0                  0                    0   \n",
       "1                   0            0                  0                    0   \n",
       "2                   0            0                  0                    0   \n",
       "3                   0            0                  0                    0   \n",
       "4                   0            0                  0                    0   \n",
       "\n",
       "   City_Reedley  City_Rescue  City_Reseda  City_Rialto  City_Richgrove  \\\n",
       "0             0            0            0            0               0   \n",
       "1             0            0            0            0               0   \n",
       "2             0            0            0            0               0   \n",
       "3             0            0            0            0               0   \n",
       "4             0            0            0            0               0   \n",
       "\n",
       "   City_Richmond  City_Richvale  City_Rio Dell  City_Rio Linda  City_Rio Nido  \\\n",
       "0              0              0              0               0              0   \n",
       "1              0              0              0               0              0   \n",
       "2              0              0              0               0              0   \n",
       "3              0              0              0               0              0   \n",
       "4              0              0              0               0              0   \n",
       "\n",
       "   City_Rio Oso  City_Rio Vista  City_Ripon  City_River Pines  City_Riverbank  \\\n",
       "0             0               0           0                 0               0   \n",
       "1             0               0           0                 0               0   \n",
       "2             0               0           0                 0               0   \n",
       "3             0               0           0                 0               0   \n",
       "4             0               0           0                 0               0   \n",
       "\n",
       "   City_Riverdale  City_Riverside  City_Rocklin  City_Rodeo  \\\n",
       "0               0               0             0           0   \n",
       "1               0               0             0           0   \n",
       "2               0               0             0           0   \n",
       "3               0               0             0           0   \n",
       "4               0               0             0           0   \n",
       "\n",
       "   City_Rohnert Park  City_Rosamond  City_Rosemead  City_Roseville  \\\n",
       "0                  0              0              0               0   \n",
       "1                  0              0              0               0   \n",
       "2                  0              0              0               0   \n",
       "3                  0              0              0               0   \n",
       "4                  0              0              0               0   \n",
       "\n",
       "   City_Rough And Ready  City_Round Mountain  City_Rowland Heights  \\\n",
       "0                     0                    0                     0   \n",
       "1                     0                    0                     0   \n",
       "2                     0                    0                     0   \n",
       "3                     0                    0                     0   \n",
       "4                     0                    0                     0   \n",
       "\n",
       "   City_Running Springs  City_Sacramento  City_Saint Helena  City_Salida  \\\n",
       "0                     0                0                  0            0   \n",
       "1                     0                0                  0            0   \n",
       "2                     0                0                  0            0   \n",
       "3                     0                0                  0            0   \n",
       "4                     0                0                  0            0   \n",
       "\n",
       "   City_Salinas  City_Salton City  City_Salyer  City_Samoa  City_San Andreas  \\\n",
       "0             0                 0            0           0                 0   \n",
       "1             0                 0            0           0                 0   \n",
       "2             0                 0            0           0                 0   \n",
       "3             0                 0            0           0                 0   \n",
       "4             0                 0            0           0                 0   \n",
       "\n",
       "   City_San Anselmo  City_San Ardo  City_San Bernardino  City_San Bruno  \\\n",
       "0                 0              0                    0               0   \n",
       "1                 0              0                    0               0   \n",
       "2                 0              0                    0               0   \n",
       "3                 0              0                    0               0   \n",
       "4                 0              0                    0               0   \n",
       "\n",
       "   City_San Carlos  City_San Clemente  City_San Diego  City_San Dimas  \\\n",
       "0                0                  0               0               0   \n",
       "1                0                  0               0               0   \n",
       "2                0                  0               0               0   \n",
       "3                0                  0               0               0   \n",
       "4                0                  0               0               0   \n",
       "\n",
       "   City_San Fernando  City_San Francisco  City_San Gabriel  City_San Geronimo  \\\n",
       "0                  0                   0                 0                  0   \n",
       "1                  0                   0                 0                  0   \n",
       "2                  0                   0                 0                  0   \n",
       "3                  0                   0                 0                  0   \n",
       "4                  0                   0                 0                  0   \n",
       "\n",
       "   City_San Gregorio  City_San Jacinto  City_San Joaquin  City_San Jose  \\\n",
       "0                  0                 0                 0              0   \n",
       "1                  0                 0                 0              0   \n",
       "2                  0                 0                 0              0   \n",
       "3                  0                 0                 0              0   \n",
       "4                  0                 0                 0              0   \n",
       "\n",
       "   City_San Juan Bautista  City_San Juan Capistrano  City_San Leandro  \\\n",
       "0                       0                         0                 0   \n",
       "1                       0                         0                 0   \n",
       "2                       0                         0                 0   \n",
       "3                       0                         0                 0   \n",
       "4                       0                         0                 0   \n",
       "\n",
       "   City_San Lorenzo  City_San Lucas  City_San Luis Obispo  City_San Marcos  \\\n",
       "0                 0               0                     0                0   \n",
       "1                 0               0                     0                0   \n",
       "2                 0               0                     0                0   \n",
       "3                 0               0                     0                0   \n",
       "4                 0               0                     0                0   \n",
       "\n",
       "   City_San Marino  City_San Martin  City_San Mateo  City_San Miguel  \\\n",
       "0                0                0               0                0   \n",
       "1                0                0               0                0   \n",
       "2                0                0               0                0   \n",
       "3                0                0               0                0   \n",
       "4                0                0               0                0   \n",
       "\n",
       "   City_San Pablo  City_San Pedro  City_San Quentin  City_San Rafael  \\\n",
       "0               0               0                 0                0   \n",
       "1               0               0                 0                0   \n",
       "2               0               0                 0                0   \n",
       "3               0               0                 0                0   \n",
       "4               0               0                 0                0   \n",
       "\n",
       "   City_San Ramon  City_San Simeon  City_San Ysidro  City_Sanger  \\\n",
       "0               0                0                0            0   \n",
       "1               0                0                0            0   \n",
       "2               0                0                0            0   \n",
       "3               0                0                0            0   \n",
       "4               0                0                0            0   \n",
       "\n",
       "   City_Santa Ana  City_Santa Barbara  City_Santa Clara  City_Santa Clarita  \\\n",
       "0               0                   0                 0                   0   \n",
       "1               0                   0                 0                   0   \n",
       "2               0                   0                 0                   0   \n",
       "3               0                   0                 0                   0   \n",
       "4               0                   0                 0                   0   \n",
       "\n",
       "   City_Santa Cruz  City_Santa Fe Springs  City_Santa Margarita  \\\n",
       "0                0                      0                     0   \n",
       "1                0                      0                     0   \n",
       "2                0                      0                     0   \n",
       "3                0                      0                     0   \n",
       "4                0                      0                     0   \n",
       "\n",
       "   City_Santa Maria  City_Santa Monica  City_Santa Paula  City_Santa Rosa  \\\n",
       "0                 0                  0                 0                0   \n",
       "1                 0                  0                 0                0   \n",
       "2                 0                  0                 0                0   \n",
       "3                 0                  0                 0                0   \n",
       "4                 0                  0                 0                0   \n",
       "\n",
       "   City_Santa Ynez  City_Santa Ysabel  City_Santee  City_Saratoga  \\\n",
       "0                0                  0            0              0   \n",
       "1                0                  0            0              0   \n",
       "2                0                  0            0              0   \n",
       "3                0                  0            0              0   \n",
       "4                0                  0            0              0   \n",
       "\n",
       "   City_Sausalito  City_Scotia  City_Scott Bar  City_Scotts Valley  \\\n",
       "0               0            0               0                   0   \n",
       "1               0            0               0                   0   \n",
       "2               0            0               0                   0   \n",
       "3               0            0               0                   0   \n",
       "4               0            0               0                   0   \n",
       "\n",
       "   City_Seal Beach  City_Seaside  City_Sebastopol  City_Seeley  \\\n",
       "0                0             0                0            0   \n",
       "1                0             0                0            0   \n",
       "2                0             0                0            0   \n",
       "3                0             0                0            0   \n",
       "4                0             0                0            0   \n",
       "\n",
       "   City_Seiad Valley  City_Selma  City_Sequoia National Park  City_Shafter  \\\n",
       "0                  0           0                           0             0   \n",
       "1                  0           0                           0             0   \n",
       "2                  0           0                           0             0   \n",
       "3                  0           0                           0             0   \n",
       "4                  0           0                           0             0   \n",
       "\n",
       "   City_Shandon  City_Shasta  City_Shasta Lake  City_Shaver Lake  \\\n",
       "0             0            0                 0                 0   \n",
       "1             0            0                 0                 0   \n",
       "2             0            0                 0                 0   \n",
       "3             0            0                 0                 0   \n",
       "4             0            0                 0                 0   \n",
       "\n",
       "   City_Sheep Ranch  City_Sheridan  City_Sherman Oaks  City_Shingle Springs  \\\n",
       "0                 0              0                  0                     0   \n",
       "1                 0              0                  0                     0   \n",
       "2                 0              0                  0                     0   \n",
       "3                 0              0                  0                     0   \n",
       "4                 0              0                  0                     0   \n",
       "\n",
       "   City_Shingletown  City_Shoshone  City_Sierra City  City_Sierra Madre  \\\n",
       "0                 0              0                 0                  0   \n",
       "1                 0              0                 0                  0   \n",
       "2                 0              0                 0                  0   \n",
       "3                 0              0                 0                  0   \n",
       "4                 0              0                 0                  0   \n",
       "\n",
       "   City_Sierraville  City_Silverado  City_Simi Valley  City_Sloughhouse  \\\n",
       "0                 0               0                 0                 0   \n",
       "1                 0               0                 0                 0   \n",
       "2                 0               0                 0                 0   \n",
       "3                 0               0                 0                 0   \n",
       "4                 0               0                 0                 0   \n",
       "\n",
       "   City_Smartville  City_Smith River  City_Snelling  City_Soda Springs  \\\n",
       "0                0                 0              0                  0   \n",
       "1                0                 0              0                  0   \n",
       "2                0                 0              0                  0   \n",
       "3                0                 0              0                  0   \n",
       "4                0                 0              0                  0   \n",
       "\n",
       "   City_Solana Beach  City_Soledad  City_Solvang  City_Somerset  \\\n",
       "0                  0             0             0              0   \n",
       "1                  0             0             0              0   \n",
       "2                  0             0             0              0   \n",
       "3                  0             0             0              0   \n",
       "4                  0             0             0              0   \n",
       "\n",
       "   City_Somes Bar  City_Somis  City_Sonoma  City_Sonora  City_Soquel  \\\n",
       "0               0           0            0            0            0   \n",
       "1               0           0            0            0            0   \n",
       "2               0           0            0            0            0   \n",
       "3               0           0            0            0            0   \n",
       "4               0           0            0            0            0   \n",
       "\n",
       "   City_Soulsbyville  City_South Dos Palos  City_South El Monte  \\\n",
       "0                  0                     0                    0   \n",
       "1                  0                     0                    0   \n",
       "2                  0                     0                    0   \n",
       "3                  0                     0                    0   \n",
       "4                  0                     0                    0   \n",
       "\n",
       "   City_South Gate  City_South Lake Tahoe  City_South Pasadena  \\\n",
       "0                0                      0                    0   \n",
       "1                0                      0                    0   \n",
       "2                0                      0                    0   \n",
       "3                0                      0                    0   \n",
       "4                0                      0                    0   \n",
       "\n",
       "   City_South San Francisco  City_Spreckels  City_Spring Valley  \\\n",
       "0                         0               0                   0   \n",
       "1                         0               0                   0   \n",
       "2                         0               0                   0   \n",
       "3                         0               0                   0   \n",
       "4                         0               0                   0   \n",
       "\n",
       "   City_Springville  City_Squaw Valley  City_Standish  City_Stanford  \\\n",
       "0                 0                  0              0              0   \n",
       "1                 0                  0              0              0   \n",
       "2                 0                  0              0              0   \n",
       "3                 0                  0              0              0   \n",
       "4                 0                  0              0              0   \n",
       "\n",
       "   City_Stanton  City_Stevenson Ranch  City_Stevinson  City_Stinson Beach  \\\n",
       "0             0                     0               0                   0   \n",
       "1             0                     0               0                   0   \n",
       "2             0                     0               0                   0   \n",
       "3             0                     0               0                   0   \n",
       "4             0                     0               0                   0   \n",
       "\n",
       "   City_Stirling City  City_Stockton  City_Stonyford  City_Stratford  \\\n",
       "0                   0              0               0               0   \n",
       "1                   0              0               0               0   \n",
       "2                   0              0               0               0   \n",
       "3                   0              0               0               0   \n",
       "4                   0              0               0               0   \n",
       "\n",
       "   City_Strathmore  City_Strawberry Valley  City_Studio City  City_Sugarloaf  \\\n",
       "0                0                       0                 0               0   \n",
       "1                0                       0                 0               0   \n",
       "2                0                       0                 0               0   \n",
       "3                0                       0                 0               0   \n",
       "4                0                       0                 0               0   \n",
       "\n",
       "   City_Suisun City  City_Sultana  City_Summerland  City_Sun City  \\\n",
       "0                 0             0                0              0   \n",
       "1                 0             0                0              0   \n",
       "2                 0             0                0              0   \n",
       "3                 0             0                0              0   \n",
       "4                 0             0                0              0   \n",
       "\n",
       "   City_Sun Valley  City_Sunland  City_Sunnyvale  City_Sunol  \\\n",
       "0                0             0               0           0   \n",
       "1                0             0               0           0   \n",
       "2                0             0               0           0   \n",
       "3                0             0               0           0   \n",
       "4                0             0               0           0   \n",
       "\n",
       "   City_Sunset Beach  City_Surfside  City_Susanville  City_Sutter  \\\n",
       "0                  0              0                0            0   \n",
       "1                  0              0                0            0   \n",
       "2                  0              0                0            0   \n",
       "3                  0              0                0            0   \n",
       "4                  0              0                0            0   \n",
       "\n",
       "   City_Sutter Creek  City_Sylmar  City_Taft  City_Tahoe City  \\\n",
       "0                  0            0          0                0   \n",
       "1                  0            0          0                0   \n",
       "2                  0            0          0                0   \n",
       "3                  0            0          0                0   \n",
       "4                  0            0          0                0   \n",
       "\n",
       "   City_Tahoe Vista  City_Tahoma  City_Tarzana  City_Taylorsville  \\\n",
       "0                 0            0             0                  0   \n",
       "1                 0            0             0                  0   \n",
       "2                 0            0             0                  0   \n",
       "3                 0            0             0                  0   \n",
       "4                 0            0             0                  0   \n",
       "\n",
       "   City_Tecate  City_Tehachapi  City_Tehama  City_Temecula  City_Temple City  \\\n",
       "0            0               0            0              0                 0   \n",
       "1            0               0            0              0                 0   \n",
       "2            0               0            0              0                 0   \n",
       "3            0               0            0              0                 0   \n",
       "4            0               0            0              0                 0   \n",
       "\n",
       "   City_Templeton  City_Termo  City_Terra Bella  City_The Sea Ranch  \\\n",
       "0               0           0                 0                   0   \n",
       "1               0           0                 0                   0   \n",
       "2               0           0                 0                   0   \n",
       "3               0           0                 0                   0   \n",
       "4               0           0                 0                   0   \n",
       "\n",
       "   City_Thermal  City_Thornton  City_Thousand Oaks  City_Thousand Palms  \\\n",
       "0             0              0                   0                    0   \n",
       "1             0              0                   0                    0   \n",
       "2             0              0                   0                    0   \n",
       "3             0              0                   0                    0   \n",
       "4             0              0                   0                    0   \n",
       "\n",
       "   City_Three Rivers  City_Tollhouse  City_Tomales  City_Topanga  City_Topaz  \\\n",
       "0                  0               0             0             0           0   \n",
       "1                  0               0             0             0           0   \n",
       "2                  0               0             0             0           0   \n",
       "3                  0               0             0             0           0   \n",
       "4                  0               0             0             0           0   \n",
       "\n",
       "   City_Torrance  City_Trabuco Canyon  City_Tracy  City_Tranquillity  \\\n",
       "0              0                    0           0                  0   \n",
       "1              0                    0           0                  0   \n",
       "2              0                    0           0                  0   \n",
       "3              0                    0           0                  0   \n",
       "4              0                    0           0                  0   \n",
       "\n",
       "   City_Traver  City_Travis Afb  City_Trinidad  City_Trinity Center  \\\n",
       "0            0                0              0                    0   \n",
       "1            0                0              0                    0   \n",
       "2            0                0              0                    0   \n",
       "3            0                0              0                    0   \n",
       "4            0                0              0                    0   \n",
       "\n",
       "   City_Tujunga  City_Tulare  City_Tulelake  City_Tuolumne  City_Tupman  \\\n",
       "0             0            0              0              0            0   \n",
       "1             0            0              0              0            0   \n",
       "2             0            0              0              0            0   \n",
       "3             0            0              0              0            0   \n",
       "4             0            0              0              0            0   \n",
       "\n",
       "   City_Turlock  City_Tustin  City_Twain  City_Twain Harte  \\\n",
       "0             0            0           0                 0   \n",
       "1             0            0           0                 0   \n",
       "2             0            0           0                 0   \n",
       "3             0            0           0                 0   \n",
       "4             0            0           0                 0   \n",
       "\n",
       "   City_Twentynine Palms  City_Twin Bridges  City_Ukiah  City_Union City  \\\n",
       "0                      0                  0           0                0   \n",
       "1                      0                  0           0                0   \n",
       "2                      0                  0           0                0   \n",
       "3                      0                  0           0                0   \n",
       "4                      0                  0           0                0   \n",
       "\n",
       "   City_Upland  City_Upper Lake  City_Vacaville  City_Valencia  \\\n",
       "0            0                0               0              0   \n",
       "1            0                0               0              0   \n",
       "2            0                0               0              0   \n",
       "3            0                0               0              0   \n",
       "4            0                0               0              0   \n",
       "\n",
       "   City_Vallecito  City_Vallejo  City_Valley Center  City_Valley Ford  \\\n",
       "0               0             0                   0                 0   \n",
       "1               0             0                   0                 0   \n",
       "2               0             0                   0                 0   \n",
       "3               0             0                   0                 0   \n",
       "4               0             0                   0                 0   \n",
       "\n",
       "   City_Valley Springs  City_Valley Village  City_Valyermo  City_Van Nuys  \\\n",
       "0                    0                    0              0              0   \n",
       "1                    0                    0              0              0   \n",
       "2                    0                    0              0              0   \n",
       "3                    0                    0              0              0   \n",
       "4                    0                    0              0              0   \n",
       "\n",
       "   City_Venice  City_Ventura  City_Vernalis  City_Victorville  \\\n",
       "0            0             0              0                 0   \n",
       "1            0             0              0                 0   \n",
       "2            0             0              0                 0   \n",
       "3            0             0              0                 0   \n",
       "4            0             0              0                 0   \n",
       "\n",
       "   City_Villa Park  City_Vina  City_Visalia  City_Vista  City_Volcano  \\\n",
       "0                0          0             0           0             0   \n",
       "1                0          0             0           0             0   \n",
       "2                0          0             0           0             0   \n",
       "3                0          0             0           0             0   \n",
       "4                0          0             0           0             0   \n",
       "\n",
       "   City_Wallace  City_Walnut  City_Walnut Creek  City_Walnut Grove  \\\n",
       "0             0            0                  0                  0   \n",
       "1             0            0                  0                  0   \n",
       "2             0            0                  0                  0   \n",
       "3             0            0                  0                  0   \n",
       "4             0            0                  0                  0   \n",
       "\n",
       "   City_Warner Springs  City_Wasco  City_Washington  City_Waterford  \\\n",
       "0                    0           0                0               0   \n",
       "1                    0           0                0               0   \n",
       "2                    0           0                0               0   \n",
       "3                    0           0                0               0   \n",
       "4                    0           0                0               0   \n",
       "\n",
       "   City_Watsonville  City_Weaverville  City_Weed  City_Weimar  City_Weldon  \\\n",
       "0                 0                 0          0            0            0   \n",
       "1                 0                 0          0            0            0   \n",
       "2                 0                 0          0            0            0   \n",
       "3                 0                 0          0            0            0   \n",
       "4                 0                 0          0            0            0   \n",
       "\n",
       "   City_Wendel  City_Weott  City_West Covina  City_West Hills  \\\n",
       "0            0           0                 0                0   \n",
       "1            0           0                 0                0   \n",
       "2            0           0                 0                0   \n",
       "3            0           0                 0                0   \n",
       "4            0           0                 0                0   \n",
       "\n",
       "   City_West Hollywood  City_West Point  City_West Sacramento  \\\n",
       "0                    0                0                     0   \n",
       "1                    0                0                     0   \n",
       "2                    0                0                     0   \n",
       "3                    0                0                     0   \n",
       "4                    0                0                     0   \n",
       "\n",
       "   City_Westlake Village  City_Westminster  City_Westmorland  City_Westport  \\\n",
       "0                      0                 0                 0              0   \n",
       "1                      0                 0                 0              0   \n",
       "2                      0                 0                 0              0   \n",
       "3                      0                 0                 0              0   \n",
       "4                      0                 0                 0              0   \n",
       "\n",
       "   City_Westwood  City_Wheatland  City_White Water  City_Whitmore  \\\n",
       "0              0               0                 0              0   \n",
       "1              0               0                 0              0   \n",
       "2              0               0                 0              0   \n",
       "3              0               0                 0              0   \n",
       "4              0               0                 0              0   \n",
       "\n",
       "   City_Whittier  City_Wildomar  City_Williams  City_Willits  \\\n",
       "0              0              0              0             0   \n",
       "1              0              0              0             0   \n",
       "2              0              0              0             0   \n",
       "3              0              0              0             0   \n",
       "4              0              0              0             0   \n",
       "\n",
       "   City_Willow Creek  City_Willows  City_Wilmington  City_Wilseyville  \\\n",
       "0                  0             0                0                 0   \n",
       "1                  0             0                0                 0   \n",
       "2                  0             0                0                 0   \n",
       "3                  0             0                0                 0   \n",
       "4                  0             0                0                 0   \n",
       "\n",
       "   City_Wilton  City_Winchester  City_Windsor  City_Winnetka  \\\n",
       "0            0                0             0              0   \n",
       "1            0                0             0              0   \n",
       "2            0                0             0              0   \n",
       "3            0                0             0              0   \n",
       "4            0                0             0              0   \n",
       "\n",
       "   City_Winterhaven  City_Winters  City_Winton  City_Wishon  \\\n",
       "0                 0             0            0            0   \n",
       "1                 0             0            0            0   \n",
       "2                 0             0            0            0   \n",
       "3                 0             0            0            0   \n",
       "4                 0             0            0            0   \n",
       "\n",
       "   City_Witter Springs  City_Wofford Heights  City_Woodacre  City_Woodbridge  \\\n",
       "0                    0                     0              0                0   \n",
       "1                    0                     0              0                0   \n",
       "2                    0                     0              0                0   \n",
       "3                    0                     0              0                0   \n",
       "4                    0                     0              0                0   \n",
       "\n",
       "   City_Woodlake  City_Woodland  City_Woodland Hills  City_Woody  \\\n",
       "0              0              0                    0           0   \n",
       "1              0              0                    0           0   \n",
       "2              0              0                    0           0   \n",
       "3              0              0                    0           0   \n",
       "4              0              0                    0           0   \n",
       "\n",
       "   City_Wrightwood  City_Yermo  City_Yorba Linda  City_Yorkville  \\\n",
       "0                0           0                 0               0   \n",
       "1                0           0                 0               0   \n",
       "2                0           0                 0               0   \n",
       "3                0           0                 0               0   \n",
       "4                0           0                 0               0   \n",
       "\n",
       "   City_Yountville  City_Yreka  City_Yuba City  City_Yucaipa  \\\n",
       "0                0           0               0             0   \n",
       "1                0           0               0             0   \n",
       "2                0           0               0             0   \n",
       "3                0           0               0             0   \n",
       "4                0           0               0             0   \n",
       "\n",
       "   City_Yucca Valley  City_Zenia  InternetType_DSL  InternetType_Fiber Optic  \\\n",
       "0                  0           0                 0                         1   \n",
       "1                  0           0                 0                         1   \n",
       "2                  0           0                 0                         1   \n",
       "3                  0           0                 1                         0   \n",
       "4                  0           0                 0                         0   \n",
       "\n",
       "   Offer_Offer A  Offer_Offer B  Offer_Offer C  Offer_Offer D  Offer_Offer E  \n",
       "0              0              0              0              0              1  \n",
       "1              0              0              0              0              0  \n",
       "2              0              0              0              0              0  \n",
       "3              0              0              0              0              0  \n",
       "4              0              0              0              0              0  "
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "31011d1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from rfpimp import permutation_importances, oob_classifier_accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "e2287564",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "y = data3.loc[:, \"Churn\"]\n",
    "X = data3.loc[:, data3.columns != \"Churn\"]\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=22)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "aeec14e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "rf = RandomForestClassifier().fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "db0bd55a",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'feature_names' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m~\\AppData\\Local\\Temp/ipykernel_13796/1726798683.py\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      3\u001b[0m     \u001b[0mrf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mX_test\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mn_repeats\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m10\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m42\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mn_jobs\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m-\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m )\n\u001b[1;32m----> 5\u001b[1;33m \u001b[0mforest_importances\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mSeries\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mimportances_mean\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mfeature_names\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      6\u001b[0m \u001b[0mforest_importances\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'feature_names' is not defined"
     ]
    }
   ],
   "source": [
    "from sklearn.inspection import permutation_importance\n",
    "result = permutation_importance(\n",
    "    rf, X_test, y_test, n_repeats=10, random_state=42, n_jobs=-1\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "5150bade",
   "metadata": {},
   "outputs": [],
   "source": [
    "forest_importances = pd.Series(result.importances_mean, index=X.columns)\n",
    "forest_importances = forest_importances.sort_values(ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "ccca761f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['TotalCustomerSvcRequests',\n",
       " 'Product/ServiceIssuesReported',\n",
       " 'MonthlyCharge',\n",
       " 'NumberofReferrals',\n",
       " 'Contract_Two year',\n",
       " 'TotalExtraDataCharges',\n",
       " 'NumberofDependents',\n",
       " 'PaymentMethod_Electronic check',\n",
       " 'ReferredaFriend',\n",
       " 'PaperlessBilling']"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top10var = []\n",
    "top10var = list(forest_importances.iloc[0:10].index)\n",
    "top10var"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 247,
   "id": "be6bc7e7",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\hp\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py:3607: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  self._set_item(key, value)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 247,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Top 10 most important according to RF\n",
    "top10var_corrdf = pd.DataFrame()\n",
    "top10var_corrdf = data3[top10var]\n",
    "top10var_corrdf[\"Churn\"] = list(data3[\"Churn\"])\n",
    "top10var_corrdf[\"CLTV\"] = list(data3[\"CLTV\"])\n",
    "\n",
    "corr = top10var_corrdf.corr()\n",
    "\n",
    "sns.heatmap(corr,\n",
    "            xticklabels = corr.columns,\n",
    "            yticklabels = corr.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a0e2812",
   "metadata": {},
   "source": [
    "From the heatmap, we can see the correlation between RF's top 10 predictors and Churn.\n",
    "\n",
    "Some of them intuitively makes sense, such as the more customer asks for help from the customer service, the more likely they are to leave the company. Also, the more referrals they bring in, the more likely they are to stay with the company.\n",
    "\n",
    "Additionally, as expected, CLTV and customer "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a4a5020",
   "metadata": {},
   "source": [
    "## Exploration based on Churn Value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "173902b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>gender</th>\n",
       "      <th>SeniorCitizen</th>\n",
       "      <th>Partner</th>\n",
       "      <th>Dependents</th>\n",
       "      <th>tenure</th>\n",
       "      <th>PhoneService</th>\n",
       "      <th>PaperlessBilling</th>\n",
       "      <th>MonthlyCharges</th>\n",
       "      <th>Age</th>\n",
       "      <th>AvgMonthlyGBDownload</th>\n",
       "      <th>AvgMonthlyLongDistanceCharges</th>\n",
       "      <th>CLTV</th>\n",
       "      <th>ChurnValue</th>\n",
       "      <th>DeviceProtectionPlan</th>\n",
       "      <th>Gender</th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Married</th>\n",
       "      <th>MonthlyCharge</th>\n",
       "      <th>NumberofDependents</th>\n",
       "      <th>NumberofReferrals</th>\n",
       "      <th>Population</th>\n",
       "      <th>PremiumTechSupport</th>\n",
       "      <th>Product/ServiceIssuesReported</th>\n",
       "      <th>ReferredaFriend</th>\n",
       "      <th>StreamingMusic</th>\n",
       "      <th>TenureinMonths</th>\n",
       "      <th>TotalCustomerSvcRequests</th>\n",
       "      <th>TotalExtraDataCharges</th>\n",
       "      <th>TotalLongDistanceCharges</th>\n",
       "      <th>TotalRefunds</th>\n",
       "      <th>TotalRegularCharges</th>\n",
       "      <th>Under30</th>\n",
       "      <th>UnlimitedData</th>\n",
       "      <th>ZipCode</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Churn</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.507344</td>\n",
       "      <td>0.128721</td>\n",
       "      <td>0.528218</td>\n",
       "      <td>0.344801</td>\n",
       "      <td>37.569965</td>\n",
       "      <td>0.901044</td>\n",
       "      <td>0.535562</td>\n",
       "      <td>61.265124</td>\n",
       "      <td>45.344414</td>\n",
       "      <td>19.915733</td>\n",
       "      <td>22.883572</td>\n",
       "      <td>4490.921337</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.362775</td>\n",
       "      <td>0.507344</td>\n",
       "      <td>36.259100</td>\n",
       "      <td>-119.787825</td>\n",
       "      <td>0.528218</td>\n",
       "      <td>61.265124</td>\n",
       "      <td>0.595284</td>\n",
       "      <td>2.468690</td>\n",
       "      <td>21483.028991</td>\n",
       "      <td>0.335137</td>\n",
       "      <td>0.135872</td>\n",
       "      <td>0.502126</td>\n",
       "      <td>0.340162</td>\n",
       "      <td>37.591225</td>\n",
       "      <td>0.877464</td>\n",
       "      <td>275.935481</td>\n",
       "      <td>862.952107</td>\n",
       "      <td>2.122279</td>\n",
       "      <td>2550.792103</td>\n",
       "      <td>0.212022</td>\n",
       "      <td>0.426169</td>\n",
       "      <td>93504.246811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.497592</td>\n",
       "      <td>0.254682</td>\n",
       "      <td>0.357945</td>\n",
       "      <td>0.174425</td>\n",
       "      <td>17.979133</td>\n",
       "      <td>0.909042</td>\n",
       "      <td>0.749064</td>\n",
       "      <td>74.441332</td>\n",
       "      <td>49.735688</td>\n",
       "      <td>24.419476</td>\n",
       "      <td>23.167635</td>\n",
       "      <td>4149.414660</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.291600</td>\n",
       "      <td>0.497592</td>\n",
       "      <td>36.026801</td>\n",
       "      <td>-119.670474</td>\n",
       "      <td>0.357945</td>\n",
       "      <td>77.369727</td>\n",
       "      <td>0.118245</td>\n",
       "      <td>0.521134</td>\n",
       "      <td>23957.214553</td>\n",
       "      <td>0.165864</td>\n",
       "      <td>0.784912</td>\n",
       "      <td>0.333868</td>\n",
       "      <td>0.389513</td>\n",
       "      <td>17.979133</td>\n",
       "      <td>2.615837</td>\n",
       "      <td>285.596501</td>\n",
       "      <td>433.917549</td>\n",
       "      <td>1.518983</td>\n",
       "      <td>1531.796094</td>\n",
       "      <td>0.162654</td>\n",
       "      <td>0.266988</td>\n",
       "      <td>93435.752809</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         gender  SeniorCitizen   Partner  Dependents     tenure  PhoneService  \\\n",
       "Churn                                                                           \n",
       "0      0.507344       0.128721  0.528218    0.344801  37.569965      0.901044   \n",
       "1      0.497592       0.254682  0.357945    0.174425  17.979133      0.909042   \n",
       "\n",
       "       PaperlessBilling  MonthlyCharges        Age  AvgMonthlyGBDownload  \\\n",
       "Churn                                                                      \n",
       "0              0.535562       61.265124  45.344414             19.915733   \n",
       "1              0.749064       74.441332  49.735688             24.419476   \n",
       "\n",
       "       AvgMonthlyLongDistanceCharges         CLTV  ChurnValue  \\\n",
       "Churn                                                           \n",
       "0                          22.883572  4490.921337         0.0   \n",
       "1                          23.167635  4149.414660         1.0   \n",
       "\n",
       "       DeviceProtectionPlan    Gender   Latitude   Longitude   Married  \\\n",
       "Churn                                                                    \n",
       "0                  0.362775  0.507344  36.259100 -119.787825  0.528218   \n",
       "1                  0.291600  0.497592  36.026801 -119.670474  0.357945   \n",
       "\n",
       "       MonthlyCharge  NumberofDependents  NumberofReferrals    Population  \\\n",
       "Churn                                                                       \n",
       "0          61.265124            0.595284           2.468690  21483.028991   \n",
       "1          77.369727            0.118245           0.521134  23957.214553   \n",
       "\n",
       "       PremiumTechSupport  Product/ServiceIssuesReported  ReferredaFriend  \\\n",
       "Churn                                                                       \n",
       "0                0.335137                       0.135872         0.502126   \n",
       "1                0.165864                       0.784912         0.333868   \n",
       "\n",
       "       StreamingMusic  TenureinMonths  TotalCustomerSvcRequests  \\\n",
       "Churn                                                             \n",
       "0            0.340162       37.591225                  0.877464   \n",
       "1            0.389513       17.979133                  2.615837   \n",
       "\n",
       "       TotalExtraDataCharges  TotalLongDistanceCharges  TotalRefunds  \\\n",
       "Churn                                                                  \n",
       "0                 275.935481                862.952107      2.122279   \n",
       "1                 285.596501                433.917549      1.518983   \n",
       "\n",
       "       TotalRegularCharges   Under30  UnlimitedData       ZipCode  \n",
       "Churn                                                              \n",
       "0              2550.792103  0.212022       0.426169  93504.246811  \n",
       "1              1531.796094  0.162654       0.266988  93435.752809  "
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "perChurn_data = pd.DataFrame()\n",
    "perChurn_data = data.groupby([\"Churn\"]).mean()\n",
    "perChurn_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3e838dd",
   "metadata": {},
   "source": [
    "## Exploration based on CLTV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "9617e05b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    7043.000000\n",
       "mean     4400.295755\n",
       "std      1183.057152\n",
       "min      2003.000000\n",
       "25%      3469.000000\n",
       "50%      4527.000000\n",
       "75%      5380.500000\n",
       "max      6500.000000\n",
       "Name: CLTV, dtype: float64"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[\"CLTV\"].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "id": "6091c033",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x198557465c8>"
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.displot(\n",
    "    data = data,\n",
    "    x = \"CLTV\",\n",
    "    kind = \"kde\",\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 246,
   "id": "cc3f8252",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "perCity_data = pd.DataFrame()\n",
    "perCity_data = data.groupby([\"City\"]).mean()\n",
    "perCity_data = perCity_data.sort_values(by=[\"CLTV\"], ascending = False)\n",
    "top10cities_CLTV = perCity_data.iloc[0:10]\n",
    "\n",
    "sns.set_style(style=\"whitegrid\") # set seaborn plot style\n",
    "sizes= top10cities_CLTV[\"CLTV\"].values# proportions of the categories\n",
    "label= top10cities_CLTV.index\n",
    "squarify.plot(sizes=sizes, label=label, alpha=0.6).set(title='Treemap of Top 10 Cities with CLTV Average')\n",
    "plt.axis('off')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f7ebc216",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
